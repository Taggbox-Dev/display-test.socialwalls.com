{"version":3,"file":"static/js/7609.c50023a1.chunk.js","mappings":"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","sources":["app/Themes/HorizontalColumns/index.js"],"sourcesContent":["import React, { Component, Suspense, memo, lazy } from \"react\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport { connect } from \"react-redux\";\r\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\r\nimport { getDataNextSteps } from '../../../actions/themeActions'\r\nimport { isTagEmbed, isTagShop, isTagShopEditor, isTagbox } from \"../../../actions/api\";\r\nimport { IS_THEME, mainClass, detectMobile } from '../../../utils'\r\nimport '../scss/ThemesSplide.scss'\r\nimport './scss/HorizontalColumns.scss'\r\nconst Card = lazy(() => import( \"./Elements/Card\"));\r\nclass HorizontalColumn extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.inputRefs = {};\r\n  }\r\n  state = {\r\n    windowWidth: document.getElementById(mainClass) && document.getElementById(mainClass).clientWidth ? document.getElementById(mainClass).clientWidth : window.innerWidth,\r\n    sliderHeight: 300\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.onScreenLoad()\r\n  }\r\n  onScreenLoad = () => {\r\n    const { renderId } = this.props.renderId\r\n    this.setState({\r\n      windowWidth: renderId ? document.getElementById(renderId).clientWidth : document.getElementById(mainClass) && document.getElementById(mainClass).clientWidth ? document.getElementById(mainClass).clientWidth : window.innerWidth\r\n    })\r\n  }\r\n\r\n  requestData = () => {\r\n    const { appendData, wall, preRender, hasMoreData, getDataNextSteps } = this.props;\r\n    if (hasMoreData) {\r\n      getDataNextSteps(\r\n        wall.Wall.id,\r\n        Math.floor(Date.now() / 1000),\r\n        wall.ThemeRule.numberOfPosts,\r\n        appendData.networkID,\r\n        appendData.after,\r\n        preRender,\r\n        appendData.heightEvent\r\n      );\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    var slider = document.querySelector('.tb_hc_post_slider');\r\n    var height = slider ? slider.offsetHeight : this.state.height;\r\n    var self = this;\r\n    setTimeout(() => {\r\n      this.setState({\r\n        sliderHeight: height\r\n      })\r\n      const classNameRole = document.querySelectorAll('.splide__slide');\r\n      classNameRole.forEach((element) => {\r\n        element.removeAttribute(\"role\");\r\n      });\r\n    }, 100);\r\n    const { postData } = this.props;\r\n\r\n    if (postData && postData.length == 1) {\r\n\r\n      let arrow_left_id = document.querySelector(\".tb_hc_arrow_left__\")\r\n      let arrow_right_id = document.querySelector(\".tb_hc_arrow_right__\")\r\n      if (arrow_left_id && arrow_right_id) {\r\n        document.querySelector(\".tb_hc_arrow_left__\").style = 'display:none'\r\n        document.querySelector(\".tb_hc_arrow_right__\").style = 'display:none'\r\n      }\r\n\r\n\r\n\r\n      document.body.addEventListener('click', function () { myFunction() });\r\n\r\n      myFunction();\r\n\r\n      function myFunction() {\r\n        setTimeout(() => {\r\n\r\n          let splide01 = document.querySelector(\".splide__list\");\r\n\r\n          if (splide01 != null) {\r\n            splide01.style.transform = 'translateX(0)';\r\n          }\r\n        }, 100);\r\n      }\r\n      window.addEventListener(\"resize\", myFunction);\r\n    }\r\n    else {\r\n      window.addEventListener(\"resize\", () => {\r\n        this.onScreenLoad();\r\n      });\r\n    }\r\n\r\n    let splide02 = document.querySelector(\"#kt_aside_toggle\");\r\n    if (splide02 != null) {\r\n      splide02.addEventListener(\"click\", this.reScrolled)\r\n    }\r\n\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n\r\n  }\r\n  handleKeyPress = event => {\r\n    try {\r\n      const { wall } = this.props\r\n      if (wall.ThemeRule.slidePost == 1) {\r\n        const isInput = ['INPUT', 'TEXTAREA'].includes(event.target.tagName);\r\n        if (!isInput && event.code === 'Space') {\r\n          const { parentID } = this.props\r\n          event.preventDefault(); // Prevent scrolling the page\r\n          var Autoplay = this.inputRefs[parentID].splide.Components.Autoplay;\r\n          if (Autoplay.isPaused()) Autoplay.play();\r\n          else Autoplay.pause();\r\n        }\r\n      }\r\n    }\r\n    catch (error) {\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  reScrolled = () => {\r\n\r\n    setTimeout(() => {\r\n      let splide__list = document.querySelector('.splide__list');\r\n      let getWidth = document.querySelector(\".splide__slide\").offsetWidth;\r\n      const isVisibleAll = document.querySelectorAll('.splide__slide.is-visible').length;\r\n      const isVisible = document.querySelector('.splide__slide.is-active.is-visible');\r\n      const str = isVisible.getAttribute('aria-label').substring(0, 2)\r\n      const getIndex = Number(str) + (isVisibleAll - 1) + isVisibleAll\r\n      if (getIndex > 0) {\r\n        splide__list.style.transition = '0s ease';\r\n        splide__list.style.transform = `translateX(-${(getIndex * getWidth)}px)`;\r\n\r\n      } else {\r\n        splide__list.style.transform = `translateX(0px)`;\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    var slider = document.querySelector('.tb_hc_post_slider');\r\n    var height = slider ? slider.offsetHeight : this.state.height;\r\n    if ((height + 15) != this.state.sliderHeight) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          sliderHeight: height + 15\r\n        })\r\n      }, 100);\r\n    }\r\n  }\r\n  autoScrollSlider = (splide, prev, next, destIndex) => {\r\n    const { wall } = this.props\r\n    const autoScrollStatus = wall.Personalization.autoScrollStatus;\r\n    if (autoScrollStatus == 1) {\r\n      const currentIndex = isTagEmbed ? (splide[\"_o\"].perPage + splide.index) : splide.index\r\n      const slideLength = splide.length\r\n      const permove = isTagEmbed ? 1 : splide[\"_o\"].perPage\r\n      if (slideLength - currentIndex === permove) this.requestData()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { postData, completeDataObject, wall, clickToShowPopUp, hasMoreData, onClickToCTA, parentID, keyRender, languageSetting, cardNumber, onClickPopUpSlider } = this.props;\r\n\r\n    const { sliderHeight } = this.state\r\n    const inputName = parentID;\r\n    const { windowWidth } = this.state;\r\n    const numberOfPosts = wall.ThemeRule.numberOfPosts;\r\n    const numberOfCoumn = wall.ThemeRule.numberOfCoumn;\r\n    const mobileColumn = wall.ThemeRule.mobileColumn;\r\n    const slidePost = wall.ThemeRule.slidePost && !isTagShop;\r\n    const slideDuration = wall.ThemeRule.slideDuration;\r\n    const autoScrollStatus = wall.Personalization.autoScrollStatus;\r\n    const trimContent = wall.Personalization.trimcontent === 1 ? true : false;\r\n    const isMobileStatus = isTagEmbed ? detectMobile() : windowWidth < 768 || isMobile ? true : false\r\n\r\n    const renderCount = numberOfPosts > parseInt(cardNumber) ? parseInt(cardNumber) : numberOfPosts\r\n    const manageItemCount = (postData && postData.length) ? isMobileStatus ? 1 : postData.length > renderCount ? renderCount : postData.length : 3\r\n    const desktopCount = (postData && postData.length) ? isMobileStatus ? 1 : postData.length > renderCount ? renderCount : postData.length : 4\r\n    let typeparms = !isMobileStatus ? { type: autoScrollStatus === 1 || postData.length === 1 ? 'loop' : 'loop' } : {}\r\n    const cloneStatus = isTagEmbed && wall.Personalization?.clonePost !== undefined ? wall.Personalization.clonePost === 0 ? { clones: 0 } : {} : {};\r\n    const isType = autoScrollStatus != 1 ? Object.keys(cloneStatus).length > 0 ? false : 'slide' : 'slide'\r\n    const newData = ((manageItemCount == postData.length) || (desktopCount == postData.length)) && Object.keys(cloneStatus).length == 0 ? Array(2).fill(postData).flat() : postData\r\n    const lineTrim = wall.ThemeRule.lineTrim\r\n    const equalHeight = !isTagEmbed && trimContent ? true : false\r\n    const settings = {\r\n      ...cloneStatus,\r\n      type: autoScrollStatus === 1 ? false : isType,\r\n      role: 'article',\r\n      label: 'social widget',\r\n      rewind: true,\r\n      speed: 1000,\r\n      loop: autoScrollStatus === 1 ? false : true,\r\n      interval: slidePost ? slideDuration * 1000 : 5000,\r\n      perPage: numberOfCoumn > 0 ? numberOfCoumn : isMobileStatus ? 1 : postData.length > renderCount ? renderCount : postData.length,\r\n      gap: 0,\r\n      perMove: isTagEmbed ? 1 : false,\r\n      autoplay: slidePost ? true : false,\r\n      padding: \"0\",\r\n      pagination: false,\r\n      arrows: isMobileStatus ? true : postData.length >= (numberOfCoumn > 0 ? numberOfCoumn : desktopCount) ? true : false,\r\n      fixedHeight: equalHeight,\r\n      breakpoints: {\r\n        560: {\r\n          perPage: mobileColumn > 0 ? mobileColumn : 1,\r\n          perMove: mobileColumn > 0 ? mobileColumn : 1,\r\n          arrows: postData.length >= (mobileColumn > 0 ? mobileColumn : 1) ? true : false\r\n        },\r\n        767: {\r\n          perPage: numberOfCoumn > 0 ? (numberOfCoumn - 3) < 1 ? numberOfCoumn : numberOfCoumn - 3 : manageItemCount,\r\n          arrows: postData.length >= (numberOfCoumn > 0 ? (numberOfCoumn - 3) < 1 ? numberOfCoumn : numberOfCoumn - 3 : manageItemCount) ? true : false\r\n        },\r\n        991: {\r\n          perPage: numberOfCoumn > 0 ? (numberOfCoumn - 4) < 1 ? numberOfCoumn : (numberOfCoumn - 4) : manageItemCount,\r\n          arrows: postData.length >= (numberOfCoumn > 0 ? (numberOfCoumn - 4) < 1 ? numberOfCoumn : (numberOfCoumn - 4) : manageItemCount) ? true : false\r\n        },\r\n        1200: {\r\n          perPage: numberOfCoumn > 0 ? numberOfCoumn - 1 == 0 ? numberOfCoumn : numberOfCoumn - 1 : manageItemCount,\r\n          arrows: postData.length >= (numberOfCoumn > 0 ? numberOfCoumn - 1 == 0 ? numberOfCoumn : numberOfCoumn - 1 : manageItemCount) ? true : false\r\n        },\r\n        1600: {\r\n          perPage: numberOfCoumn > 0 ? numberOfCoumn : desktopCount,\r\n          arrows: postData.length >= (numberOfCoumn > 0 ? numberOfCoumn : desktopCount) ? true : false\r\n        }\r\n      }\r\n    };\r\n    return <>{parentID != \"\" ?\r\n      <div className=\"tb_hc_post_container\" ref={this.sliderHeight} style={{ minHeight: sliderHeight }}>\r\n        <Splide hasTrack={false} className={`tb_hc_post_slider ${equalHeight ? 'tb_hc_fixed_height' : ''}`} options={settings} ref={(parentID) => this.inputRefs[inputName] = parentID} tag=\"section\" onMove={this.autoScrollSlider}>\r\n          <SplideTrack>\r\n            {\r\n              ((newData && newData.length > 0)) && newData.map((item, index) => {\r\n                const cardData = completeDataObject[item];\r\n                return <SplideSlide key={index} p_id={parentID} className={`tb_${cardData.id}`}>\r\n                  <Suspense fallback={<></>}><Card ownerId={wall.Wall.owner} itemData={cardData} itemIndex={index} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} clickToShowPopUp={clickToShowPopUp} wallID={wall.Wall.id} onClickToCTA={onClickToCTA} wall={wall} languageSetting={languageSetting} onClickPopUpSlider={onClickPopUpSlider} /></Suspense>\r\n                </SplideSlide>\r\n              })}\r\n          </SplideTrack>\r\n          <div className=\"splide__arrows splide__arrows--ltr tb_hc_arrow_wrapper_\" role=\"navigation\" aria-label=\"Slider Navigation Wrapper\">\r\n            <div role=\"navigation\" className=\"tb_hc_arrow splide__arrow splide__arrow--prev tb_hc_arrow_left__ tb__icon tb-arrow-left-alt\" aria-labelledby=\"Navigation Previous Slide\"> </div>\r\n            <div role=\"navigation\" className=\"tb_hc_arrow splide__arrow splide__arrow--next tb_hc_arrow_right__ tb__icon tb-arrow-right-alt\" aria-labelledby=\"Navigation Next Slide\" onClick={isTagShop ? this.requestData : null}> </div>\r\n          </div>\r\n        </Splide>\r\n      </div> : null}</>\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getDataNextSteps: (wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow) => dispatch(getDataNextSteps(wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow)),\r\n  }\r\n}\r\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(HorizontalColumn));"],"names":["Card","lazy","HorizontalColumn","Component","constructor","props","super","state","windowWidth","document","getElementById","mainClass","clientWidth","window","innerWidth","sliderHeight","onScreenLoad","renderId","this","setState","requestData","appendData","wall","preRender","hasMoreData","getDataNextSteps","Wall","id","Math","floor","Date","now","ThemeRule","numberOfPosts","networkID","after","heightEvent","handleKeyPress","event","slidePost","includes","target","tagName","code","parentID","preventDefault","Autoplay","inputRefs","splide","Components","isPaused","play","pause","error","reScrolled","setTimeout","splide__list","querySelector","getWidth","offsetWidth","isVisibleAll","querySelectorAll","length","str","getAttribute","substring","getIndex","Number","style","transition","transform","concat","autoScrollSlider","prev","next","destIndex","Personalization","autoScrollStatus","currentIndex","isTagEmbed","perPage","index","componentWillMount","componentDidMount","slider","height","offsetHeight","forEach","element","removeAttribute","postData","arrow_left_id","arrow_right_id","myFunction","splide01","body","addEventListener","splide02","componentWillUnmount","removeEventListener","componentDidUpdate","render","_wall$Personalization","completeDataObject","clickToShowPopUp","onClickToCTA","keyRender","languageSetting","cardNumber","onClickPopUpSlider","inputName","numberOfCoumn","mobileColumn","isTagShop","slideDuration","trimContent","trimcontent","isMobileStatus","detectMobile","isMobile","renderCount","parseInt","manageItemCount","desktopCount","cloneStatus","undefined","clonePost","clones","isType","Object","keys","newData","Array","fill","flat","equalHeight","lineTrim","settings","type","role","label","rewind","speed","loop","interval","gap","perMove","autoplay","padding","pagination","arrows","fixedHeight","breakpoints","_jsx","_Fragment","children","className","ref","minHeight","_jsxs","Splide","hasTrack","options","tag","onMove","SplideTrack","map","item","cardData","SplideSlide","p_id","Suspense","fallback","ownerId","owner","itemData","itemIndex","personalization","wallID","onClick","memo","connect","dispatch","timeStamp","postCount","networkId","updateInStateNow"],"sourceRoot":""}