{"version":3,"file":"static/js/1463.b97f70fa.chunk.js","mappings":"oMAIA,MAAMA,EAAmBA,CAACC,EAAUC,KAChC,GACS,KADDA,EACJ,CAEI,OADmBC,OAAOF,GAAUG,QAAQ,wCAAyC,GAEhF,CAGL,OAAOH,CAEf,EAGJ,MAAMI,UAAmBC,EAAAA,UAErBC,MAAAA,GACI,MAAM,KAAEC,GAASC,KAAKC,MAChBC,EAA4B,IAAdH,EAAKI,MAA4B,IAAdJ,EAAKI,KAC5C,IAAIC,EAAS,GAAAC,OAAMN,EAAKO,UAExB,OADIP,EAAKK,UAAUG,SAASC,EAAAA,MAAeJ,EAAYL,EAAKO,WACrDG,EAAAA,EAAAA,MAAA,OAAKC,GAAG,iBAAiBC,UAAU,eAAcC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAcG,MAAO,CAAEC,gBAAgB,OAADV,OAASD,EAAS,SACvES,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACpBC,EAAAA,EAAAA,KAAA,OAAKF,UAAS,4BAA8BC,UACxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrBV,GAAcW,EAAAA,EAAAA,KAACG,IAAW,CACvBF,MAAO,CAAEG,UAAW,eACpBC,IAAK3B,EAAiBQ,EAAKP,SAAUO,EAAKN,WAC1C0B,OAAQ,CACJC,SAAU,CACNC,MAAO,kBACPC,WAAY,CACR,aAAc,OACdC,OAAO,EACPC,OAAQzB,EAAK0B,cAIrBC,KAAM,CACFC,YAAY,EAEZL,WAAY,CACRC,OAAO,EACPC,OAAQzB,EAAK0B,eAQzBG,MAAM,EACNC,UAAU,EACVN,OAAO,EACPO,OAAQ,EACRC,aAAa,EACbC,SAAS,EACTC,OAAQ,OACRC,MAAO,OACPC,UAAU,KACTtB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUyB,IAAKhC,EAAWiC,IAAI,aAKtE,EAGJ,SAAeC,EAAAA,EAAAA,MAAK1C,E,+BC/DpB,IAAI2C,EAAuBC,EAAQ,OAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAK7C,EAAO8C,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPN,CAQF,CAEA,SAASG,IACP,OAAOT,CACT,CAHAA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAeqB,UAAYrB,EAEpBA,CACT,C,kBC/CEb,EAAOC,QAAUL,EAAQ,MAARA,E,yBCNnBI,EAAOC,QAFoB,8C","sources":["app/Components/Spotlight/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React, { Component, memo } from 'react';\r\nimport ReactPlayer from \"react-player\"\r\nimport { CloudHostUrl } from '../../../constants';\r\nimport './scss/spotlight.scss'\r\nconst mediaReplaceText = (mediaUrl, networkId) => {\r\n    switch (networkId) {\r\n        case 25:\r\n            const soundCloud = String(mediaUrl).replace(\"https://w.soundcloud.com/player/?url=\", \"\")\r\n            return soundCloud\r\n            break;\r\n\r\n        default:\r\n            return mediaUrl\r\n            break;\r\n    }\r\n\r\n}\r\nclass Spotlights extends Component {\r\n\r\n    render() {\r\n        const { item } = this.props\r\n        const isTypeMedia = item.type === 3 || item.type === 5 ? true : false\r\n        let mediaFile = `${item.filename}`;\r\n        if (item.mediaFile.includes(CloudHostUrl)) mediaFile = item.filename;\r\n        return <div id=\"announcement__\" className=\"an_container\">\r\n            <div className=\"an_overlay_\" style={{ backgroundImage: `url(${mediaFile})` }}></div>\r\n            <div className=\"an_wrap\">\r\n                <div className={`an_wrap_row an_only_media`}>\r\n                    <div className=\"an_media_\">\r\n                        {isTypeMedia ? <ReactPlayer\r\n                            style={{ transform: 'scale(0.99)' }}\r\n                            url={mediaReplaceText(item.mediaUrl, item.networkId)}\r\n                            config={{\r\n                                facebook: {\r\n                                    appId: '117029975354072',\r\n                                    attributes: {\r\n                                        'data-width': 'auto',\r\n                                        muted: true,\r\n                                        poster: item.postFileNew\r\n                                        // 'data-height': `${document.querySelector('.ts_rt_post_in') ? `${document.querySelector('.ts_rt_post_in').clientHeight} px` : '100%'}`\r\n                                    }\r\n                                },\r\n                                file: {\r\n                                    forceVideo: true,\r\n\r\n                                    attributes: {\r\n                                        muted: true,\r\n                                        poster: item.postFileNew\r\n                                        // onError: (e) => IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP_VIDEO(e)\r\n                                    }\r\n                                }\r\n                                // tracks: [\r\n                                //     {kind: 'subtitles', src: `${CloudUrl}/media/subtitles.en.vtt`, srcLang: 'en', default: true},\r\n                                // ]\r\n                            }}\r\n                            loop={true}\r\n                            autoPlay={true}\r\n                            muted={true}\r\n                            volume={1}\r\n                            playsinline={true}\r\n                            playing={true}\r\n                            height={'100%'}\r\n                            width={'100%'}\r\n                            controls={false}\r\n                        /> : <img className=\"an_img_\" src={mediaFile} alt=\"\" />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default memo(Spotlights)","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["mediaReplaceText","mediaUrl","networkId","String","replace","Spotlights","Component","render","item","this","props","isTypeMedia","type","mediaFile","concat","filename","includes","CloudHostUrl","_jsxs","id","className","children","_jsx","style","backgroundImage","ReactPlayer","transform","url","config","facebook","appId","attributes","muted","poster","postFileNew","file","forceVideo","loop","autoPlay","volume","playsinline","playing","height","width","controls","src","alt","memo","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}