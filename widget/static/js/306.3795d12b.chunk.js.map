{"version":3,"file":"static/js/306.3795d12b.chunk.js","mappings":"oMAIA,MACMA,EAAYC,EAAAA,MAAW,IAAM,0DAG7BC,EAAiBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,mBAC/C,MAAMC,UAAwBC,EAAAA,cACtCC,WAAAA,CAAYC,GACLC,MAAMD,GAAO,KAQpBE,UAAYA,IACLC,KAAKH,MAAMI,kBAAkBF,EAAU,EAC7C,KACDG,aAAeC,MAVRH,KAAKI,MAAQ,CACNL,UAAW,CACJM,OAA0B,MAAlBjB,EAAyBA,EAAe,GAAK,OACrDkB,MAAyB,MAAlBlB,EAAyBA,EAAe,GAAK,QAGzE,CAQAmB,MAAAA,GACO,MAAM,UAAEC,EAAS,KAAEC,EAAI,KAAEC,EAAI,OAAEC,EAAM,QAAEC,EAAO,KAAEC,GAASb,KAAKH,MAO9D,OAAOiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACnCF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACAC,IAAKlB,KAAKmB,UACVC,UAAU,aACVC,kBAAkB,EAClBC,WATK,CACZC,WAAW,EACXC,YAAY,gBAOkBR,SAEtBR,EAAUiB,KAAI,CAACC,EAAWC,KAAUb,EAAAA,EAAAA,KAACc,EAAAA,GAAW,CAAAZ,SACzCa,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAKf,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAf,SAAuB,IAAnBU,EAAUM,MAAiC,IAAnBN,EAAUM,MAAeF,EAE3C,IAAnBJ,EAAUM,MAAiC,IAAnBN,EAAUM,MAC9BlB,EAAAA,EAAAA,KAACmB,EAAAA,SAAQ,CAACC,UAAUpB,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,IAAMf,UAACF,EAAAA,EAAAA,KAAC5B,EAAS,CAACiD,WAAW,cAAc1B,KAAM,IAAKiB,EAAWU,QAAS,CAAEC,GAAIX,EAAUY,WAAaC,YAAab,EAAUc,SAAUC,SAAUf,EAAUgB,WAAa/B,OAAQA,EAAQgC,QAASjC,EAAKkC,gBAAgBC,YAAajC,QAASA,EAASC,KAAMA,EAAMiC,SAAS,EAAMC,UAAU,EAAOC,SAAUlB,EAAUmB,MAjB/V,MAiB6WC,iBAAmB/C,GAAMH,KAAKE,eAAgByB,MAAOA,MAAuB,MAF3ab,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAgBoC,IAAKzB,EAAUc,SAAUnC,OAAQ,IAAKC,MAAO,IAAK8C,KAAKC,EAAAA,EAAAA,GAAe3B,EAAUc,aAEoU,GAJ1Yb,QAU5E,E","sources":["app/Components/ReelPopUp/Elements/ReelMediaSlider.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport { GET_MEDIA_NAME } from \"../../../../utils\";\r\nimport 'swiper/css';\r\nconst Image = React.lazy(() => import('../../../Themes/Elements/Media/Image'));\r\nconst ReelVideo = React.lazy(() => import('./ReelVideo'));\r\n\r\n\r\nconst mediaDimension = JSON.parse(window.localStorage.getItem('mediaDimension'));\r\nexport default class ReelMediaSlider extends PureComponent {\r\n       constructor(props) {\r\n              super(props);\r\n              this.state = {\r\n                     mediaSize: {\r\n                            height: mediaDimension != null ? mediaDimension[0] : '85vh',\r\n                            width: mediaDimension != null ? mediaDimension[1] : '85vh',\r\n                     }\r\n              };\r\n       }\r\n       mediaSize = mediaSize => {\r\n              this.props.mediaSizeCallback(mediaSize);\r\n       }\r\n       CurrentVideo = e => {\r\n              //console.log(\"ðŸš€ ~ ReelMedia ~ e:\", e)\r\n\r\n       }\r\n       render() {\r\n              const { imageList, data, wall, wallID, ownerId, size } = this.props\r\n              const muted = false\r\n              const autoPlay = true\r\n              const pagination = {\r\n                     clickable: true,\r\n                     bulletClass: `tb_rp_bullet`,\r\n              }\r\n              return <div className=\"tb_rp_media_holder\">\r\n                     <Swiper\r\n                            ref={this.splideRef}\r\n                            direction=\"horizontal\"\r\n                            passiveListeners={true}\r\n                            pagination={pagination}\r\n                     >\r\n                            {imageList.map((imageItem, index) => <SwiperSlide key={index}>\r\n                                   {({ isActive }) => <>{(imageItem.type === 2 || imageItem.type === 4 || !isActive) ?\r\n                                          <img className=\"tb_rp_s_image\" src={imageItem.postFile} height={500} width={480} alt={GET_MEDIA_NAME(imageItem.postFile)} />\r\n                                          : (imageItem.type === 3 || imageItem.type === 5) ?\r\n                                                 <Suspense fallback={<></>}><ReelVideo VideoClass=\"tb_rp_video\" data={{ ...imageItem, network: { id: imageItem.networkId }, postFileNew: imageItem.postFile, mediaUrl: imageItem.mediaFile }} wallID={wallID} themeID={wall.Personalization.widgetTheme} ownerId={ownerId} size={size} isCover={true} controls={false} autoPlay={isActive} muted={muted} handleVideoEnded={(e) => this.CurrentVideo()} index={index} /></Suspense> : null}</>}\r\n                            </SwiperSlide>\r\n                            )}\r\n                     </Swiper>\r\n\r\n              </div>\r\n       }\r\n}"],"names":["ReelVideo","React","mediaDimension","JSON","parse","window","localStorage","getItem","ReelMediaSlider","PureComponent","constructor","props","super","mediaSize","this","mediaSizeCallback","CurrentVideo","e","state","height","width","render","imageList","data","wall","wallID","ownerId","size","_jsx","className","children","Swiper","ref","splideRef","direction","passiveListeners","pagination","clickable","bulletClass","map","imageItem","index","SwiperSlide","_ref","isActive","_Fragment","type","Suspense","fallback","VideoClass","network","id","networkId","postFileNew","postFile","mediaUrl","mediaFile","themeID","Personalization","widgetTheme","isCover","controls","autoPlay","muted","handleVideoEnded","src","alt","GET_MEDIA_NAME"],"sourceRoot":""}