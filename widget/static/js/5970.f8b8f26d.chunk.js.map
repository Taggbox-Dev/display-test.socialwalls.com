{"version":3,"file":"static/js/5970.f8b8f26d.chunk.js","mappings":"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","sources":["app/Themes/ClassicCard/Elements/Card.js","app/Themes/ClassicCard/index.js"],"sourcesContent":["import React, { Suspense, useEffect } from 'react';\r\nimport { isSocialWall, isTagEmbed } from \"../../../../actions/api\";\r\nimport { IS_THEME, PostTrimContent } from '../../../../utils'\r\n\r\nconst AuthorDetails = React.lazy(() => import('./AuthorDetails'));\r\nconst Media = React.lazy(() => import('./Media'));\r\nconst Rating = React.lazy(() => import('../../Elements/Rating/Rating'));\r\nconst PostContent = React.lazy(() => import('../../Elements/PostContent/PostContent'));\r\nconst CTAButton = React.lazy(() => import('../../Elements/CTA/CtaButton'));\r\nconst ShareAndSocialActions = React.lazy(() => import('./ShareAndSocialActions'));\r\n\r\nconst trim_content_length = !isTagEmbed ? 200 : null;\r\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, onClickToCTA, wall, onClickPopUpSlider }) => {\r\n  useEffect(() => {\r\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\r\n  }, [itemIndex, itemData.isPopUp, itemData]);\r\n\r\n  const mediaType = itemData.type !== 1 ? true : false;\r\n  const rating = (itemData.rating > 0) ? true : false;\r\n  const contentClass = (itemData.rating > 0) ? 'tb_cc_rating_content' : 'tb_cc_content'\r\n  const tagEmbedReviewContentClass = isTagEmbed && IS_THEME(5) ? 'tb_cc_rating_content_review' : null\r\n  const textDecorate = (itemData.type === 1 && personalization.textDecorate) ? 'tb_cc_text_decoration tb_cc_text_post' : '';\r\n  const ctaStatus = (itemData.cta && Object.keys(itemData.cta).length > 0 && itemData.cta.status) ? true : false;\r\n  const cardActions = (ctaStatus || ThemeRule.socialAction || ThemeRule.shareOption) && !isSocialWall ? true : false;\r\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\r\n  const outerpadding = isSocialWall ? { padding: ThemeRule.spacing } : null\r\n  return (\r\n    <div id={`tb-cc-post-${itemData.id}`} className={`tb_cc_post_wrapper`} style={{\r\n      width: `${adjustWidth}%`, padding: personalization.padding / 2\r\n    }} tb-network={itemData.network.icon} tabIndex=\"0\" area-label={postTextContent} role=\"article\">\r\n      <div className=\"tb_cc_post_in\" onClick={clickToShowPopUp(itemIndex, itemData)} role=\"button\" aria-roledescription=\"Click to open pop up\" tabIndex={\"0\"}>\r\n\r\n        {isTagEmbed ? (mediaType ?\r\n          <div className=\"tb_cc_post_media_wrapp\" role=\"button\" tabIndex=\"0\" aria-label=\"Pop Up Button\">\r\n            <Suspense fallback={<></>}>\r\n              <Media key={`img${itemIndex}_${itemData.id}`} itemData={itemData} wallID={wallID} wall={wall} ownerId={ownerId} />\r\n            </Suspense>\r\n          </div>\r\n          : '') : null}\r\n        <div className=\"tb_cc_contant_wrapper\">\r\n          <Suspense fallback={<></>}>\r\n            <AuthorDetails ownerId={ownerId} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={ThemeRule} personalization={personalization} ThemeRule={ThemeRule} />\r\n          </Suspense>\r\n          {rating && IS_THEME(5) ? <div className=\"tb_cc_rating__\">\r\n            <Suspense fallback={<></>}>\r\n              <Rating rating={itemData.rating} network={itemData.network} />\r\n            </Suspense>\r\n          </div> : ''}\r\n          {(!ThemeRule.hideContent || itemData.type == 1) && !IS_THEME(63) ? \r\n            <Suspense fallback={<></>}>\r\n              <PostContent item={itemData} contentClass={`${contentClass} ${tagEmbedReviewContentClass} ${textDecorate}`} content={postTextContent} font={ThemeRule} ThemeRule={ThemeRule} personalization={personalization} contentTitle={itemData.contentTitle} /> \r\n            </Suspense>\r\n          : ''}\r\n          {rating && !IS_THEME(5) ? <div className=\"tb_cc_rating__\">\r\n            <Suspense fallback={<></>}>\r\n              <Rating rating={itemData.rating} network={itemData.network} />\r\n            </Suspense>\r\n          </div> : ''}\r\n            \r\n        </div>\r\n\r\n        {(!isTagEmbed && !IS_THEME(62) && !IS_THEME(78) && !IS_THEME(66)) ? (mediaType ?\r\n          <div className=\"tb_cc_post_media_wrapp\" role=\"button\" tabIndex=\"0\" aria-label=\"Pop Up Button\">\r\n            <Suspense fallback={<></>}>\r\n              <Media key={`img${itemIndex}_${itemData.id}`} itemData={itemData} wallID={wallID} wall={wall} ownerId={ownerId} />\r\n            </Suspense>\r\n          </div>\r\n          : '') : null}\r\n\r\n        {cardActions || ctaStatus || ThemeRule.shareOption ?\r\n          <div className=\"tb_cc_post_actions\">\r\n            {ctaStatus ? <div className=\"tb_cc_post_cta\">\r\n              <Suspense fallback={<></>}>\r\n                <CTAButton ctaClass={'tb_cc_post_cta_btn'} cta={itemData.cta} item={itemData} onClickToCTA={onClickToCTA} /> \r\n              </Suspense>\r\n            </div> : ''}\r\n            {cardActions ? \r\n              <Suspense fallback={<></>}>\r\n                <ShareAndSocialActions itemData={itemData} ThemeRule={ThemeRule} /> \r\n              </Suspense>\r\n            : ''}\r\n          </div>\r\n          : ''}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Card","import React, { PureComponent } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\nimport Card from \"./Elements/Card\";\r\nimport { connect } from 'react-redux';\r\nimport { managePostHeight } from '../../../actions/themeActions';\r\nimport \"./scss/ClassicCard.scss\";\r\n\r\nclass ClassicCard extends PureComponent {\r\n  state = {\r\n    postData: [],\r\n    loadData: 1\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { postData } = this.props;\r\n    const self = this;\r\n    setTimeout(() =>\r\n      this.setState({ postData, loadData: 1 }, () => this.onLoadMasonry())\r\n      , 100)\r\n\r\n    window.addEventListener('resize', function (event) {\r\n      self.editorHeight();\r\n    }, true);\r\n  }\r\n\r\n  onLoadMasonry = () => {\r\n    this.editorHeight();\r\n  }\r\n\r\n\r\n  editorHeight = () => {\r\n    var span = document.querySelector(\".tb_cc_post_container\");\r\n\r\n    if (span) {\r\n      const getHeight = span.style.height;\r\n      if (getHeight) {\r\n        const height = getHeight.split(\"px\");\r\n        if (height && JSON.stringify(height) && height[0] > 0) {\r\n          this.props.managePostHeight(`${getHeight}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { postData } = nextProps;\r\n    this.setState({ postData, loadData: 1 }, () => this.onLoadMasonry())\r\n  }\r\n  render() {\r\n    const { postData, completeDataObject, adjustWidth, wall, languageSetting, clickToShowPopUp, onClickToCTA, onClickPopUpSlider } = this.props;\r\n    const { loadData } = this.state;\r\n\r\n    return (\r\n      <Masonry\r\n        className={`tb_cc_post_container`}\r\n        tabIndex='0'\r\n        aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`}\r\n        elementType={'div'}\r\n        options={{\r\n          transitionDuration: 0,\r\n          percentPosition: true,\r\n          itemSelector: '.tb_cc_post_wrapper',\r\n          horizontalOrder: true,\r\n          resize: true,\r\n        }}\r\n        disableImagesLoaded={false}\r\n        updateOnEachImageLoad={false}\r\n        imagesLoadedOptions={{}}\r\n        enableResizableChildren={true}>\r\n        {\r\n          loadData ?\r\n            ((postData && postData.length > 0)) && postData.map((item, index) => {\r\n              const cardData = completeDataObject[item];\r\n              return <Card ownerId={wall.Wall.owner} itemData={cardData} key={`cls_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} completeDataObject={completeDataObject} postData={postData} languageSetting={languageSetting} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} wall={wall} onClickPopUpSlider={onClickPopUpSlider} />\r\n            }) : null\r\n        }\r\n      </Masonry>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    postHeight: state.postHeight.data\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    managePostHeight: (data) => dispatch(managePostHeight(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClassicCard)\r\n"],"names":["AuthorDetails","React","Media","Rating","PostContent","CTAButton","ShareAndSocialActions","trim_content_length","isTagEmbed","_ref","itemData","personalization","adjustWidth","ThemeRule","clickToShowPopUp","itemIndex","wallID","ownerId","onClickToCTA","wall","onClickPopUpSlider","useEffect","isPopUp","mediaType","type","rating","contentClass","tagEmbedReviewContentClass","IS_THEME","textDecorate","ctaStatus","cta","Object","keys","length","status","cardActions","socialAction","shareOption","isSocialWall","postTextContent","trimcontent","PostTrimContent","content","spacing","_jsx","id","concat","className","style","width","padding","network","icon","tabIndex","role","children","_jsxs","onClick","Suspense","fallback","_Fragment","postTime","createdAt","author","font","hideContent","item","contentTitle","ctaClass","ClassicCard","PureComponent","constructor","arguments","state","postData","loadData","onLoadMasonry","this","editorHeight","span","document","querySelector","getHeight","height","split","JSON","stringify","props","managePostHeight","componentDidMount","self","setTimeout","setState","window","addEventListener","event","componentWillReceiveProps","nextProps","render","completeDataObject","languageSetting","Masonry","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","map","index","cardData","Card","Wall","owner","Personalization","connect","postHeight","data","dispatch"],"sourceRoot":""}