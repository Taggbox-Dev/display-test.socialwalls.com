{"version":3,"file":"static/js/6723.a5664e3c.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/RatingBadge/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { network, networkClass, ThemeRule, isDefault, Personalization } = this.props;\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\n  }\n}\n","import React, { PureComponent, Suspense } from \"react\";\nimport Network from \"../Elements/Network/Network\";\nimport \"./scss/RatingBadge.scss\"\nconst AverageRating = React.lazy(() => import('../Elements/AverageRating/AverageRating'));\nconst SmallBranding = React.lazy(() => import('../Elements/Branding/SmallBranding'));\n\nexport default class RatingBadge extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      avgRate: 0,\n      totalReviews: 0\n    };\n  }\n\n  totalReviewNetworks = (reviewFilters) => {\n    const { wall } = this.props;\n    let avgReview = 0\n    let totalReview = 0\n    let append = []\n    reviewFilters.map((item, index) => {\n      const items = item.Network\n      avgReview += items.averageReviews * items.totalReviews;\n      totalReview += items.totalReviews;\n      append.push(index < 5 ? <div key={index} className=\"tb_rb_social_list\">\n        <Network\n          networkClass={\"tb_rb_avg_social_ico\"}\n          network={items}\n          isDefault={true}\n          ThemeRule={wall.ThemeRule}\n        />\n      </div>\n        : null)\n    })\n    this.setState({\n      avgRate: (avgReview / totalReview).toFixed(1),\n      totalReviews: totalReview\n    })\n    return append\n  }\n\n\n  render() {\n    const { postData, reviewFilters, wall, languageSetting, isFreeAdsStatus } = this.props;\n    const { avgRate, totalReviews } = this.state\n    const cardStyle = { backgroundColor: wall.ThemeRule.cardColor, borderRadius: wall.ThemeRule.radius };\n\n    return (\n      <div className={`tb_rb_post_container tb_rb_size_${wall.ThemeRule.cardSize} tb_rb_position_${wall.ThemeRule.cardPosition}`} style={cardStyle}>\n        <div className=\"tb_rb_post_wrap\">\n          <div className=\"tb_rb_social_\">\n            {this.totalReviewNetworks(reviewFilters)}\n          </div>\n          <div className=\"tb_rb_rating_wrap\">\n            <div className={`tb_rb__title tb-cTBfont-${wall.ThemeRule.font_varient}`}>Reviews</div>\n            <div className={`tb_rb_avg_rating tb-cTBfont-${wall.ThemeRule.font_varient}`}>{avgRate}</div>\n            <Suspense fallback={<></>}>\n              <AverageRating size={18} rating={avgRate} />\n            </Suspense>\n            <div className={`tb_rb_based_on tb-cTBfont-${wall.ThemeRule.font_varient}`}>Based on <div className=\"tb_rb_based_on_count\">{totalReviews}</div> reviews</div>\n            {isFreeAdsStatus ? <Suspense fallback={<></>}><SmallBranding languageSetting={languageSetting} wallId={wall.Wall.id} themeID={wall.Personalization.widgetTheme} isCenter={true} /> </Suspense> : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n"],"names":["DefaultNetwork","React","Network","PureComponent","render","network","networkClass","ThemeRule","isDefault","Personalization","this","props","isDefaultIcon","id","icon","isTagEmbed","_jsx","className","concat","replace","children","_jsxs","Suspense","fallback","_Fragment","AverageRating","SmallBranding","RatingBadge","constructor","super","totalReviewNetworks","reviewFilters","wall","avgReview","totalReview","append","map","item","index","items","averageReviews","totalReviews","push","setState","avgRate","toFixed","state","postData","languageSetting","isFreeAdsStatus","cardStyle","backgroundColor","cardColor","borderRadius","radius","cardSize","cardPosition","style","font_varient","size","rating","wallId","Wall","themeID","widgetTheme","isCenter"],"sourceRoot":""}