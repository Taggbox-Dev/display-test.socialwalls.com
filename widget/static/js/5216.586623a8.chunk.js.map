{"version":3,"file":"static/js/5216.586623a8.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/SquarePhoto/Elements/Card.js","app/Themes/SquarePhoto/index.js","app/Themes/Elements/ShopButton/ShopButton.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { network, networkClass, ThemeRule, isDefault, Personalization } = this.props;\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\n  }\n}\n","import React, { Suspense, useRef, useEffect } from \"react\";\nimport { IS_THEME, PostTrimContent, themeImpressionTracking } from '../../../../utils'\nimport { isSocialWall, isTagEmbed, isTagShop, isTagbox } from \"../../../../actions/api\";\nimport { suiteTrack } from '../../../../actions/api'\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\nimport Network from \"../../Elements/Network/Network\";\nimport ShopButton from \"../../Elements/ShopButton/ShopButton\";\nconst AuthorDetails = React.lazy(() => import(\"./AuthorDetails\"));\nconst Media = React.lazy(() => import('./Media'));\nconst PostContent = React.lazy(() => import('../../Elements/PostContent/PostContent'));\nconst trim_content_length = !isTagEmbed ? 200 : null;\n\n\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, postSizeInPx, wall, onClickPopUpSlider }) => {\n  const postTrack = useRef(null);\n  const mediaType = itemData.type !== 1 ? true : false;\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\n  const responsiveCardSize2x = postSizeInPx.adjustWidth < 250 ? true : false\n  const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\n  const overlay = isTagbox ? 'tb_sp_color_overlay' : 'tb_sp_post_overlay-' + themeMode\n  const overlayStyle = { backgroundColor: isTagbox ? ThemeRule.backgroundColor : '' }\n  useEffect(() => {\n    if (suiteTrack) themeImpressionTracking(postTrack);\n  }, []);\n  const isHotspot = itemData.hotspot && itemData.ugc_products.length > 0 ? true : false\n  const isShopBtn = isTagShop && (!itemData.hotspot && itemData.ugc_products.length > 0) ? true : false;\n\n\n\n  useEffect(() => {\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\n  }, [itemIndex, itemData.isPopUp, itemData]);\n  return <div id={`tb-sp-post-${itemData.id}`} className={`tb_sp_post_wrapper${responsiveCardSize2x ? ' tb_sp_post_wrapper2x' : ''}`} style={{ width: `${adjustWidth}%`, padding: personalization.padding / 2 }} tb-network={itemData.network.id} tb-product={isShopBtn ? 1 : isHotspot ? 2 : 0} tabIndex=\"0\" role=\"article\" aria-label={`Post ${parseInt(itemIndex) + 1},${postTextContent}`} ref={postTrack} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId}>\n    <div className={`tb_sp_post_in${isTagShop ? ' tb_sp_post_ani' : ''}`} onClick={clickToShowPopUp(itemIndex, itemData)}>\n      <div className=\"tb_sp_post_media_wrapp\">\n        {itemData.share.status ? <ShareOnHover share={itemData.share} shareClass={'tb_sp_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} /> : ''}\n        {mediaType ? <Suspense fallback={<></>}><Media key={`img${itemIndex}_${itemData.id}`} itemData={itemData} wallID={wallID} ownerId={ownerId} ThemeID={personalization.widgetTheme} wall={wall} /></Suspense> : ''}\n        {!isHotspot ? <>\n          <div className=\"tb_sp_post_details\">\n            {isTagShop ? <div className=\"tb_sp_social_\">\n              <Network networkClass={'tb_sp_social__ico'} network={itemData.network} isDefault={ThemeRule.iconType === 1 ? true : false} ThemeRule={ThemeRule} Personalization={personalization} />\n            </div> : null}\n            {isShopBtn ? <ShopButton ThemeRule={ThemeRule} btnClass={'tb_sp_btn_wrap'} /> : null}\n            {!isTagShop ? <>\n              {!IS_THEME(65) ? <div className=\"tb_sp_contant_wrapper\">\n                {((!ThemeRule.hideContent || itemData.type == 1)) ? <Suspense fallback={<></>}><PostContent contentClass={'tb_sp_content'} item={itemData} content={postTextContent} font={ThemeRule} ThemeRule={ThemeRule} personalization={personalization} contentTitle={itemData.contentTitle} /></Suspense> : ''}\n              </div> : ''}\n              <Suspense fallback={<></>}><AuthorDetails key={`img${itemIndex}_${itemData.id}`} ownerId={ownerId} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={ThemeRule} personalization={personalization} ThemeRule={ThemeRule} /></Suspense>\n            </>\n              : null}\n          </div>\n          <div className={`tb_sp_post_overlay ${overlay}`} style={overlayStyle}><div></div></div>\n        </> : null}\n      </div>\n    </div>\n  </div>\n}\nexport default Card","import React, { PureComponent } from \"react\";\nimport Card from \"./Elements/Card\";\nimport { connect } from 'react-redux';\nimport { managePostHeight } from '../../../actions/themeActions';\nimport \"./scss/SquarePhoto.scss\";\nclass SquarePhoto extends PureComponent {\n  state = {\n    postData: []\n  }\n  render() {\n    const { postData, completeDataObject, adjustWidth, wall, clickToShowPopUp, cardNumber, onClickToCTA, postSizeInPx, onClickPopUpSlider } = this.props;\n    let totalPostBestFit = postData.length;\n    if (wall && wall.Personalization.fitRow == 1) {\n      if (postData.length >= parseInt(cardNumber)) {\n        let bestFitEachRow = postData.length / parseInt(cardNumber);\n        totalPostBestFit = (parseInt(cardNumber) * parseInt(bestFitEachRow));\n      }\n    }\n    return (\n      <div tabIndex=\"0\" aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\" className=\"tb_sp_post_container\">\n        {(postData && postData.length > 0) && postData.map((item, index) => {\n          const cardData = completeDataObject[item];\n          return parseInt(totalPostBestFit) >= parseInt((index + 1)) ? <Card ownerId={wall.Wall.owner} itemData={cardData} key={`sqr_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} onClickPopUpSlider={onClickPopUpSlider} />\n            : null\n        })}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    postHeight: state.postHeight.data\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    managePostHeight: (data) => dispatch(managePostHeight(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SquarePhoto)","import \"./scss/ShopButton.scss\";\nimport { IS_THEME } from \"../../../../utils\";\nconst ShopButton = ({ ThemeRule, btnClass }) => {\n  const shopBtnStyle = { fontFamily: ThemeRule.css_font }\n  return <div className={`tb_shop_btn_wrap ${btnClass}`}>\n    <div className={`tb_shop_btn${ThemeRule.postHover || IS_THEME(4) || IS_THEME(55) ? ' tb_shop_btn_light' : ' tb_shop_btn_dark'}`} style={shopBtnStyle}>\n      {ThemeRule.shoppingText}\n    </div>\n  </div>\n}\n\n\nexport default ShopButton;","import React, { PureComponent } from \"react\";\nimport { themePostTracking, gtmAnalyticsAction } from '../../../../actions/themeActions'\nimport { isTagEmbed } from '../../../../actions/api'\n\nexport default class ShareOnHover extends PureComponent {\n\n\n  onClickData = (shareURL) => event => {\n    const { item, wallID, ownerId } = this.props;\n    event.stopPropagation();\n    if (!isTagEmbed) themePostTracking({\n      type: 2,\n      action: 2,\n      wall: wallID,\n      feed: item.feedId,\n      post: item.referenceId ? item.referenceId : item.id,\n      owner: ownerId\n    })\n    gtmAnalyticsAction(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\n    window.open(shareURL, \"_blank\")\n  }\n\n  render() {\n    const { share, shareClass } = this.props;\n    return <div className={`tb_share_wrapper ${shareClass}`}>\n      <div className={`tb_share_button_ tb__icon ${isTagEmbed ? 'tb-share-fill' : 'tb-share'}`}><div></div></div>\n      <div className=\"tb_share_icon_list_wrap\">\n        {share.facebook ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.facebook)} className=\"tb_share_ico__ tb__icon tb-facebook\" title=\"facebook\"><div></div></div>\n          </div>\n          : ''}\n        {share.twitter ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.twitter)} className=\"tb_share_ico__  tb__icon tb-twitter\" title=\"twitter\"><div></div></div>\n          </div>\n          : ''}\n        {share.linkedin ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.linkedin)} className=\"tb_share_ico__ tb__icon tb-linkedin\" title=\"linkedin\"><div></div></div>\n          </div>\n          : ''}\n      </div>\n    </div>\n  }\n}\n"],"names":["DefaultNetwork","React","Network","PureComponent","render","network","networkClass","ThemeRule","isDefault","Personalization","this","props","isDefaultIcon","id","icon","isTagEmbed","_jsx","className","concat","replace","children","_jsxs","Suspense","fallback","_Fragment","AuthorDetails","Media","PostContent","trim_content_length","_ref","itemData","personalization","adjustWidth","clickToShowPopUp","itemIndex","wallID","ownerId","postSizeInPx","wall","onClickPopUpSlider","postTrack","useRef","mediaType","type","postTextContent","trimcontent","PostTrimContent","content","responsiveCardSize2x","themeMode","postHover","isTagShop","overlay","isTagbox","overlayStyle","backgroundColor","useEffect","suiteTrack","themeImpressionTracking","isHotspot","hotspot","ugc_products","length","isShopBtn","isPopUp","style","width","padding","tabIndex","role","parseInt","ref","referenceId","feedId","onClick","share","status","ShareOnHover","shareClass","item","ThemeID","widgetTheme","iconType","ShopButton","btnClass","IS_THEME","hideContent","contentClass","font","contentTitle","postTime","createdAt","author","SquarePhoto","constructor","arguments","state","postData","completeDataObject","cardNumber","onClickToCTA","totalPostBestFit","fitRow","bestFitEachRow","map","index","cardData","Card","Wall","owner","connect","postHeight","data","dispatch","managePostHeight","shopBtnStyle","fontFamily","css_font","shoppingText","onClickData","shareURL","event","stopPropagation","themePostTracking","action","feed","post","gtmAnalyticsAction","window","open","facebook","title","twitter","linkedin"],"sourceRoot":""}