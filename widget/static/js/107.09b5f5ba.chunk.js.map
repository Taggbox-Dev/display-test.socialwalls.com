{"version":3,"file":"static/js/107.09b5f5ba.chunk.js","mappings":"qMAGA,MAAMA,EAAYC,OAAOC,SAASC,KAAKC,SAAS,aA+ChD,EA7CqBC,IAAoC,IAADC,EAAA,IAAlC,OAAEC,EAAM,WAAEC,EAAU,MAAEC,GAAOJ,EAC/C,OACIK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UAClCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,SAChCC,EAAAA,GACCN,IAAe,OAALE,QAAK,IAALA,GAAkB,QAAbH,EAALG,EAAOK,mBAAW,IAAAR,OAAb,EAALA,EAAoBS,MAAM,KAAKC,IAAI,CAACC,EAAMC,KAC9CR,EAAAA,EAAAA,KAAA,UAEIS,QAASA,KAAMC,EAAAA,EAAAA,IAAcH,EAAKI,QAAQ,OAAQ,KAClDV,UAAU,uBACVW,MAAO,CAAEC,WAAsB,IAAVL,EAAc,OAAS,OAAQN,SAEnDK,EAAKO,QALDN,KAQZX,GAAWP,EAIG,MAAfQ,GAAqC,MAAfA,GACtBE,EAAAA,EAAAA,KAAA,UAAQS,QAASA,KAAMC,EAAAA,EAAAA,IAAc,GAAIT,UAAU,uBAAsBC,SACrD,MAAfJ,EAAqB,aAAe,gBAGzCiB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAd,SAAA,EACIF,EAAAA,EAAAA,KAAA,UACIS,QAASA,KAAMC,EAAAA,EAAAA,IAAc,GAC7BT,UAAU,uBACVW,MAAO,CAAEK,YAAa,QAASf,SAClC,sBAGDF,EAAAA,EAAAA,KAAA,UACIS,QAASA,KAAMC,EAAAA,EAAAA,IAAc,GAC7BT,UAAU,sCAAqCC,SAClD,wBAnBLF,EAAAA,EAAAA,KAAA,KAAGP,KAAMyB,EAAAA,GAASC,OAAO,SAASlB,UAAU,uBAAsBC,SAAC,0BCRvF,EAVqBP,IAAwD,IAAvD,OAAEE,EAAM,MAAEuB,EAAK,YAAEC,EAAW,WAAEvB,EAAU,MAAEC,GAAOJ,EACrE,OAAOoB,EAAAA,EAAAA,MAAA,OAAKd,UAAU,wBAAuBC,SAAA,EAC3Ca,EAAAA,EAAAA,MAAA,OAAKd,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAAEkB,KACjCpB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAAEoB,EAAAA,EAAAA,IAAgBD,MAC/CrB,EAAAA,EAAAA,KAACuB,EAAY,CAAC1B,OAAQA,EAAQC,WAAYA,EAAYC,MAAOA,OAE7DF,EAA6B,MAApBG,EAAAA,EAAAA,KAACwB,EAAAA,EAAa,O,kGCP7B,MAQA,EARsB7B,IAAiB,IAAhB,OAAE8B,GAAQ9B,EAC/B,MAAM+B,EAAWC,EAAAA,GAAa,eAAiBC,EAAAA,GAAY,cAAgBzB,EAAAA,GAAe,kBAAoB,oBAC9G,OAAOH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACxCF,EAAAA,EAAAA,KAAA,KAAGP,KAAMgC,GAAe,GAAAI,OAAMC,EAAAA,IAAgBX,OAAQ,SAAUlB,UAAU,yBAAyBW,MAAO,CACxGmB,gBAAgB,OAADF,OAASG,EAAAA,GAAQ,uBAAAH,OAAsBH,EAAQ,MAC9DxB,SAAC,Q","sources":["app/Components/ErrorPages/Elements/ErrorButtons.js","app/Components/ErrorPages/Elements/ErrorMessage.js","app/Components/ErrorPages/Elements/ErrorBranding.js"],"sourcesContent":["import { AppUrls, isSocialWall } from \"../../../../actions/api\";\nimport { onWindowEvent } from \"../../../../utils\";\n\nconst isPreview = window.location.href.includes(\"preview=1\");\n\nconst ErrorButtons = ({ editor, error_code, error }) => {\n    return (\n        <div className=\"tb_error_page_actions\">\n            <div className=\"tb_error_action_list\">\n                {isSocialWall ? (\n                  editor && error?.errorBtnTxt?.split(\",\").map((text, index) => (\n                        <button\n                            key={index}\n                            onClick={() => onWindowEvent(text.replace(/\\s+/g, ''))}\n                            className=\"tb_error_btn_primary\"\n                            style={{ marginLeft: index !== 0 ? '10px' : '0px' }}\n                        >\n                            {text.trim()}\n                        </button>\n                    ))\n                ) : !editor && !isPreview ? (\n                    <a href={AppUrls} target=\"_blank\" className=\"tb_error_btn_primary\">\n                        Add Another Feed\n                    </a>\n                ) : error_code === 207 || error_code === 213 ? (\n                    <button onClick={() => onWindowEvent(5)} className=\"tb_error_btn_primary\">\n                        {error_code === 207 ? \"Moderation\" : \"Update Now\"}\n                    </button>\n                ) : (\n                    <>\n                        <button\n                            onClick={() => onWindowEvent(2)}\n                            className=\"tb_error_btn_primary\"\n                            style={{ marginRight: '10px' }}\n                        >\n                            Add Another Feed\n                        </button>\n                        <button\n                            onClick={() => onWindowEvent(1)}\n                            className=\"loadDemoWall tb_error_btn_secondary\"\n                        >\n                            Show Demo Posts\n                        </button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ErrorButtons;\n","import ErrorBranding from \"../Elements/ErrorBranding\";\nimport ReactHtmlParser from 'react-html-parser';\nimport ErrorButtons from \"./ErrorButtons\";\nconst ErrorMessage = ({ editor, title, description, error_code, error }) => {\n  return <div className=\"tb_error_page_wrapper\">\n    <div className=\"tb_error_content\">\n      <div className=\"tb_error_title\">{title}</div>\n      <div className=\"tb_error_des\">{ReactHtmlParser(description)}</div>\n      <ErrorButtons editor={editor} error_code={error_code} error={error}   />\n    </div>\n    {!editor ? <ErrorBranding /> : null}\n  </div>\n}\nexport default ErrorMessage\n","import { isTagEmbed, isTagShop, isSocialWall } from \"../../../../actions/api\";\nimport { CloudUrl, WebWidgetUrl } from \"../../../../constants\";\n\nconst ErrorBranding = ({ isLink }) => {\n  const logoName = isTagEmbed ? 'tagembed.svg' : isTagShop ? 'tagshop.svg' : isSocialWall ? 'socialwalls.svg' : 'tagbox-widget.svg'\n  return <div className=\"tb_error_page_logo\">\n    <a href={isLink ? isLink : `${WebWidgetUrl}`} target={'_blank'} className=\"tb_error_page_logo_ico\" style={{\n      backgroundImage: `url(${CloudUrl}/media/images/logo/${logoName})`\n    }}> </a>\n  </div>\n}\nexport default ErrorBranding\n"],"names":["isPreview","window","location","href","includes","_ref","_error$errorBtnTxt","editor","error_code","error","_jsx","className","children","isSocialWall","errorBtnTxt","split","map","text","index","onClick","onWindowEvent","replace","style","marginLeft","trim","_jsxs","_Fragment","marginRight","AppUrls","target","title","description","ReactHtmlParser","ErrorButtons","ErrorBranding","isLink","logoName","isTagEmbed","isTagShop","concat","WebWidgetUrl","backgroundImage","CloudUrl"],"sourceRoot":""}