{"version":3,"file":"static/js/5795.32584244.chunk.js","mappings":"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","sources":["app/Themes/NewsCard/Elements/Card.js","app/Themes/NewsCard/index.js"],"sourcesContent":["import React, { Suspense, useRef, useEffect, lazy } from \"react\";\r\nimport { IS_THEME, PostTrimContent, themeImpressionTracking } from '../../../../utils'\r\nimport { isTagEmbed, isTagShop, isTagbox } from '../../../../actions/api'\r\nconst AuthorDetails =  lazy(() => import(\"./AuthorDetails\"));\r\nconst Media =  lazy(() => import(\"./Media\"));\r\nconst PostContent =  lazy(() => import('../../Elements/PostContent/PostContent'));\r\nconst ShareOnHover =  lazy(() => import(\"../../Elements/ShareOnHover/ShareOnHover\"));\r\nconst CTAButton =  lazy(() => import(\"../../Elements/CTA/CtaButton\"));\r\nconst Rating =  lazy(() => import(\"../../Elements/Rating/Rating\"));\r\nconst SocialAction =  lazy(() => import(\"../../Elements/SocialAction/SocialAction\"));\r\nconst trim_content_length = !isTagEmbed ? 200 : null;\r\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, onClickToCTA, wall, counter, onClickPopUpSlider }) => {\r\n  const postTrack = useRef(null);\r\n  const cardSize = { width: `${adjustWidth}%`, padding: personalization.padding / 2 };\r\n  const mediaType = itemData.type !== 1 ? true : false;\r\n  const rating = (itemData.rating > 0) ? true : false;\r\n  const contentClass = (itemData.rating > 0) ? 'tb_nc_rating_content' : 'tb_nc_content'\r\n  const textDecorate = (itemData.type === 1 && personalization.textDecorate) ? 'tb_nc_text_decoration tb_nc_text_post' : '';\r\n  const ctaStatus = (itemData.cta && Object.keys(itemData.cta).length > 0 && itemData.cta.status) ? true : false;\r\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\r\n  useEffect(() => {\r\n    if (isTagShop) themeImpressionTracking(postTrack);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\r\n  }, [itemIndex, itemData.isPopUp, itemData]);\r\n  const contentFont = itemData.font\r\n  return (\r\n    <div id={`tb-nc-post-${itemData.id}`} className={`tb_nc_post_wrapper ${isTagEmbed && IS_THEME(59) || isTagbox && IS_THEME(83) ? `tb_nc_post_gradient tb_nc_gradient-${counter}` : ''}`} style={cardSize} tb-network={itemData.network.icon} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId} ref={postTrack} tabIndex=\"0\" area-label={postTextContent} role=\"article\">\r\n      <div className=\"tb_nc_post_wrap_in\">\r\n        <div className=\"tb_nc_post_in\" onClick={clickToShowPopUp(itemIndex, itemData)} role=\"button\" aria-roledescription=\"Click to open pop up\" tabIndex={\"0\"}>\r\n          <div className=\"tb_nc_post_media_wrapp\" role=\"button\" tabIndex=\"0\" aria-label=\"Pop Up Button\">\r\n            {itemData.share.status ? <Suspense fallback={<></>}><ShareOnHover share={itemData.share} shareClass={'tb_nc_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} /></Suspense> : ''}\r\n            {mediaType ? <Suspense fallback={<></>}><Media key={`img_${itemData.id}`} itemData={itemData} wallID={wallID} ownerId={ownerId} wall={wall} /></Suspense> : ''}\r\n            {rating && !isTagEmbed && !IS_THEME(59) && !isTagShop ? <div className=\"tb_nc_rating__\"><Suspense fallback={<></>}><Rating rating={itemData.rating} network={itemData.network} ThemeID={personalization.widgetTheme == 59 ? personalization.widgetTheme : null} /></Suspense></div> : ''}\r\n          </div>\r\n          <div className=\"tb_nc_contant_wrapper\">\r\n            <Suspense fallback={<></>}><AuthorDetails mediaType={mediaType} ownerId={ownerId} itemData={itemData.id} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={ThemeRule} personalization={personalization} ThemeRule={ThemeRule} /></Suspense>\r\n\r\n            {isTagEmbed ? '' : (ctaStatus ? <div className=\"tb_nc_post_cta\"><Suspense fallback={<></>}><CTAButton ctaClass={'tb_nc_post_cta_btn'} cta={itemData.cta} item={itemData} onClickToCTA={onClickToCTA} /></Suspense></div> : '')}\r\n\r\n            {rating && (isTagEmbed && (IS_THEME(59) || IS_THEME(19)) || isTagShop) ? <div className=\"tb_nc_rating__\"><Suspense fallback={<></>}><Rating rating={itemData.rating} network={itemData.network} ThemeID={personalization.widgetTheme == 59 ? personalization.widgetTheme : null} /></Suspense></div> : ''}\r\n\r\n            {(isTagShop && ThemeRule.hideContent) || ((!isTagShop && !ThemeRule.hideContent) || itemData.type == 1) ? <Suspense fallback={<></>}><PostContent contentClass={`${contentClass} ${textDecorate}`} item={itemData} content={postTextContent} font={ThemeRule} ThemeRule={ThemeRule} personalization={personalization} contentTitle={itemData.contentTitle} /></Suspense> : ''}\r\n\r\n            {isTagEmbed ? (ctaStatus ? <div className=\"tb_nc_post_cta\"><Suspense fallback={<></>}><CTAButton ctaClass={'tb_nc_post_cta_btn'} cta={itemData.cta} item={itemData} onClickToCTA={onClickToCTA} /></Suspense></div> : '') : ''}\r\n          </div>\r\n          {ThemeRule.socialAction ? <Suspense fallback={<></>}><SocialAction itemData={itemData} ThemeRule={ThemeRule} ThemeID={personalization.widgetTheme} actionClass={`tb_nc_social_action__`} /></Suspense> : ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Card","import React, { PureComponent } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\nimport Card from \"./Elements/Card\";\r\nimport { connect } from 'react-redux';\r\nimport { managePostHeight } from '../../../actions/themeActions';\r\nimport { isTagEmbed, isTagbox } from '../../../actions/api'\r\nimport './scss/NewsCard.scss'\r\nclass NewsCard extends PureComponent {\r\n  state = {\r\n    postData: [],\r\n    loadData: 1\r\n  }\r\n  componentDidMount() {\r\n    const { postData } = this.props;\r\n    const self = this;\r\n    setTimeout(() =>\r\n      this.setState({ postData, loadData: 1 }, () => this.onLoadMasonry())\r\n      , 100)\r\n\r\n    window.addEventListener('resize', function (event) {\r\n      self.editorHeight();\r\n    }, true);\r\n  }\r\n\r\n  onLoadMasonry = () => {\r\n    this.editorHeight()\r\n  }\r\n\r\n\r\n  editorHeight = () => {\r\n    var span = document.querySelector(\".tb_nc_post_container\");\r\n    if (span) {\r\n      const getHeight = span.style.height;\r\n      if (getHeight) {\r\n        const height = getHeight.split(\"px\");\r\n        if (height && JSON.stringify(height) && height[0] > 0) {\r\n          this.props.managePostHeight(`${getHeight}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { postData } = nextProps;\r\n    this.setState({ postData, loadData: 1 }, () => this.onLoadMasonry())\r\n  }\r\n  render() {\r\n    const { postData, completeDataObject, adjustWidth, wall, postSize, clickToShowPopUp, onClickToCTA, onClickPopUpSlider } = this.props;\r\n    const { loadData } = this.state;\r\n    let counter = 0;\r\n    \r\n    return (\r\n      <Masonry\r\n        className={`tb_nc_post_container`}\r\n        tabIndex='0'\r\n        aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\"\r\n        elementType={'div'}\r\n        options={{\r\n          transitionDuration: 0,\r\n          percentPosition: true,\r\n          itemSelector: '.tb_nc_post_wrapper',\r\n          horizontalOrder: true,\r\n          resize: true,\r\n        }}\r\n        disableImagesLoaded={false}\r\n        updateOnEachImageLoad={false}\r\n        imagesLoadedOptions={{}}\r\n        enableResizableChildren={true}>{\r\n          loadData ?\r\n            ((postData && postData.length > 0)) && postData.map((item, index) => {\r\n              const cardData = completeDataObject[item];\r\n              counter = isTagEmbed || (isTagbox && wall.Personalization.widgetTheme == 83) ? index % 6 === 0 ? 1 : counter + 1 : 1;\r\n              return <Card ownerId={wall.Wall.owner} itemData={cardData} key={index} itemIndex={index} adjustWidth={adjustWidth} postSize={postSize} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} wall={wall} counter={counter} onClickPopUpSlider={onClickPopUpSlider} />\r\n            }) : null\r\n        }\r\n      </Masonry>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    postHeight: state.postHeight.data\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    managePostHeight: (data) => dispatch(managePostHeight(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsCard)"],"names":["AuthorDetails","lazy","Media","PostContent","ShareOnHover","CTAButton","Rating","SocialAction","trim_content_length","isTagEmbed","_ref","itemData","personalization","adjustWidth","ThemeRule","clickToShowPopUp","itemIndex","wallID","ownerId","onClickToCTA","wall","counter","onClickPopUpSlider","postTrack","useRef","cardSize","width","concat","padding","mediaType","type","rating","contentClass","textDecorate","ctaStatus","cta","Object","keys","length","status","postTextContent","trimcontent","PostTrimContent","content","useEffect","isTagShop","themeImpressionTracking","isPopUp","font","_jsx","id","className","IS_THEME","isTagbox","style","network","icon","referenceId","feedId","ref","tabIndex","role","children","_jsxs","onClick","share","Suspense","fallback","_Fragment","shareClass","item","ThemeID","widgetTheme","postTime","createdAt","author","ctaClass","hideContent","contentTitle","socialAction","actionClass","NewsCard","PureComponent","constructor","arguments","state","postData","loadData","onLoadMasonry","this","editorHeight","span","document","querySelector","getHeight","height","split","JSON","stringify","props","managePostHeight","componentDidMount","self","setTimeout","setState","window","addEventListener","event","componentWillReceiveProps","nextProps","render","completeDataObject","postSize","Masonry","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","map","index","cardData","Personalization","Card","Wall","owner","connect","postHeight","data","dispatch"],"sourceRoot":""}