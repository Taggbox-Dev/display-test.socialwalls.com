{"version":3,"file":"static/js/398.84695cab.chunk.js","mappings":"yLAIA,MAAMA,UAAsBC,EAAAA,UACxBC,WAAAA,CAAYC,GACRC,MAAMD,GAAO,KAUjBE,SAAW,KACP,MAAM,OAAEC,GAAWC,KAAKJ,MACxBK,YAAW,KACPC,OAAOC,cAAc,IAAIC,MAAM,WAC/BH,YAAW,KACP,MAAMI,EAAOC,SAASC,eAAe,uBAADC,OAAwBT,EAAS,IACjEM,GAAMA,EAAKI,UAAUC,IAAI,kBAAkB,GAChD,IAAI,GACR,IAAI,EAjBPV,KAAKW,MAAQC,EAAAA,WACjB,CAEAC,yBAAAA,CAA0BC,GACtB,MAAM,SAAEC,EAAQ,OAAEhB,GAAWe,EACzBC,GAAYhB,GAAUC,KAAKW,MAAMK,SAAWhB,KAAKJ,MAAMmB,WAAaA,GACpEf,KAAKW,MAAMK,QAAQC,OAAOC,WAElC,CAaAC,MAAAA,GACI,MAAM,OAAEpB,EAAM,QAAEqB,EAAO,SAAEL,EAAQ,mBAAEM,EAAkB,KAAEC,EAAI,aAAEC,EAAY,aAAEC,EAAY,UAAEC,EAAS,iBAAEC,GAAqB1B,KAAKJ,MAE9H,OACI+B,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACHC,IAAK7B,KAAKW,MACVmB,YAAY,EACZC,cAAe,OACfC,UAAU,WACVC,aAAc,EACdC,YAAY,EACZC,MAAM,EACNC,MAAO,IACPC,gBAAgB,EAChBC,SAAU,CAAEC,SAAS,EAAOC,sBAAsB,GAClDC,GAAE,uBAAAjC,OAAyBT,EAAS,GACpC2C,UAAU,wCAEVC,MAAO,CAAEC,MAAM,GAADpC,OAAK,IAAMiB,EAAS,MAClCoB,YAAa7C,KAAKF,SAASgD,SAEnB,OAAP1B,QAAO,IAAPA,GAAAA,EAAS2B,OAAS3B,EAAQ4B,KAAI,CAACC,EAAMC,KAClC,MAAMC,EAAW9B,EAAmB4B,GACpC,OAAOtB,EAAAA,EAAAA,KAACyB,EAAAA,GAAW,CAAAN,UACfnB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAAoDC,QAAShC,EAAKiC,KAAKC,MAAOlC,KAAMA,EAAMmC,SAAUN,EAAUO,UAAWR,EAAOS,gBAAiBrC,EAAKsC,gBAAiBC,UAAWvC,EAAKuC,UAAWnC,iBAAkBA,EAAkBoC,OAAQxC,EAAKiC,KAAKd,GAAIlB,aAAcA,EAAcC,aAAcA,GAAa,QAAAhB,OAArS0C,EAAK,KAAA1C,OAAIT,EAAS,EAAC,KAAAS,OAAI2C,EAASV,MAAwQ,QAAAjC,OAD9R0C,EAAK,KAAA1C,OAAIT,GAE5B,IACb,MAAI,uBAAAS,OATmBT,EAAS,GAYjD,EAGJ,S","sources":["app/Themes/Waterfall/Exhibit/Elements/SwiperFalling.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport Card from \"../Elements/Card\";\r\n\r\nclass SwiperFalling extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { activeID, pIndex } = nextProps;\r\n        if (activeID == pIndex && this.myRef.current && this.props.activeID !== activeID) {\r\n            this.myRef.current.swiper.slideNext();\r\n        }\r\n    }\r\n    onUpdate = () => {\r\n        const { pIndex } = this.props;\r\n        setTimeout(() => {\r\n            window.dispatchEvent(new Event(\"resize\"));\r\n            setTimeout(() => {\r\n                const wrap = document.getElementById(`tb_wall_list_wrap___${pIndex + 1}`);\r\n                if (wrap) wrap.classList.add(\"tb_fc_animation\");\r\n            }, 250);\r\n        }, 100);\r\n    };\r\n\r\n\r\n    render() {\r\n        const { pIndex, itemIds, activeID, completeDataObject, wall, onClickToCTA, postSizeInPx, cardCount, clickToShowPopUp } = this.props\r\n\r\n        return (\r\n            <Swiper\r\n                ref={this.myRef}\r\n                autoHeight={true}\r\n                slidesPerView={\"auto\"}\r\n                direction=\"vertical\"\r\n                spaceBetween={0}\r\n                mousewheel={true}\r\n                loop={true}\r\n                speed={2000}\r\n                allowTouchMove={false}\r\n                autoplay={{ enabled: false, disableOnInteraction: true }}\r\n                id={`tb_wall_list_wrap___${pIndex + 1}`}\r\n                className=\"swiper-container tb_wall_list_wrap___\"\r\n                key={`tb_wall_list_wrap___${pIndex + 1}`}\r\n                style={{ width: `${100 / cardCount}%` }}\r\n                onAfterInit={this.onUpdate}\r\n            >\r\n                {itemIds?.length ? itemIds.map((item, index) => {\r\n                    const cardData = completeDataObject[item];\r\n                    return <SwiperSlide key={`item_${index}_${pIndex}`}>\r\n                        <Card key={`item_${index}_${pIndex + 1}_${cardData.id}`} ownerId={wall.Wall.owner} wall={wall} itemData={cardData} itemIndex={index} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} clickToShowPopUp={clickToShowPopUp} wallID={wall.Wall.id} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} />\r\n                    </SwiperSlide>\r\n                }) : null}\r\n            </Swiper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwiperFalling;"],"names":["SwiperFalling","Component","constructor","props","super","onUpdate","pIndex","this","setTimeout","window","dispatchEvent","Event","wrap","document","getElementById","concat","classList","add","myRef","React","componentWillReceiveProps","nextProps","activeID","current","swiper","slideNext","render","itemIds","completeDataObject","wall","onClickToCTA","postSizeInPx","cardCount","clickToShowPopUp","_jsx","Swiper","ref","autoHeight","slidesPerView","direction","spaceBetween","mousewheel","loop","speed","allowTouchMove","autoplay","enabled","disableOnInteraction","id","className","style","width","onAfterInit","children","length","map","item","index","cardData","SwiperSlide","Card","ownerId","Wall","owner","itemData","itemIndex","personalization","Personalization","ThemeRule","wallID"],"sourceRoot":""}