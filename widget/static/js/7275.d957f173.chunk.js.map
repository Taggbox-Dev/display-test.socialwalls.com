{"version":3,"file":"static/js/7275.d957f173.chunk.js","mappings":"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","sources":["../node_modules/prop-types/lib/ReactPropTypesSecret.js","app/Components/PostPopUp/Elements/PopUpMediaSlider.js","../node_modules/prop-types/factoryWithThrowingShims.js","app/Components/PostPopUp/Elements/PopUpVideo.js","app/Components/PostPopUp/Elements/PopUpImage.js","../node_modules/prop-types/index.js","app/Themes/Elements/Hotspot/Hotspot.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React, { PureComponent } from \"react\";\nimport PopUpImage from \"./PopUpImage\";\nimport PopUpVideo from \"./PopUpVideo\";\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\nimport { isTagEmbed } from '../../../../actions/api'\n\nconst mediaDimension = JSON.parse(window.localStorage.getItem('mediaDimension'));\nexport default class PopUpMediaSlider extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaSize: {\n        height: 1000,\n        width: 1000,\n      },\n      mediaLoaded: false,\n      imgUrl: props.data.postFileNew,\n      largerHeight: 0,\n\n      isFirst: false,\n      isLast: false,\n      currentIndex: 0\n    };\n    this.splideRef = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { data } = nextProps\n    const { ImageUrl } = nextProps;\n    if (this.state.imgUrl !== ImageUrl) {\n      this.setState({\n        imgUrl: ImageUrl,\n        mediaLoaded: false,\n        mediaSize: {\n          height: parseInt(data.mediaHeight),\n          width: parseInt(data.mediaWidth)\n        }\n      })\n    }\n  }\n\n  componentDidMount() {\n    const { data } = this.props\n    this.setState({\n      mediaSize: {\n        height: parseInt(data.mediaHeight),\n        width: parseInt(data.mediaWidth)\n      }\n    })\n\n    this.splideRef.current.splide.on('moved', this.handleSlideChange);\n    this.handleSlideChange(); // Check on initial load\n  }\n\n  componentWillUnmount() {\n    this.splideRef.current.splide.off('moved', this.handleSlideChange);\n  }\n\n  handleSlideChange = () => {\n    const splide = this.splideRef.current.splide;\n    const index = splide.index;\n    const isFirst = index === 0;\n    const isLast = index === splide.length - 1;\n\n    this.setState({ isFirst, isLast });\n  };\n\n  render() {\n    const { imageList, data, wall } = this.props\n\n    const { mediaSize, isFirst, isLast, currentIndex } = this.state\n    const settings = {\n      //type:'slide',\n      rewind: false,\n      speed: 400,\n      gap: 0,\n      autoplay: false,\n      autoHeight: true,\n      padding: 0,\n      pagination: true,\n      arrows: true,\n      classes: {\n        pagination: 'splide__pagination tb_modal_slider_dots',\n        page: 'splide__pagination__page tb_modal_slider_dot',\n      },\n    };\n\n    return <>\n\n      <PopUpImage ImageUrl={data.postFile} data={data} wall={wall}\n        //mediaSizeCallback={this.mediaSize} \n        opacity={0} />\n      <div className=\"tb_post_modal_slide_holder_\">\n        <Splide hasTrack={false} className=\"tb_post_modal_media_slider\" options={settings} ref={this.splideRef} onActive={(splide, prev, next) => this.setState({ currentIndex: prev.index })}>\n          <SplideTrack>\n            {imageList.map((imageItem, index) => {\n              const autoPlay = currentIndex == index ? true : false\n              const isPostFile = isTagEmbed ? imageItem.file : imageItem.postFile\n              return <SplideSlide key={index} style={{\n                margin: 0,\n              }}>\n                {(imageItem.type === 2 || imageItem.type === 4 || !autoPlay) ?\n                  <PopUpImage key={`multi-slider${index}`} ImageUrl={isPostFile} data={{ link: data.link, network: { id: data.network.id }, id: imageItem.id, filterId: data.filterId, stories: imageItem.stories, feedId: data.feedId, postFileNew: isPostFile, filename: isPostFile, file: isPostFile }} wall={wall}\n                    //mediaSizeCallback={this.mediaSize} \n                    opacity={1} />\n                  : (imageItem.type === 3 || imageItem.type === 5) ?\n                    <PopUpVideo data={{ mediaUrl: isTagEmbed ? imageItem.media : imageItem.mediaFile, link: data.link, network: { id: isTagEmbed ? imageItem.networkId : data.networkId }, id: imageItem.id, filterId: data.filterId, stories: imageItem.stories ? imageItem.stories : 0, postFileNew: isPostFile, filename: isPostFile, file: isPostFile, feedId: data.feedId }} wall={wall}\n                      //mediaSizeCallback={this.mediaSize} \n                      opacity={1} /> : null}\n              </SplideSlide>\n            }\n            )}\n          </SplideTrack>\n          <div className=\"splide__arrows splide__arrows--ltr tb_post_modal_arrow_wrapper_\">\n            <div className=\"splide__arrow splide__arrow--prev tb_post_modal_arrow tb_post_modal_arrow_left__ tb__icon tb-arrow-left-alt\" disabled={isFirst}><div></div></div>\n            <div className=\"splide__arrow splide__arrow--next  tb_post_modal_arrow tb_post_modal_arrow_right__ tb__icon tb-arrow-right-alt\" disabled={isLast}><div></div></div>\n          </div>\n        </Splide>\n      </div>\n    </>\n  }\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","import React, { PureComponent } from \"react\";\nimport ReactPlayer from \"react-player\"\nimport { POPUP_VIDEO_RENEW } from '../../../../actions/themeActions'\nimport { isTagShop, isSocialWall } from \"../../../../actions/api\";\nimport { reelPlayTimeUpdateData } from \"../../../../utils\";\n\nconst mediaReplaceText = (mediaUrl, networkId) => {\n    switch (networkId) {\n        case 25:\n            const soundCloud = String(mediaUrl).replace(\"https://w.soundcloud.com/player/?url=\", \"\")\n            return soundCloud\n            break;\n\n        default:\n            return mediaUrl\n            break;\n    }\n\n}\nexport default class PopUpVideo extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoLoaded: false,\n            muted: isSocialWall ? true : false,\n            played: 0\n        }\n        this.VideoWrap = React.createRef();\n    }\n\n    setVideoLoaded = event => {\n        this.setState({\n            videoLoaded: event\n        })\n    }\n\n    muteToggle = () => {\n        this.setState({\n            muted: !this.state.muted,\n        })\n    }\n    componentWillUnmount() {\n        const { played } = this.state\n        if (isTagShop) reelPlayTimeUpdateData(played)\n    }\n    onUpdateTime = (progress) => {\n        try {\n            if (isTagShop) {\n                const { played } = this.state\n                this.setState({\n                    played: played + progress.playedSeconds\n                })\n            }\n        }\n        catch (e) {\n            console.log(e)\n        }\n\n    }\n    render() {\n        const { data, wall } = this.props\n        const { videoLoaded, muted } = this.state\n        const noMuteIcon = [7, 3, 25]\n        const muteIcon = !noMuteIcon.includes(data.network.id) ? true : false\n        return <div className={`tb_post_modal_video_holder${videoLoaded ? ' tb_post_video_loaded' : ''}`} ref={this.VideoWrap} key={data.mediaUrl} >\n            {muteIcon ?\n                <div className=\"tb_m_mute_btn\" onClick={this.muteToggle}>\n                    <div className={`tb__icon tb-${!muted ? `unmute` : `mute`}`}><div></div></div>\n                </div>\n                : ''}\n            <ReactPlayer\n                className={`tb_post_modal_video video${data.id}`}\n                url={mediaReplaceText(data.mediaUrl, data.network.id)}\n                data-type=\"video\"\n                data-network={data.network.id}\n                data-link={data.link}\n                data-wall-id={wall.Wall.id}\n                data-item-id={data.id}\n                data-feed-id={data.feedId ? data.feedId : \"\"}\n                data-load={0}\n                config={{\n                    facebook: {\n                        appId: '117029975354072',\n                        attributes: {\n                            'data-width': 'auto',\n                            muted,\n                            poster: data.postFileNew\n                            // 'data-height': `${document.querySelector('.ts_rt_post_in') ? `${document.querySelector('.ts_rt_post_in').clientHeight} px` : '100%'}`\n                        }\n                    },\n                    file: {\n                        forceVideo: true,\n\n                        attributes: {\n                            muted,\n                            poster: data.postFileNew\n                            // onError: (e) => IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP_VIDEO(e)\n                        }\n                    }\n                    // tracks: [\n                    //     {kind: 'subtitles', src: `${CloudUrl}/media/images/subtitles.en.vtt`, srcLang: 'en', default: true},\n                    // ]\n                }}\n                loop={true}\n                //onError={(e) => { this.setVideoLoaded(false) }}\n                onError={(e) => {\n                    if (!data.stories || data.stories == 0) POPUP_VIDEO_RENEW(e, data.id)\n\n                    //this.setVideoLoaded(false)\n                }}\n                //(data.stories == 0) ? POPUP_VIDEO_RENEW(e) : null}\n                autoPlay={true}\n                muted={muted}\n                volume={1}\n                playsinline={true}\n                onReady={(e) => { this.setVideoLoaded(true) }}\n                playing={true}\n                height={'100%'}\n                width={'100%'}\n                controls={!muteIcon ? true : false}\n                style={{ backgroundImage: `url(${data.postFileNew})`, backgroundSize: 'cover', backgroundPosition: 'center', backgroundRepeat: 'no-repeat' }}\n                onProgress={this.onUpdateTime}\n            />\n        </div>\n    }\n}","import React, { PureComponent, Component } from \"react\";\nimport { POPUP_IMAGE_RENEW_REQUEST } from '../../../../actions/themeActions'\nimport { getImageSize } from 'react-image-size';\nimport Hotspot from \"../../../Themes/Elements/Hotspot/Hotspot\";\nimport { GET_MEDIA_NAME } from \"../../../../utils\";\n\nexport default class PopUpImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaLoaded: false,\n      largerHeight: 0,\n      imgSize: {\n        small: props.data.postFileNew,\n        large: props.data.filename,\n        orignal: props.data.file\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { data } = nextProps\n    if (this.props.data !== data) {\n      this.setState({\n        imgSize: {\n          small: data.postFileNew,\n          large: data.filename,\n          orignal: data.file\n        }\n      })\n    }\n  }\n  render() {\n    const { data, wall, opacity, mediaSize } = this.props\n    const { mediaLoaded, imgSize } = this.state\n    const isHotspot = data.hotspot && data.ugc_products.length > 0 ? true : false\n    const imgStyle = {\n      opacity: opacity, filter: mediaLoaded ? 'blur(2px)' : null,\n      //aspectRatio: `${mediaSize.width}/${mediaSize.height}` \n    }\n    return (\n      <div className={`tb_post_modal_img_holder`}>\n        {isHotspot ? <Hotspot product={data.ugc_products} /> : null}\n        <img\n          className=\"tb_post_modal_img_\"\n          decoding=\"async\"\n          ref={this.mediaRef}\n          src={imgSize.small}\n          srcSet={`${imgSize.large}, 991w ${imgSize.small}, 480w`}\n          sizes={mediaSize && mediaSize.width}\n          alt={GET_MEDIA_NAME(imgSize.small)}\n          data-link={data.link}\n          data-network={data.network.id}\n          data-wall-id={wall.Wall.id}\n          data-owner-id={wall.Wall.owner}\n          data-item-id={data.id}\n          data-feed-id={data.feedId ? data.feedId : \"\"}\n          data-filter-id={data.filterId}\n          data-load=\"0\"\n          onLoad={this.handleImageLoad}\n          onError={!data.stories ? (e) => {\n            //POPUP_IMAGE_RENEW_REQUEST(e) \n          } : null}\n          key={imgSize.small}\n          loading=\"lazy\"\n          draggable=\"false\"\n          width={mediaSize && mediaSize.width}\n          height={mediaSize && mediaSize.height}\n          style={imgStyle} />\n      </div>\n    );\n  }\n}\n\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import React, { PureComponent, Suspense } from \"react\";\nimport { connect } from 'react-redux';\nimport { componentWillAppendToBody } from \"react-append-to-body\";\nimport { Tooltip } from 'react-tooltip';\nimport \"./scss/Hotspot.scss\";\nimport { generateUniqueString } from '../../../../utils'\n\nconst MyComponent = ({ children }) => {\n  return children;\n}\n\nconst AppendedView = componentWillAppendToBody(MyComponent);\nconst htmlString = (product) => {\n  const discountPrice = product.product_discount > 0 ? product.product_discount : product.product_price;\n  const originalPrice = product.product_discount > 0 && product.product_discount != product.product_price ?\n    `<div class=\"tb_p_tooltip_price tb_price_disabled\">${product.price_currency_symbol}${product.product_price}</div>` : '';\n  const priceHtml = product.product_price > 0 || product.product_discount > 0 ?\n    `${originalPrice}<div class=\"tb_p_tooltip_price\">${product.price_currency_symbol}${discountPrice}</div>` : '';\n\n  return `<a href=\"${product.product_url}\" target=\"_blank\" class=\"tb_tooltip_wrap\">\n          <div class=\"tb_p_tooltip_title\">${product.product_title}</div>\n          ${priceHtml}\n        </a>`;\n}\n\nclass Hotspot extends PureComponent {\n  state = { activeMouse: null }\n\n  setActiveMouse = (index) => {\n    return index\n  }\n  render() {\n    const { product, appData } = this.props;\n    const { activeMouse } = this.state;\n    const Hotspot = appData && Object.keys(appData).length > 0 ? appData.wall.ProductSetting.Hotspot : ''\n    return (Hotspot.status ? <div className=\"tb_hotspot_wrap\">\n      {product.map((item, index) => {\n        const uniqueString = generateUniqueString();\n        return <div key={index} href={item.product_url} id={`tb_hotspot-${item.id}${uniqueString}`} onClick={event => { event.stopPropagation() }} onMouseEnter={event => this.setActiveMouse(index)} onMouseOut={event => this.setActiveMouse(null)} className={`tb_hotspot_dot${activeMouse == index ? ' tb_hotspot_active_' : ''}`} style={{ top: item.hotspot_cordinates.top, left: item.hotspot_cordinates.left }} data-tooltip-offset={7}>\n          <div className={`tb_hotspot__ ${Hotspot.type == 0 ? 'tb_hotspot_ani__' : ''}`} onClick={event => window.open(item.UgcProduct.product_url, '_blank')}>{index + 1}</div>\n          <AppendedView><Tooltip className=\"tb_pro_tooltip\" anchorSelect={`#tb_hotspot-${item.id}${uniqueString}`} clickable html={htmlString(item.UgcProduct)} /></AppendedView>\n        </div>\n      })\n      }\n    </div >\n      : null\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    appData: state.appData\n  }\n}\n\nexport default connect(mapStateToProps)(Hotspot);"],"names":["module","exports","JSON","parse","window","localStorage","getItem","PopUpMediaSlider","PureComponent","constructor","props","super","handleSlideChange","splide","this","splideRef","current","index","isFirst","isLast","length","setState","state","mediaSize","height","width","mediaLoaded","imgUrl","data","postFileNew","largerHeight","currentIndex","React","componentWillReceiveProps","nextProps","ImageUrl","parseInt","mediaHeight","mediaWidth","componentDidMount","on","componentWillUnmount","off","render","imageList","wall","_jsxs","_Fragment","children","_jsx","PopUpImage","postFile","opacity","className","Splide","hasTrack","options","rewind","speed","gap","autoplay","autoHeight","padding","pagination","arrows","classes","page","ref","onActive","prev","next","SplideTrack","map","imageItem","autoPlay","isPostFile","isTagEmbed","file","SplideSlide","style","margin","type","PopUpVideo","mediaUrl","media","mediaFile","link","network","id","networkId","filterId","stories","filename","feedId","concat","disabled","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","mediaReplaceText","String","replace","setVideoLoaded","event","videoLoaded","muteToggle","muted","onUpdateTime","progress","isTagShop","played","playedSeconds","e","console","log","isSocialWall","VideoWrap","reelPlayTimeUpdateData","muteIcon","includes","onClick","ReactPlayer","url","Wall","config","facebook","appId","attributes","poster","forceVideo","loop","onError","POPUP_VIDEO_RENEW","volume","playsinline","onReady","playing","controls","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","onProgress","Component","imgSize","small","large","orignal","isHotspot","hotspot","ugc_products","imgStyle","filter","Hotspot","product","decoding","mediaRef","src","srcSet","sizes","alt","GET_MEDIA_NAME","owner","onLoad","handleImageLoad","loading","draggable","AppendedView","componentWillAppendToBody","_ref","htmlString","discountPrice","product_discount","product_price","originalPrice","price_currency_symbol","priceHtml","product_url","product_title","arguments","activeMouse","setActiveMouse","appData","Object","keys","ProductSetting","status","item","uniqueString","generateUniqueString","href","stopPropagation","onMouseEnter","onMouseOut","top","hotspot_cordinates","left","open","UgcProduct","Tooltip","anchorSelect","clickable","html","connect"],"sourceRoot":""}