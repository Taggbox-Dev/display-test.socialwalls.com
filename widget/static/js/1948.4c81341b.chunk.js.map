{"version":3,"file":"static/js/1948.4c81341b.chunk.js","mappings":"qKACA,MAAMA,GAAqBC,EAAAA,EAAAA,OAAK,IAAM,iCAEvB,MAAMC,UAAmBC,EAAAA,UACjCC,WAAAA,CAAYC,GACLC,MAAMD,GACNE,KAAKC,MAAQ,CACNC,YAAa,EACbC,UAAY,IAEnBH,KAAKI,iBAAmBJ,KAAKI,iBAAiBC,KAAKL,KAC1D,CAEAM,iBAAAA,GACOC,OAAOC,iBAAiB,SAAUR,KAAKI,kBACvCJ,KAAKI,kBACZ,CAEAK,oBAAAA,GACOF,OAAOG,oBAAoB,SAAUV,KAAKI,iBACjD,CACAO,kBAAAA,GACOX,KAAKI,kBACZ,CAEAA,gBAAAA,GAEO,MAAM,UAAEQ,EAAS,KAAEC,GAASb,KAAKF,MAC3BI,EAAcF,KAAKc,OAAOC,YAG5Bb,IAAgBF,KAAKC,MAAMC,cACrBA,EAAc,KAAOA,EAAc,IAC/BF,KAAKgB,SAAS,CAAEb,UAAU,GAADc,OAAKL,EAAS,SACrCV,EAAc,KAAOA,EAAc,IACrCF,KAAKgB,SAAS,CAAEb,UAAU,GAADc,OAAKL,EAAS,SACrCV,EAAc,KAAOA,EAAc,GACrCF,KAAKgB,SAAS,CAAEb,UAAU,GAADc,OAAKL,EAAS,SAE9CZ,KAAKgB,SAAS,CAAEd,gBAE9B,CACAgB,MAAAA,GACO,MAAM,UAAEN,EAAS,KAAEC,GAASb,KAAKF,OAC3B,UAAEK,GAAcH,KAAKC,MAC3B,OACOkB,EAAAA,EAAAA,KAAA,OAAKP,UAAS,GAAAK,OAAKL,EAAS,KAAAK,OAAId,GAAaiB,IAAMA,IAAUpB,KAAKc,OAASM,CAAG,EAAIC,UAC3EF,EAAAA,EAAAA,KAACG,EAAAA,SAAQ,CAACC,UAAUJ,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,IAAMH,UAACF,EAAAA,EAAAA,KAAC1B,EAAkB,CAACgC,YAAaZ,EAAKY,YAAaC,GAAIb,EAAKc,KAAKD,GAAKE,cAAef,EAAKc,KAAKE,YAG/I,E","sources":["app/Themes/Elements/CardSnapUp/index.js"],"sourcesContent":["import React, { Component, Suspense, lazy } from 'react'\r\nconst OnsiteUploadButton = lazy(() => import('../../../Components/UserComponents/OnsiteUploadButton'));\r\n\r\nexport default class CardSnapUp extends Component {\r\n       constructor(props) {\r\n              super(props);\r\n              this.state = {\r\n                     snapBtnSize: 0,\r\n                     sizeClass : ''\r\n              };\r\n              this.updateDimensions = this.updateDimensions.bind(this);\r\n       }\r\n\r\n       componentDidMount() {\r\n              window.addEventListener('resize', this.updateDimensions);\r\n              this.updateDimensions();\r\n       }\r\n\r\n       componentWillUnmount() {\r\n              window.removeEventListener('resize', this.updateDimensions);\r\n       }\r\n       componentDidUpdate() {\r\n              this.updateDimensions();\r\n       }\r\n\r\n       updateDimensions() {\r\n\r\n              const { className, wall } = this.props\r\n              const snapBtnSize = this.divRef.offsetWidth;\r\n\r\n\r\n              if (snapBtnSize !== this.state.snapBtnSize) {\r\n                     if(snapBtnSize < 200 && snapBtnSize > 150){\r\n                            this.setState({ sizeClass: `${className}-3x` });\r\n                     }else if(snapBtnSize < 150 && snapBtnSize > 120) {\r\n                            this.setState({ sizeClass: `${className}-2x` });\r\n                     }else if(snapBtnSize < 120 && snapBtnSize > 0) {\r\n                            this.setState({ sizeClass: `${className}-1x` });\r\n                     }\r\n                     this.setState({ snapBtnSize });\r\n              }\r\n       }\r\n       render() {\r\n              const { className, wall } = this.props\r\n              const { sizeClass } = this.state\r\n              return (\r\n                     <div className={`${className} ${sizeClass}`} ref={(ref) => { this.divRef = ref; }}>\r\n                            <Suspense fallback={<></>}><OnsiteUploadButton UgcSettings={wall.UgcSettings} id={wall.Wall.id}  tagShopWallId={wall.Wall.wallId}/></Suspense>\r\n                     </div>\r\n              )\r\n       }\r\n}\r\n"],"names":["OnsiteUploadButton","lazy","CardSnapUp","Component","constructor","props","super","this","state","snapBtnSize","sizeClass","updateDimensions","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","className","wall","divRef","offsetWidth","setState","concat","render","_jsx","ref","children","Suspense","fallback","_Fragment","UgcSettings","id","Wall","tagShopWallId","wallId"],"sourceRoot":""}