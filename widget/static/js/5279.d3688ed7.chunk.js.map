{"version":3,"file":"static/js/5279.d3688ed7.chunk.js","mappings":"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","sources":["app/Components/ScrollAnimation/index.js","app/Themes/Elements/Network/Network.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/Elements/ShopButton/ShopButton.js","app/Themes/Waterfall/Pixel/Elements/Card.js","app/Themes/Waterfall/Pixel/index.js"],"sourcesContent":["import { Component, memo } from \"react\";\r\nimport { isSocialWall, isSocialEmbed } from \"../../../actions/api\";\r\n\r\nvar ReachedMaxScroll = false;\r\nvar PreviousScrollTop = 0;\r\nvar setTimescroll = 0;\r\nvar ScrollInterval = 0;\r\nvar scrollTime, DivElmnt;\r\nconst speedUpPixel = scrollDelay => ({ 80: 60, 70: 40, 50: 30, 30: 20, 20: 10 }[scrollDelay] ?? 20);\r\nconst scrollSpeedValue = window.location.href.includes(\"app=1\") ? 1.2 : 0.6\r\nclass ScrollAnimation extends Component {\r\n    state = {\r\n        slideWall: 0,\r\n    }\r\n    componentDidMount() {\r\n        this.onLoadScroll()\r\n        window.addEventListener('resize', () => {\r\n            this.onScrollWPosts();\r\n        });\r\n    }\r\n    onLoadScroll = () => {\r\n        if (!isSocialEmbed) {\r\n            const { wall } = this.props;\r\n            window.clearData = this.clearData;\r\n            const prentId = document.querySelector(\".tb_app_container\");\r\n            prentId?.addEventListener(\"wheel\", e => e.preventDefault(), { passive: false });\r\n            setTimescroll = setTimeout(() => this.scrollDiv_init(wall.ThemeRule.themeId), 500);\r\n        }\r\n    }\r\n    scrollDiv_init = (themeId) => {\r\n        const { slideWall } = this.state\r\n        const { parentId } = this.props\r\n        if (!slideWall) {\r\n            DivElmnt = document.getElementById(parentId);\r\n            if (themeId == 63) ReachedMaxScroll = false;\r\n            (DivElmnt || {}).scrollTop = 0;\r\n            PreviousScrollTop = 0;\r\n            this.onScrollData();\r\n            this.onScrollWPosts();\r\n        }\r\n    };\r\n\r\n    onScrollData = () => {\r\n        const { wall } = this.props;\r\n        const delay = wall.Personalization.scrollDelay;\r\n        if (delay) {\r\n            const speed = speedUpPixel(delay);\r\n            ScrollInterval = setInterval(this.scrollDiv, speed);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    onScrollWPosts = () => {\r\n        const { themeHeight, wall, renderID, parentId } = this.props;\r\n        const DivElmnt = document.getElementById(parentId);\r\n        const dataPost = document.getElementById(renderID);\r\n        var themeContainer = document.querySelector(\".tb_theme_container\");\r\n\r\n        if (themeContainer) {\r\n            themeContainer = window.getComputedStyle(themeContainer).getPropertyValue('height');\r\n            if (dataPost) {\r\n                if (window.innerHeight < dataPost.clientHeight) {\r\n                    DivElmnt.style = `height:${themeContainer}`\r\n                    dataPost.style = `position: relative; margin-bottom: ${window.innerHeight}px; min-height: ${dataPost.clientHeight}px`;\r\n\r\n                } else {\r\n                    const height = themeHeight && isSocialWall ? themeHeight + (window.editor ? 6 : 0) : 0;\r\n                    DivElmnt.style = `height:${themeContainer}`;\r\n                    DivElmnt.setAttribute(\"style\", `height:${themeContainer}`);\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n\r\n    scrollDiv = () => {\r\n        const { themeId } = this.props.wall.ThemeRule;\r\n        if (ScrollInterval) clearInterval(ScrollInterval);\r\n\r\n        const div = DivElmnt || {};\r\n\r\n        if (!ReachedMaxScroll) {\r\n            PreviousScrollTop = PreviousScrollTop + scrollSpeedValue\r\n            div.scrollTop = PreviousScrollTop;\r\n            ReachedMaxScroll = div.scrollTop >= div.scrollHeight - div.offsetHeight - 600;\r\n        } else if (themeId === 63) {\r\n            PreviousScrollTop = PreviousScrollTop - scrollSpeedValue\r\n            div.scrollTop = PreviousScrollTop;\r\n            ReachedMaxScroll = ReachedMaxScroll && div.scrollTop === 0 ? false : true;\r\n        } else {\r\n            div.scrollTop = PreviousScrollTop = 0;\r\n            ReachedMaxScroll = false;\r\n        }\r\n\r\n        this.onScrollData();\r\n    };\r\n\r\n\r\n    pauseDiv = () => {\r\n        clearInterval(ScrollInterval);\r\n        clearTimeout(scrollTime);\r\n        scrollTime = setTimeout(this.resumeDiv, 5000);\r\n    };\r\n\r\n\r\n    resumeDiv = () => {\r\n        const { wall, renderID } = this.props;\r\n        DivElmnt = document.getElementById(renderID);\r\n        PreviousScrollTop = DivElmnt?.scrollTop || 0;\r\n        ScrollInterval = setInterval(this.scrollDiv, speedUpPixel(wall.Personalization.scrollDelay));\r\n    };\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { postData, wall } = prevProps;\r\n        const { ThemeRule } = this.props.wall;\r\n\r\n        if (ThemeRule.themeId !== wall.ThemeRule.themeId) {\r\n            ReachedMaxScroll = false;\r\n            PreviousScrollTop = 0;\r\n        }\r\n\r\n        if (postData !== this.props.postData) {\r\n            this.clearTime(1);\r\n            this.scrollDiv_init(ThemeRule.themeId);\r\n        }\r\n    }\r\n    clearData = () => this.clearTime()\r\n\r\n    clearTime = (status = 0) => {\r\n        this.setState({ slideWall: status ? 0 : 1 });\r\n        clearInterval(ScrollInterval);\r\n        ScrollInterval = 0;\r\n        clearTimeout(scrollTime);\r\n        clearTimeout(setTimescroll);\r\n        ReachedMaxScroll = false;\r\n        PreviousScrollTop = 0;\r\n    };\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.clearTime()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {({ ...this.props.children })}</>\r\n    }\r\n}\r\nexport default memo(ScrollAnimation);","import React, { PureComponent, Suspense } from \"react\";\r\nimport { isTagEmbed } from \"../../../../actions/api\";\r\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\r\n\r\nexport default class Network extends PureComponent {\r\n  render() {\r\n    const { network, networkClass, isDefault } = this.props;\r\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\r\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\r\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`} aria-label={`post network ${network?.name || \"\"}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { themePostTracking, gtmAnalyticsAction } from '../../../../actions/themeActions'\r\nimport { isTagEmbed } from '../../../../actions/api'\r\n\r\nexport default class ShareOnHover extends PureComponent {\r\n\r\n\r\n  onClickData = (shareURL) => event => {\r\n    const { item, wallID, ownerId } = this.props;\r\n    event.stopPropagation();\r\n    if (!isTagEmbed) themePostTracking({\r\n      type: 2,\r\n      action: 2,\r\n      wall: wallID,\r\n      feed: item.feedId,\r\n      post: item.referenceId ? item.referenceId : item.id,\r\n      owner: ownerId\r\n    })\r\n    gtmAnalyticsAction(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\r\n    window.open(shareURL, \"_blank\")\r\n  }\r\n\r\n  render() {\r\n    const { share, shareClass } = this.props;\r\n    return <div className={`tb_share_wrapper ${shareClass}`}>\r\n      <div className={`tb_share_button_ tb__icon ${isTagEmbed ? 'tb-share-fill' : 'tb-share'}`}><div></div></div>\r\n      <div className=\"tb_share_icon_list_wrap\">\r\n        {share.facebook ?\r\n          <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(share.facebook)} className=\"tb_share_ico__ tb__icon tb-facebook\" title=\"facebook\"><div></div></div>\r\n          </div>\r\n          : ''}\r\n        {share.twitter ?\r\n          <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(share.twitter)} className=\"tb_share_ico__  tb__icon tb-twitter\" title=\"twitter\"><div></div></div>\r\n          </div>\r\n          : ''}\r\n        {share.linkedin ?\r\n          <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(share.linkedin)} className=\"tb_share_ico__ tb__icon tb-linkedin\" title=\"linkedin\"><div></div></div>\r\n          </div>\r\n          : ''}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import \"./scss/ShopButton.scss\";\r\nimport { IS_THEME } from \"../../../../utils\";\r\nconst ShopButton = ({ ThemeRule, btnClass }) => {\r\n  const shopBtnStyle = { fontFamily: ThemeRule.css_font }\r\n  return <div className={`tb_shop_btn_wrap ${btnClass}`}>\r\n    <div className={`tb_shop_btn${ThemeRule.postHover || IS_THEME(4) || IS_THEME(55) ? ' tb_shop_btn_light' : ' tb_shop_btn_dark'}`} style={shopBtnStyle}>\r\n      {ThemeRule.shoppingText}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\nexport default ShopButton;","import React, { Suspense, useRef, useEffect } from \"react\";\r\nimport { IS_THEME, PostTrimContent, themeImpressionTracking } from '../../../../../utils'\r\nimport { isSocialEmbed, isSocialWall, isTagEmbed, isTagShop, isTagbox } from \"../../../../../actions/api\";\r\nimport { suiteTrack } from '../../../../../actions/api'\r\nimport ShareOnHover from \"../../../Elements/ShareOnHover/ShareOnHover\";\r\nimport Network from \"../../../Elements/Network/Network\";\r\nimport ShopButton from \"../../../Elements/ShopButton/ShopButton\";\r\nconst AuthorDetails = React.lazy(() => import(\"./AuthorDetails\"));\r\nconst Media = React.lazy(() => import('./Media'));\r\nconst PostContent = React.lazy(() => import('../../../Elements/PostContent/PostContent'));\r\nconst trim_content_length = (isSocialWall || isSocialEmbed) ? 50 : null;\r\n\r\n\r\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, postSizeInPx, wall, onClickPopUpSlider }) => {\r\n  const postTrack = useRef(null);\r\n  const mediaType = (itemData.type === 2 || itemData.type === 3 || itemData.type === 4 || itemData.type === 5) ? true : false;\r\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\r\n  const responsiveCardSize2x = postSizeInPx.adjustWidth < 250 ? true : false\r\n  const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\r\n  const overlay = isTagbox ? 'tb_px_color_overlay' : 'tb_px_post_overlay-' + themeMode\r\n  const overlayStyle = { backgroundColor: isTagbox ? ThemeRule.backgroundColor : '' }\r\n  useEffect(() => {\r\n    if (suiteTrack) themeImpressionTracking(postTrack);\r\n  }, []);\r\n  const isHotspot = itemData.hotspot && itemData.ugc_products.length > 0 ? true : false\r\n  const isShopBtn = isTagShop && (!itemData.hotspot && itemData.ugc_products.length > 0) ? true : false;\r\n  const showAuthor = ThemeRule.postAuthor || ThemeRule.postTime ? true : false\r\n\r\n\r\n  useEffect(() => {\r\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\r\n  }, [itemIndex, itemData.isPopUp, itemData]);\r\n  return <div id={`tb-sp-post-${itemData.id}`} className={`tb_px_post_wrapper${responsiveCardSize2x ? ' tb_px_post_wrapper2x' : ''}`} style={{ width: `${adjustWidth}%`, padding: personalization.padding / 2 }} tb-network={itemData.network.id} tb-product={isShopBtn ? 1 : isHotspot ? 2 : 0} tabIndex=\"0\" role=\"article\" aria-label={`Post ${parseInt(itemIndex) + 1},${postTextContent}`} ref={postTrack} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId}>\r\n    <div className={`tb_px_post_in${isTagShop ? ' tb_px_post_ani' : ''}`} onClick={clickToShowPopUp(itemIndex, itemData)}>\r\n      <div className=\"tb_px_post_media_wrapp\">\r\n        {itemData.share.status ? <ShareOnHover share={itemData.share} shareClass={'tb_px_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} /> : ''}\r\n        {mediaType ? <Suspense fallback={<></>}><Media key={`img${itemIndex}_${itemData.id}`} itemData={itemData} wallID={wallID} ownerId={ownerId} ThemeID={personalization.widgetTheme} wall={wall} /></Suspense> : ''}\r\n        {showAuthor ? \r\n          <Suspense fallback={<></>}><AuthorDetails ownerId={ownerId} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={ThemeRule} personalization={personalization} ThemeRule={ThemeRule} /></Suspense>\r\n        :null}\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\nexport default Card","import React, { Component } from \"react\";\r\nimport Masonry from 'react-masonry-component';\r\nimport Card from \"./Elements/Card\";\r\nimport { connect } from 'react-redux';\r\nimport { managePostHeight } from '../../../../actions/themeActions';\r\nimport \"./scss/Pixel.scss\";\r\nimport ScrollAnimation from \"../../../Components/ScrollAnimation\";\r\nclass SquarePhoto extends Component {\r\n  state = {\r\n    postData: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { heightUpdate } = this.props;\r\n    setTimeout(() => heightUpdate(), 1000)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.postData !== this.props.postData) return true\r\n    else return false\r\n  }\r\n\r\n\r\n  render() {\r\n    const { postData, completeDataObject, adjustWidth, wall, clickToShowPopUp, cardNumber, onClickToCTA, postSizeInPx, onClickPopUpSlider } = this.props;\r\n    let totalPostBestFit = postData.length;\r\n    if (wall && wall.Personalization.fitRow == 1) {\r\n      if (postData.length >= parseInt(cardNumber)) {\r\n        let bestFitEachRow = postData.length / parseInt(cardNumber);\r\n        totalPostBestFit = (parseInt(cardNumber) * parseInt(bestFitEachRow));\r\n      }\r\n    }\r\n    return (\r\n      <ScrollAnimation wall={wall} parentId=\"tb_marquee\" renderID=\"pixel\">\r\n        <div id=\"tb_marquee\">\r\n          <Masonry\r\n            id=\"pixel\"\r\n            className={`tb_px_post_container`}\r\n            tabIndex='0'\r\n            aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`}\r\n            elementType={'div'}\r\n            options={{\r\n              transitionDuration: 0,\r\n              percentPosition: true,\r\n              itemSelector: '.tb_px_post_wrapper',\r\n              horizontalOrder: false,\r\n              resize: true,\r\n            }}\r\n            disableImagesLoaded={false}\r\n            updateOnEachImageLoad={false}\r\n            imagesLoadedOptions={{}}\r\n            enableResizableChildren={true}>\r\n\r\n            {(postData?.length > 0) && postData.map((item, index) => {\r\n              const cardData = completeDataObject[item];\r\n              return <Card ownerId={wall.Wall.owner} itemData={cardData} key={`sqr_crd_${index}_${cardData.id}`} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} onClickPopUpSlider={onClickPopUpSlider} />\r\n            })}\r\n\r\n          </Masonry>\r\n        </div>\r\n      </ScrollAnimation>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    postHeight: state.postHeight.data\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    managePostHeight: (data) => dispatch(managePostHeight(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SquarePhoto)"],"names":["scrollTime","DivElmnt","ReachedMaxScroll","PreviousScrollTop","setTimescroll","ScrollInterval","speedUpPixel","scrollDelay","_$70$50$30$20$scrol","scrollSpeedValue","window","location","href","includes","ScrollAnimation","Component","constructor","_this","arguments","this","state","slideWall","onLoadScroll","isSocialEmbed","wall","props","clearData","prentId","document","querySelector","addEventListener","e","preventDefault","passive","setTimeout","scrollDiv_init","ThemeRule","themeId","parentId","getElementById","scrollTop","onScrollData","onScrollWPosts","delay","Personalization","speed","setInterval","scrollDiv","themeHeight","renderID","dataPost","themeContainer","getComputedStyle","getPropertyValue","innerHeight","clientHeight","style","concat","isSocialWall","editor","setAttribute","clearInterval","div","scrollHeight","offsetHeight","pauseDiv","clearTimeout","resumeDiv","_DivElmnt","clearTime","status","length","undefined","setState","componentDidMount","componentDidUpdate","prevProps","prevState","postData","componentWillUnmount","render","_jsx","_Fragment","children","memo","DefaultNetwork","React","Network","PureComponent","network","networkClass","isDefault","isDefaultIcon","id","icon","isTagEmbed","className","replace","name","_jsxs","Suspense","fallback","ShareOnHover","onClickData","shareURL","event","item","wallID","ownerId","stopPropagation","themePostTracking","type","action","feed","feedId","post","referenceId","owner","gtmAnalyticsAction","open","share","shareClass","facebook","onClick","title","twitter","linkedin","_ref","btnClass","shopBtnStyle","fontFamily","css_font","postHover","IS_THEME","shoppingText","AuthorDetails","Media","trim_content_length","itemData","personalization","adjustWidth","clickToShowPopUp","itemIndex","postSizeInPx","onClickPopUpSlider","postTrack","useRef","mediaType","postTextContent","trimcontent","PostTrimContent","content","responsiveCardSize2x","themeMode","isTagShop","isTagbox","backgroundColor","useEffect","suiteTrack","themeImpressionTracking","isHotspot","hotspot","ugc_products","isShopBtn","showAuthor","postAuthor","postTime","isPopUp","width","padding","tabIndex","role","parseInt","ref","ThemeID","widgetTheme","createdAt","author","font","SquarePhoto","heightUpdate","completeDataObject","cardNumber","onClickToCTA","totalPostBestFit","fitRow","bestFitEachRow","Masonry","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","map","index","cardData","Card","Wall","connect","postHeight","data","dispatch","managePostHeight"],"sourceRoot":""}