{"version":3,"file":"static/js/3108.6527681f.chunk.js","mappings":"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","sources":["app/Components/PostPopUp/Elements/PopUpImage.js","app/Themes/Elements/Hotspot/Hotspot.js"],"sourcesContent":["import React, { PureComponent, Component } from \"react\";\r\nimport { POPUP_IMAGE_RENEW_REQUEST } from '../../../../actions/themeActions'\r\nimport Hotspot from \"../../../Themes/Elements/Hotspot/Hotspot\";\r\nimport PostBranding from \"../../../Themes/Elements/Branding/PostBranding\";\r\nimport { GET_MEDIA_NAME } from \"../../../../utils\";\r\nimport { isTagShop } from \"../../../../actions/api\";\r\nimport { CloudUrl } from \"../../../../constants\";\r\n\r\nexport default class PopUpImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mediaLoaded: false,\r\n      largerHeight: 0,\r\n      imgSize: {\r\n        small: props.data.postFileNew,\r\n        large: props.data.filename,\r\n        orignal: props.data.file\r\n      }\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { data } = nextProps\r\n    if (this.props.data !== data) {\r\n      this.setState({\r\n        imgSize: {\r\n          small: data.postFileNew,\r\n          large: data.filename,\r\n          orignal: data.file\r\n        }\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { data, wall, opacity, mediaSize } = this.props\r\n    const { mediaLoaded, imgSize } = this.state\r\n    const isHotspot = data.hotspot && data.ugc_products.length > 0 ? true : false\r\n    const imgStyle = {\r\n      opacity: opacity, filter: mediaLoaded ? 'blur(2px)' : null,\r\n      //aspectRatio: `${mediaSize.width}/${mediaSize.height}` \r\n    }\r\n    return (\r\n      <div className={`tb_post_modal_img_holder`}>\r\n        {data?.postBranding ? <PostBranding size={2} /> : null}\r\n        {isHotspot ? <Hotspot product={data.ugc_products} dataItem={data} /> : null}\r\n        <img\r\n          className=\"tb_post_modal_img_\"\r\n          decoding=\"async\"\r\n          ref={this.mediaRef}\r\n          src={imgSize.small}\r\n          srcSet={`${imgSize.large}, 991w ${imgSize.small}, 480w`}\r\n          sizes={mediaSize && mediaSize.width}\r\n          alt={GET_MEDIA_NAME(imgSize.small)}\r\n          data-link={data.link}\r\n          data-network={data.network.id}\r\n          data-wall-id={wall.Wall.id}\r\n          data-owner-id={wall.Wall.owner}\r\n          data-item-id={data.id}\r\n          data-feed-id={data.feedId ? data.feedId : \"\"}\r\n          data-filter-id={data.filterId}\r\n          data-load=\"0\"\r\n          onLoad={this.handleImageLoad}\r\n          onError={!data.stories ? (e) => {\r\n              e.target.src = `${CloudUrl}/media/error/no-image.svg`\r\n              e.target.srcset = `${CloudUrl}/media/error/no-image.svg`\r\n              POPUP_IMAGE_RENEW_REQUEST(e)\r\n          } : null}\r\n          key={imgSize.small}\r\n          loading=\"lazy\"\r\n          draggable=\"false\"\r\n          width={mediaSize && mediaSize.width}\r\n          height={mediaSize && mediaSize.height}\r\n          style={imgStyle} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { PureComponent, Suspense } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { componentWillAppendToBody } from \"react-append-to-body\";\r\nimport { Tooltip } from 'react-tooltip';\r\nimport \"./scss/Hotspot.scss\";\r\nimport { generateUniqueString } from '../../../../utils'\r\nimport { themePostTracking } from '../../../../actions/themeActions';\r\n\r\nconst MyComponent = ({ children, wallId }) => {\r\n  return wallId ? <div data-widget-id={wallId}>{children}</div> : null\r\n}\r\n\r\nconst AppendedView = componentWillAppendToBody(MyComponent);\r\nconst htmlString = (product) => {\r\n  const discountPrice = product.product_discount > 0 ? product.product_discount : product.product_price;\r\n  const originalPrice = product.product_discount > 0 && product.product_discount != product.product_price ?\r\n    `<div class=\"tb_p_tooltip_price tb_price_disabled\">${product.price_currency_symbol}${product.product_price}</div>` : '';\r\n  const priceHtml = product.product_price > 0 || product.product_discount > 0 ?\r\n    `${originalPrice}<div class=\"tb_p_tooltip_price\">${product.price_currency_symbol}${discountPrice}</div>` : '';\r\n\r\n  return `<a href=\"${product.product_url}\" target=\"_blank\" class=\"tb_tooltip_wrap\">\r\n          <div class=\"tb_p_tooltip_title\">${product.product_title}</div>\r\n          ${priceHtml}\r\n        </a>`;\r\n}\r\n\r\nclass Hotspot extends PureComponent {\r\n  state = { activeMouse: null }\r\n\r\n  setActiveMouse = (index) => {\r\n    return index\r\n  }\r\n  tracking = (product) => {\r\n    const { appData, dataItem } = this.props;\r\n    if (appData && Object.keys(appData).length > 0) {\r\n      const { wall } = appData;\r\n      themePostTracking({\r\n        type: 1, action: 2, wall: wall?.Wall?.id, product_id: product.id, post: dataItem.referenceId, owner: wall?.Wall?.owner, feed: dataItem.feedId, currency: product.price_currency, price: product.product_discount > 0 ? product.product_discount : product.product_price\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { product, appData } = this.props;\r\n    const { activeMouse } = this.state;\r\n    const Hotspot = appData && Object.keys(appData).length > 0 ? appData.wall.ProductSetting.Hotspot : ''\r\n    return (Hotspot.status ? <div className=\"tb_hotspot_wrap\">\r\n      {product.map((item, index) => {\r\n        const uniqueString = generateUniqueString();\r\n        return <div key={index} href={item.product_url} id={`tb_hotspot-${item.id}${uniqueString}`} onClick={event => { this.tracking(item.UgcProduct); event.stopPropagation(); }} onMouseEnter={event => this.setActiveMouse(index)} onMouseOut={event => this.setActiveMouse(null)} className={`tb_hotspot_dot${activeMouse == index ? ' tb_hotspot_active_' : ''}`} style={{ top: item.hotspot_cordinates.top, left: item.hotspot_cordinates.left }} data-tooltip-offset={7}>\r\n          <div className={`tb_hotspot__ ${Hotspot.type == 0 ? 'tb_hotspot_ani__' : ''}`} onClick={event => window.open(item.UgcProduct.product_url, '_blank')}>{index + 1}</div>\r\n          <AppendedView wallId={appData?.wall?.Wall?.id}><Tooltip className=\"tb_pro_tooltip\" anchorSelect={`#tb_hotspot-${item.id}${uniqueString}`} clickable html={htmlString(item.UgcProduct)} /></AppendedView>\r\n        </div>\r\n      })\r\n      }\r\n    </div >\r\n      : null\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    appData: state.appData\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Hotspot);"],"names":["PopUpImage","Component","constructor","props","super","this","state","mediaLoaded","largerHeight","imgSize","small","data","postFileNew","large","filename","orignal","file","componentWillReceiveProps","nextProps","setState","render","wall","opacity","mediaSize","isHotspot","hotspot","ugc_products","length","imgStyle","filter","_jsxs","className","children","postBranding","_jsx","PostBranding","size","Hotspot","product","dataItem","decoding","ref","mediaRef","src","srcSet","concat","sizes","width","alt","GET_MEDIA_NAME","link","network","id","Wall","owner","feedId","filterId","onLoad","handleImageLoad","onError","stories","e","target","CloudUrl","srcset","POPUP_IMAGE_RENEW_REQUEST","loading","draggable","height","style","AppendedView","componentWillAppendToBody","_ref","wallId","htmlString","discountPrice","product_discount","product_price","originalPrice","price_currency_symbol","priceHtml","product_url","product_title","PureComponent","arguments","activeMouse","setActiveMouse","index","tracking","appData","Object","keys","_wall$Wall","_wall$Wall2","themePostTracking","type","action","product_id","post","referenceId","feed","currency","price_currency","price","ProductSetting","status","map","item","_appData$wall","_appData$wall$Wall","uniqueString","generateUniqueString","href","onClick","event","UgcProduct","stopPropagation","onMouseEnter","onMouseOut","top","hotspot_cordinates","left","window","open","Tooltip","anchorSelect","clickable","html","connect"],"sourceRoot":""}