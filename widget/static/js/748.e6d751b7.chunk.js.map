{"version":3,"file":"static/js/748.e6d751b7.chunk.js","mappings":"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","sources":["app/Themes/CollageTheme/Elements/Card.js","app/Themes/CollageTheme/CollageRows.js","app/Themes/CollageTheme/index.js","app/Themes/Elements/Network/Network.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js","app/Themes/Elements/ShopButton/ShopButton.js"],"sourcesContent":["import React, { Suspense, useRef, useEffect } from \"react\";\r\nimport { IS_THEME, PostTrimContent, themeImpressionTracking } from '../../../../utils'\r\nimport { isTagEmbed, isTagShop, isTagbox } from \"../../../../actions/api\";\r\nimport { suiteTrack } from '../../../../actions/api'\r\nimport ShareOnHover from \"../../Elements/ShareOnHover/ShareOnHover\";\r\nimport Network from \"../../Elements/Network/Network\";\r\nimport ShopButton from \"../../Elements/ShopButton/ShopButton\";\r\nconst AuthorDetails = React.lazy(() => import(\"./AuthorDetails\"));\r\nconst Media = React.lazy(() => import('./Media'));\r\nconst PostContent = React.lazy(() => import('../../Elements/PostContent/PostContent'));\r\n\r\nconst trim_content_length = !isTagEmbed ? 200 : null;\r\n\r\n\r\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, postSizeInPx, wall, onClickPopUpSlider }) => {\r\n  const postTrack = useRef(null);\r\n  const mediaType = itemData.type !== 1 ? true : false;\r\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\r\n  const responsiveCardSize2x = postSizeInPx.adjustWidth < 250 ? true : false\r\n  useEffect(() => {\r\n    if (suiteTrack || isTagShop) themeImpressionTracking(postTrack);\r\n  }, []);\r\n\r\n  const isHotspot = itemData.hotspot && itemData.ugc_products.length > 0 ? true : false\r\n  const isShopBtn = isTagShop && ThemeRule.shoppingText != '' && (!itemData.hotspot && itemData.ugc_products.length > 0) ? true : false;\r\n  const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\r\n  useEffect(() => {\r\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\r\n  }, [itemIndex, itemData.isPopUp, itemData]);\r\n  return <div id={`tb-sp-post-${itemData.id}`} className={`tb_ct_post_wrapper${responsiveCardSize2x ? ' tb_ct_post_wrapper2x' : ''}`} style={{ width: `${adjustWidth}%`, padding: personalization.padding / 2, float: 'left' }} tb-network={itemData.network.id} tb-product={isShopBtn ? 1 : isHotspot ? 2 : 0} tabIndex=\"0\" role=\"article\" aria-label={`Post ${parseInt(itemIndex) + 1},${postTextContent}`} ref={postTrack} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId}>\r\n    <div className=\"tb_ct_post_in\" onClick={clickToShowPopUp(itemIndex, itemData)} role=\"button\" aria-roledescription=\"Click to open pop up\" tabIndex={\"0\"}>\r\n      <div className=\"tb_ct_post_media_wrapp\" role=\"button\" tabIndex=\"0\" aria-label=\"Pop Up Button\">\r\n        {itemData.share.status && !isTagShop ? <ShareOnHover share={itemData.share} shareClass={'tb_ct_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} /> : ''}\r\n        {mediaType ? <Suspense fallback={<></>}><Media key={`img${itemIndex}_${itemData.id}`} itemData={{ ...itemData, postFileNew: itemData.filename }} wallID={wallID} ownerId={ownerId} ThemeID={personalization.widgetTheme} wall={wall} /></Suspense> : ''}\r\n        {!isHotspot ? <>\r\n          <div className=\"tb_ct_post_details\">\r\n            {isTagShop ? <div className=\"tb_ct_social_\">\r\n              <Network networkClass={'tb_ct_social__ico'} network={itemData.network} isDefault={ThemeRule.iconType === 1 ? true : false} ThemeRule={ThemeRule} Personalization={personalization} />\r\n              {isShopBtn ? <ShopButton ThemeRule={ThemeRule} btnClass={'tb_ct_btn_wrap'} /> : null}\r\n            </div> : null}\r\n          </div>\r\n          <div className={`tb_ct_post_overlay tb_ct_post_overlay-${themeMode}`}><div></div></div>\r\n        </> : null}\r\n              {/* new code */}\r\n\r\n              {IS_THEME(68) ? <>\r\n              <div className=\"tb_sp_contant_wrapper\">\r\n                {((!ThemeRule.hideContent || itemData.type == 1)) ? <Suspense fallback={<></>}><PostContent contentClass={'tb_sp_content'} item={itemData} content={postTextContent} font={ThemeRule} ThemeRule={ThemeRule} personalization={personalization} contentTitle={itemData.contentTitle} /></Suspense> : ''}\r\n              </div>\r\n           <Suspense fallback={<></>}><AuthorDetails ownerId={ownerId} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={ThemeRule} personalization={personalization} ThemeRule={ThemeRule} /></Suspense>\r\n            </> : null}\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\nexport default Card","import Card from \"./Elements/Card\";\r\nconst generateCSS = (width, sumPost, postPosition) => {\r\n    const smallDivWidth = `${width}%`;\r\n    const floatDirection = sumPost === '1' ? (postPosition === 'right' ? 'left' : 'right') : (postPosition === 'right' ? 'left' : 'right');\r\n    return { width: smallDivWidth, float: floatDirection };\r\n}\r\n\r\nconst CollageRows = ({ wall, largeDiv, smallDiv, itemData, completeDataObject, parentID, itemIndex, clickToShowPopUp, onClickToCTA, postSizeInPx, adjustWidth, onClickPopUpSlider }) => {\r\n    const postPosition = wall.ThemeRule.highlightPosition; const sumPost = itemIndex % 2;\r\n    const largeDivStyle = { width: largeDiv + `%`, float: sumPost == '0' ? (postPosition == 'right' ? 'right' : 'left') : postPosition == 'right' ? 'left' : 'right' };\r\n    const smallDivStyle = { width: smallDiv + `%`, float: sumPost == '1' ? (postPosition == 'right' ? 'left' : 'right') : postPosition == 'right' ? 'left' : 'right' }\r\n\r\n    return (itemData && itemData.length > 0) ? <div className=\"ts_cs_post_row\" style={{ width: `100%` }}>\r\n        <div className=\"ts_cs_post_large\" style={largeDivStyle}><Card ownerId={wall.Wall.owner} itemData={completeDataObject[itemData[0]]} key={`sqr_crd_${0}_${completeDataObject[itemData[0]].id}`} itemIndex={itemIndex} adjustWidth={100} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} onClickPopUpSlider={onClickPopUpSlider} /></div>\r\n        <div className=\"ts_cs_post_small\" style={smallDivStyle}>\r\n            {\r\n                (itemData && itemData.length > 0) ? itemData.map((item, index) => {\r\n                    const cardData = completeDataObject[item];\r\n                    return (index != 0 ? <Card ownerId={wall.Wall.owner} itemData={cardData} key={`sqr_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} onClickPopUpSlider={onClickPopUpSlider} /> : null)\r\n                }) : null\r\n            } </div>\r\n\r\n    </div> : null\r\n}\r\n\r\nexport default CollageRows","import React, { PureComponent } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { managePostHeight } from '../../../actions/themeActions';\r\nimport \"./scss/CollageTheme.scss\";\r\nimport CollageRows from \"./CollageRows\";\r\nexport const getPostWidth = (windowWidth, ColumnCount) => {\r\n  const getWidths = (inWidth, cardWidth) => ({ cardWidth, largeDiv: inWidth * 2, smallDiv: 100 - inWidth * 2 });\r\n\r\n  switch (ColumnCount) {\r\n    case 3: return getWidths(windowWidth > 320 ? 100 / 3 : 100 / 3, 100 / 1);\r\n    case 5: return getWidths(windowWidth > 767 ? 100 / 4 : 100 / 3, windowWidth > 767 ? 100 / 2 : 100 / 1);\r\n    case 7: return getWidths(windowWidth > 767 ? 100 / 5 : 100 / 3, windowWidth > 767 ? 100 / 3 : 100 / 1);\r\n    case 9: return getWidths(windowWidth > 767 ? 100 / 6 : 100 / 3, windowWidth > 767 ? 100 / 4 : 100 / 1);\r\n    default: return getWidths(windowWidth < 767 ? 100 / 3 : 100 / 1, 100 / 1);\r\n  }\r\n}\r\nclass CollageTheme extends PureComponent {\r\n  state = {\r\n    postData: [],\r\n    windowWidth: window.innerWidth\r\n  }\r\n  componentDidMount() {\r\n    const { renderId } = this.props;\r\n\r\n    if (renderId.renderId) {\r\n      this.setState({\r\n        windowWidth: document.getElementById(renderId.renderId).clientWidth\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { postData, completeDataObject, wall, clickToShowPopUp, cardNumber, onClickToCTA, postSizeInPx, onClickPopUpSlider } = this.props;\r\n    const { windowWidth } = this.state\r\n    let totalPostBestFit = postData.length;\r\n    if (wall && wall.Personalization.fitRow == 1) {\r\n      if (postData.length >= parseInt(cardNumber)) {\r\n        let bestFitEachRow = postData.length / parseInt(cardNumber);\r\n        totalPostBestFit = (parseInt(cardNumber) * parseInt(bestFitEachRow));\r\n      }\r\n    }\r\n    var clm = ''\r\n    const ColumnCount = wall.ThemeRule.numberOfCoumn\r\n    const { cardWidth, largeDiv, smallDiv } = getPostWidth(windowWidth, ColumnCount)\r\n    if (windowWidth < 768) clm = 3\r\n    else clm = ColumnCount ? ColumnCount : 1\r\n    var i = 0, n = postData.length, newPostdata = [];\r\n    while (i < n) { newPostdata.push(postData.slice(i, i += clm)); }\r\n    var postClmnNo = windowWidth < 768 ? '3' : ColumnCount\r\n    return (\r\n      <div tabIndex=\"0\" aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\" className=\"tb_ct_post_container\">\r\n        {(newPostdata && newPostdata.length > 0) && newPostdata.map((item, index) => {\r\n          return item.length == postClmnNo ? <CollageRows ownerId={wall.Wall.owner} itemData={item} key={`sqr_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={cardWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} largeDiv={largeDiv} smallDiv={smallDiv} onClickPopUpSlider={onClickPopUpSlider} /> : null\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    postHeight: state.postHeight.data\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    managePostHeight: (data) => dispatch(managePostHeight(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollageTheme)","import React, { PureComponent, Suspense } from \"react\";\r\nimport { isTagEmbed } from \"../../../../actions/api\";\r\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\r\n\r\nexport default class Network extends PureComponent {\r\n  render() {\r\n    const { network, networkClass, isDefault } = this.props;\r\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\r\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\r\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`} aria-label={`post network ${network?.name || \"\"}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { themePostTracking, gtmAnalyticsAction } from '../../../../actions/themeActions'\r\nimport { isTagEmbed } from '../../../../actions/api'\r\n\r\nexport default class ShareOnHover extends PureComponent {\r\n\r\n\r\n  onClickData = (shareURL) => event => {\r\n    const { item, wallID, ownerId } = this.props;\r\n    event.stopPropagation();\r\n    if (!isTagEmbed) themePostTracking({\r\n      type: 2,\r\n      action: 2,\r\n      wall: wallID,\r\n      feed: item.feedId,\r\n      post: item.referenceId ? item.referenceId : item.id,\r\n      owner: ownerId\r\n    })\r\n    gtmAnalyticsAction(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\r\n    window.open(shareURL, \"_blank\")\r\n  }\r\n\r\n  render() {\r\n    const { share, shareClass } = this.props;\r\n    return <div className={`tb_share_wrapper ${shareClass}`}>\r\n      <div className={`tb_share_button_ tb__icon ${isTagEmbed ? 'tb-share-fill' : 'tb-share'}`}><div></div></div>\r\n      <div className=\"tb_share_icon_list_wrap\">\r\n        {share.facebook ?\r\n          <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(share.facebook)} className=\"tb_share_ico__ tb__icon tb-facebook\" title=\"facebook\"><div></div></div>\r\n          </div>\r\n          : ''}\r\n        {share.twitter ?\r\n          <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(share.twitter)} className=\"tb_share_ico__  tb__icon tb-twitter\" title=\"twitter\"><div></div></div>\r\n          </div>\r\n          : ''}\r\n        {share.linkedin ?\r\n          <div className=\"tb_share_icon_list\">\r\n            <div onClick={this.onClickData(share.linkedin)} className=\"tb_share_ico__ tb__icon tb-linkedin\" title=\"linkedin\"><div></div></div>\r\n          </div>\r\n          : ''}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import \"./scss/ShopButton.scss\";\r\nimport { IS_THEME } from \"../../../../utils\";\r\nconst ShopButton = ({ ThemeRule, btnClass }) => {\r\n  const shopBtnStyle = { fontFamily: ThemeRule.css_font }\r\n  return <div className={`tb_shop_btn_wrap ${btnClass}`}>\r\n    <div className={`tb_shop_btn${ThemeRule.postHover || IS_THEME(4) || IS_THEME(55) ? ' tb_shop_btn_light' : ' tb_shop_btn_dark'}`} style={shopBtnStyle}>\r\n      {ThemeRule.shoppingText}\r\n    </div>\r\n  </div>\r\n}\r\n\r\n\r\nexport default ShopButton;"],"names":["AuthorDetails","React","Media","PostContent","trim_content_length","isTagEmbed","_ref","itemData","personalization","adjustWidth","ThemeRule","clickToShowPopUp","itemIndex","wallID","ownerId","postSizeInPx","wall","onClickPopUpSlider","postTrack","useRef","mediaType","type","postTextContent","trimcontent","PostTrimContent","content","responsiveCardSize2x","useEffect","suiteTrack","isTagShop","themeImpressionTracking","isHotspot","hotspot","ugc_products","length","isShopBtn","shoppingText","themeMode","postHover","isPopUp","_jsx","id","concat","className","style","width","padding","float","network","tabIndex","role","parseInt","ref","referenceId","feedId","children","onClick","_jsxs","share","status","ShareOnHover","shareClass","item","Suspense","fallback","_Fragment","postFileNew","filename","ThemeID","widgetTheme","Network","networkClass","isDefault","iconType","Personalization","ShopButton","btnClass","IS_THEME","hideContent","contentClass","font","contentTitle","postTime","createdAt","author","largeDiv","smallDiv","completeDataObject","parentID","onClickToCTA","postPosition","highlightPosition","sumPost","largeDivStyle","smallDivStyle","Card","Wall","owner","map","index","cardData","getPostWidth","windowWidth","ColumnCount","getWidths","inWidth","cardWidth","CollageTheme","PureComponent","constructor","arguments","state","postData","window","innerWidth","componentDidMount","renderId","this","props","setState","document","getElementById","clientWidth","render","cardNumber","totalPostBestFit","fitRow","bestFitEachRow","clm","numberOfCoumn","i","n","newPostdata","push","slice","postClmnNo","CollageRows","connect","postHeight","data","dispatch","managePostHeight","DefaultNetwork","isDefaultIcon","icon","replace","name","onClickData","shareURL","event","stopPropagation","themePostTracking","action","feed","post","gtmAnalyticsAction","open","facebook","title","twitter","linkedin","shopBtnStyle","fontFamily","css_font"],"sourceRoot":""}