{"version":3,"file":"static/js/5764.50163582.chunk.js","mappings":"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","sources":["app/Themes/ClassicPhoto/Elements/Card.js","app/Themes/ClassicPhoto/index.js"],"sourcesContent":["import React, { Suspense, useEffect, useRef, lazy } from 'react'\r\nimport { themeImpressionTracking } from '../../../../utils'\r\nimport { isTagEmbed, isTagShop } from \"../../../../actions/api\";\r\nconst AuthorDetails = lazy(() => import('./AuthorDetails'));\r\nconst Media = lazy(() => import('./Media'));\r\nconst CTAButton = lazy(() => import('../../Elements/CTA/CtaButton'));\r\nconst Rating = lazy(() => import('../../Elements/Rating/Rating'));\r\nconst ShareOnHover = lazy(() => import('../../Elements/ShareOnHover/ShareOnHover'));\r\nconst SocialAction = lazy(() => import('../../Elements/SocialAction/SocialAction'));\r\n\r\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, onClickToCTA, wall, onClickPopUpSlider }) => {\r\n  const postTrack = useRef(null);\r\n  const cardSize = { width: `${adjustWidth}%`, padding: personalization.padding / 2 };\r\n  const mediaType = itemData.type !== 1 ? true : false;\r\n  const rating = (itemData.rating > 0) ? true : false;\r\n  const ctaStatus = (itemData.cta && Object.keys(itemData.cta).length > 0 && itemData.cta.status) ? true : false;\r\n\r\n  const isProduct = itemData.ugc_products && itemData.ugc_products.length > 0 ? true : false\r\n  const isShopIcon = (isProduct && itemData.hotspot === 0) ? true : false\r\n  const isHotspot = itemData.hotspot && isProduct ? true : false\r\n\r\n  useEffect(() => {\r\n    if (isTagShop) themeImpressionTracking(postTrack);\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\r\n  }, [itemIndex, itemData.isPopUp, itemData]);\r\n  return <div id={`tb-cp-post-${itemData.id}`} className={`tb_cp_post_wrapper`} style={cardSize} tb-network={itemData.network.id} tb-product={isShopIcon ? 1 : isHotspot ? 2 : 0} ref={postTrack} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId} tabIndex=\"0\" area-label={itemData.content} role=\"article\">\r\n    <div className=\"tb_cp_post_in\" onClick={clickToShowPopUp(itemIndex, itemData)} role=\"button\" aria-roledescription=\"Click to open pop up\" tabIndex={\"0\"}>\r\n      <div className=\"tb_cp_post_media_wrapper\">\r\n        {itemData.share.status ? \r\n          <Suspense fallback={<></>}> \r\n            <ShareOnHover share={itemData.share} shareClass={'tb_cp_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} />\r\n          </Suspense> \r\n        : ''}\r\n        {mediaType ? \r\n          <Suspense fallback={<></>}>\r\n            <Media key={`img${itemIndex}_${itemData.id}`} itemData={itemData} wallID={wallID} ownerId={ownerId} ThemeID={personalization.widgetTheme} wall={wall} />\r\n          </Suspense>\r\n        : ''}\r\n        {isTagEmbed && rating ? <div className=\"tb_cp_rating__\">\r\n          <Suspense fallback={<></>}>\r\n            <Rating rating={itemData.rating} network={itemData.network} />\r\n          </Suspense> </div> : ''}\r\n        {ctaStatus ? <div className=\"tb_cp_post_cta\">\r\n          <Suspense fallback={<></>}>\r\n            <CTAButton ctaClass={'tb_cp_post_cta_btn'} cta={itemData.cta} item={itemData} onClickToCTA={onClickToCTA} />\r\n          </Suspense> \r\n        </div> : ''}\r\n      </div>\r\n      <div className=\"tb_cp_contant_wrapper\">\r\n        <Suspense fallback={<></>}>\r\n          <AuthorDetails ownerId={ownerId} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={itemData.font} personalization={personalization} ThemeRule={ThemeRule} />\r\n        </Suspense>\r\n      </div>\r\n      {ThemeRule.socialAction ? \r\n        <Suspense fallback={<></>}>\r\n          <SocialAction itemData={itemData} ThemeRule={ThemeRule} ThemeID={personalization.widgetTheme} actionClass={`tb_cp_social_action__ ${isTagEmbed ? 'tb_cp_social_action_bg' : ''}}`} /> \r\n        </Suspense> \r\n      : ''}\r\n    </div>\r\n  </div>\r\n}\r\nexport default Card","import React, { PureComponent } from \"react\";\r\nimport Card from \"./Elements/Card\";\r\nimport { connect } from 'react-redux';\r\nimport Masonry from 'react-masonry-component';\r\nimport { managePostHeight } from '../../../actions/themeActions';\r\nimport { isTagShop } from '../../../actions/api'\r\nimport \"./scss/ClassicPhoto.scss\";\r\n\r\nconst ClassicPhotoExtend = ({ loadData, postData, completeDataObject, BrandingPosition, clickToShowPopUp, wall, adjustWidth, onClickToCTA, onClickPopUpSlider }) => {\r\n  return loadData ?\r\n    ((postData && postData.length > 0)) && postData.map((item, index) => {\r\n      const cardData = completeDataObject[item];\r\n      const IsBrandingCard = (BrandingPosition === index) ? false : false\r\n      IsBrandingCard ? BrandingPosition += parseInt(index) + 10 : parseInt(BrandingPosition)\r\n      return <Card ownerId={wall.Wall.owner} key={`Classic_Card_${index}_${item.id}`} itemData={cardData} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} wall={wall} onClickPopUpSlider={onClickPopUpSlider} />\r\n    }) : null\r\n}\r\n\r\n\r\nclass ClassicPhoto extends PureComponent {\r\n  state = {\r\n    postData: [],\r\n    loadData: 1\r\n  }\r\n  componentDidMount() {\r\n    const { postData } = this.props;\r\n    this.setState({ postData, loadData: 1 })\r\n  }\r\n\r\n  render() {\r\n    const { postData, completeDataObject, adjustWidth, wall, clickToShowPopUp, onClickToCTA, onClickPopUpSlider } = this.props;\r\n    const { loadData } = this.state;\r\n    var BrandingPosition = 4\r\n\r\n    return isTagShop ? <Masonry\r\n      className={`tb_cp_post_container`}\r\n      tabIndex='0'\r\n      aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\"\r\n      elementType={'div'}\r\n      options={{\r\n        transitionDuration: 0,\r\n        percentPosition: true,\r\n        itemSelector: '.tb_cp_post_wrapper',\r\n        horizontalOrder: true,\r\n        resize: true,\r\n      }}\r\n      disableImagesLoaded={false}\r\n      updateOnEachImageLoad={false}\r\n      imagesLoadedOptions={{}}\r\n      enableResizableChildren={true}>\r\n      <ClassicPhotoExtend loadData={loadData} wall={wall} clickToShowPopUp={clickToShowPopUp} postData={postData} completeDataObject={completeDataObject} BrandingPosition={BrandingPosition} adjustWidth={adjustWidth} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} />\r\n    </Masonry> : <div className=\"tb_cp_post_container\"><ClassicPhotoExtend loadData={loadData} wall={wall} clickToShowPopUp={clickToShowPopUp} postData={postData} completeDataObject={completeDataObject} BrandingPosition={BrandingPosition} adjustWidth={adjustWidth} onClickToCTA={onClickToCTA} onClickPopUpSlider={onClickPopUpSlider} /></div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {}\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    managePostHeight: (data) => dispatch(managePostHeight(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClassicPhoto)"],"names":["AuthorDetails","lazy","Media","CTAButton","Rating","ShareOnHover","SocialAction","_ref","itemData","personalization","adjustWidth","ThemeRule","clickToShowPopUp","itemIndex","wallID","ownerId","onClickToCTA","wall","onClickPopUpSlider","postTrack","useRef","cardSize","width","concat","padding","mediaType","type","rating","ctaStatus","cta","Object","keys","length","status","isProduct","ugc_products","isShopIcon","hotspot","isHotspot","useEffect","isTagShop","themeImpressionTracking","isPopUp","_jsx","id","className","style","network","ref","referenceId","feedId","tabIndex","content","role","children","_jsxs","onClick","share","Suspense","fallback","_Fragment","shareClass","item","ThemeID","widgetTheme","isTagEmbed","ctaClass","postTime","createdAt","author","font","socialAction","actionClass","ClassicPhotoExtend","loadData","postData","completeDataObject","BrandingPosition","map","index","cardData","parseInt","Card","Wall","owner","Personalization","ClassicPhoto","PureComponent","constructor","arguments","state","componentDidMount","this","props","setState","render","Masonry","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","connect","dispatch","managePostHeight","data"],"sourceRoot":""}