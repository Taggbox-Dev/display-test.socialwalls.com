{"version":3,"file":"static/js/3842.4d8c581d.chunk.js","mappings":"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","sources":["app/Themes/HighlightTheme/Elements/Media.js","app/Themes/HighlightTheme/Elements/Card.js","app/Themes/HighlightTheme/index.js","app/Themes/Elements/CTA/CtaButton.js"],"sourcesContent":["import Image from \"../../Elements/Media/Image\";\nimport Video from \"../../Elements/Media/Video\";\nimport MediaIcon from \"../../Elements/MediaIcon/MediaIcon\";\nimport { isTagEmbed, isTagShop } from \"../../../../actions/api\";\nconst Media = ({ itemData, wall, wallID, themeID, ownerId, ThemeRule }) => {\n  const size = isTagEmbed ? ThemeRule.aspectImageRatio ? ThemeRule.aspectImageRatio : 100 : 100\n  const isVideo = (itemData.type === 3 || itemData.type === 5) && (wall.ThemeRule.autoPlay == 1 || !isTagShop) ? true : false\n  return <div className=\"tb_ht_media_wrap\">\n    <MediaIcon itemData={itemData} IconClass=\"tb_ht_media_icon\" show={isTagEmbed} isCenter={false} />\n    {isVideo ? <Video VideoClass=\"tb_ht_video\" data={itemData} wallID={wallID} themeID={wall.Personalization.widgetTheme} ownerId={ownerId} size={100} isCover={true} muted={true} />\n      : <Image ImageClass=\"tb_ht_image\" data={itemData} wallID={wallID} themeID={themeID} ownerId={ownerId} size={size} hotspot={false} />}\n  </div>\n}\nexport default Media","import Media from \"./Media\";\nimport Network from \"../../Elements/Network/Network\";\nimport ShopButton from \"../../Elements/ShopButton/ShopButton\";\nimport { isTagEmbed, isTagShop, isTagbox } from \"../../../../actions/api\";\nimport CTAButton from \"../../Elements/CTA/CtaButton\";\nimport { IS_THEME } from \"../../../../utils\";\nconst Card = ({ itemData, personalization, ThemeRule, wallID, ownerId, onClickToCTA, clickToShowPopUp, itemIndex, adjustWidth, wall }) => {\n  const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\n  const overlay = isTagbox ? 'tb_ht_color_overlay' : 'tb_ht_post_overlay-' + themeMode\n  const overlayStyle = { backgroundColor: isTagbox ? ThemeRule.backgroundColor : '' }\n  const cardSize = { padding: personalization.padding / 2 };\n  const mediaType = itemData.type !== 1 ? true : false;\n  const ctaStatus = (itemData.cta && Object.keys(itemData.cta).length > 0 && itemData.cta.status) ? isTagEmbed ? true : false : false;\n  const cardRadius = (!isTagEmbed && !IS_THEME(71))  ? '50%' : null;\n  const isShopBtn = isTagShop && itemData.ugc_products.length > 0 ? true : false;\n\n  const isProduct = isTagShop && itemData.ugc_products && itemData.ugc_products.length > 0 ? true : false\n  const isShopIcon = isTagShop && (isProduct && itemData.hotspot === 0) ? true : false\n  const isHotspot = isTagShop && itemData.hotspot && isProduct ? true : false\n\n\n\n  return <div id={`tb-ht-post-${itemData.id}`} className=\"tb_ht_post_wrapper\" style={cardSize} tb-network={itemData.network.id} tb-product={isShopIcon ? 1 : isHotspot ? 2 : 0}>\n    <div className=\"tb_ht_post_in\" onClick={clickToShowPopUp(itemIndex, itemData)} style={{ borderRadius: cardRadius }}>\n      <div className=\"tb_ht_post_media_wrapp\">\n        {mediaType ? <Media itemData={itemData} wallID={wallID} themeID={personalization.widgetTheme} ownerId={ownerId} ThemeRule={ThemeRule} wall={wall} /> : ''}\n\n        <div className=\"tb_ht_post_details\">\n          <div className=\"tb_ht_social_\">\n            <Network networkClass={'tb_ht_social_ico_'} network={itemData.network} ThemeRule={ThemeRule} isDefault={ThemeRule.iconType === 1 ? true : false} Personalization={personalization} />\n          </div>\n          {isShopBtn ? <ShopButton ThemeRule={ThemeRule} btnClass={'tb_ht_btn_wrap'} /> : null}\n          {ctaStatus ? <div className=\"tb_ht_post_cta\" onClick={(e) => { e.stopPropagation() }}><CTAButton ctaClass={'tb_ht_post_cta_btn'} cta={itemData.cta} item={itemData} onClickToCTA={onClickToCTA} /> </div> : ''}\n        </div>\n        <div className={`tb_ht_post_overlay ${overlay}`} style={overlayStyle}><div></div></div>\n      </div>\n    </div>\n  </div>\n}\nexport default Card ","import React, { Component, memo } from \"react\";\nimport { isTagEmbed } from \"../../../actions/api\";\nimport { connect } from \"react-redux\";\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\nimport { getDataNextSteps } from '../../../actions/themeActions'\nimport { Grid } from '@splidejs/splide-extension-grid';\nimport Card from \"./Elements/Card\";\nimport \"./scss/HighlightTheme.scss\";\nimport '../scss/ThemesSplide.scss'\nimport { isTagShop } from '../../../actions/api'\nimport { IS_THEME } from \"../../../utils\";\n\nclass HighlightTheme extends Component {\n  constructor(props) {\n    super(props)\n    // this.secondaryRef = React.createRef();\n    this.inputRefs = {};\n  }\n  requestData = () => {\n    const { appendData, wall, preRender, hasMoreData, getDataNextSteps } = this.props;\n    if (hasMoreData) {\n      getDataNextSteps(\n        wall.Wall.id,\n        Math.floor(Date.now() / 1000),\n        wall.ThemeRule.numberOfPosts,\n        appendData.networkID,\n        appendData.after,\n        preRender,\n        appendData.heightEvent\n      );\n    }\n  };\n  componentDidMount() {\n    setTimeout(() => {\n      const classNameRole = document.querySelectorAll('.splide__slide');\n      classNameRole.forEach((element, index) => {\n        element.removeAttribute(\"role\");\n      });\n    }, 100);\n  }\n  componentDidUpdate() {\n    const value = Object.values(this.inputRefs)[0];\n    const { postData, completeDataObject, onClickPopUpSlider, wall, parentID } = this.props;\n    const rowCount = wall.ThemeRule.multiRow;\n    if (value && Object.values(value)[5].length > 0) {\n      let data = Object.values(value)[5]\n      data.map((item, itemIndex) => {\n        if (item.classList) {\n          const filterID = String(item.classList.value).split(\" \").filter((fCheck) => String(fCheck).includes(\"tb_\"))\n          var getID = filterID[0]\n          if (String(filterID[0]).includes(\"tb_\")) {\n            getID = String(filterID[0]).replace(\"tb_\", \"\")\n          }\n          const findIndex = postData.findIndex((find) => find == getID)\n          let clickD = document.querySelectorAll(`#${item.id}`)\n          for (let index = 0; index < clickD.length; index++) {\n            let clickDD = clickD[index];\n            let p_id = clickDD.getAttribute('p_id')\n            if (String(parentID) === String(p_id)) {\n              clickDD.addEventListener('click', event => {\n                event.preventDefault();\n                const itemData = completeDataObject[getID]\n                onClickPopUpSlider(findIndex, itemData)\n              });\n            }\n          }\n        }\n      })\n    }\n    else if (rowCount == 2) {\n      let data = Object.values(value)[5]\n      data.map((item, itemIndex) => {\n        if (item && item.childNodes.length > 0) {\n          item.childNodes.forEach((childItem) => {\n            if (childItem && childItem.childNodes.length > 0) {\n              childItem.childNodes.forEach((subChildItem) => {\n                if (subChildItem.classList) {\n                  const filterID = String(subChildItem.classList.value).split(\" \").filter((fCheck) => String(fCheck).includes(\"tb_\"))\n                  var getID = filterID[0]\n                  if (String(filterID[0]).includes(\"tb_\")) {\n                    getID = String(filterID[0]).replace(\"tb_\", \"\")\n                  }\n                  const findIndex = postData.findIndex((find) => find == getID)\n                  // console.log(\"subChildItem.id\", subChildItem);\n                  let clickD = document.querySelectorAll(`.tb_hs_post_container #${subChildItem.id}`)\n                  // console.log('clickD:', clickD);\n                  for (let index = 0; index < clickD.length; index++) {\n                    let clickDD = clickD[index];\n                    let p_id = clickDD.getAttribute('p_id')\n                    // console.log('p_id:,parentID ', p_id, parentID);\n                    if (String(parentID) === String(p_id)) {\n                      clickDD.addEventListener('click', event => {\n                        event.preventDefault();\n                        // console.log(\"from__clickDD==> parentID, clickD\", parentID, clickDD)\n                        const itemData = completeDataObject[getID]\n                        // console.log('findIndex, itemData', findIndex, itemData);\n                        onClickPopUpSlider(findIndex, itemData)\n                      });\n                    }\n                  }\n                }\n              })\n            }\n          });\n\n\n        }\n\n      })\n    }\n  }\n  onUpdateData = event => {\n\n  }\n\n  autoScrollSlider = (splide, prev, next, destIndex) => {\n    const currentIndex = isTagEmbed ? (splide[\"_o\"].perPage + splide.index) : splide.index\n    const slideLength = splide.length\n    const permove = isTagEmbed ? 1 : splide[\"_o\"].perPage\n    if (slideLength - currentIndex === permove) this.requestData()\n  }\n  render() {\n    const { postData, completeDataObject, wall, clickToShowPopUp, onClickToCTA, parentID, adjustWidth, cardNumber } = this.props;\n    const inputName = parentID;\n    const numberOfCoumn = wall.ThemeRule.numberOfCoumn;\n    const mobileColumn = wall.ThemeRule.mobileColumn;\n    const slidePost = wall.ThemeRule.slidePost;\n    const slideDuration = wall.ThemeRule.slideDuration;\n    const autoScrollStatus = wall.Personalization.autoScrollStatus;\n    const rowCount = (isTagEmbed || IS_THEME(71))  ? wall.ThemeRule.multiRow : 1;\n    const cloneStatus = isTagEmbed && wall.Personalization?.clonePost !== undefined ? wall.Personalization.clonePost === 0 ? { clones: 0 } : {} : {};\n    const isType = autoScrollStatus != 1 ? Object.keys(cloneStatus).length > 0 ? false : 'loop' : 'loop'\n    const settings = {\n      ...cloneStatus,\n      grid: {\n        rows: rowCount,\n      },\n      type: autoScrollStatus === 1 ? false : isType,\n      rewind: false,\n      rewindSpeed: 1000,\n      interval: slidePost === 1 && parseInt(slideDuration) > 0 ? (parseInt(slideDuration) * 1000) : 5000,\n      perPage: isTagShop ? cardNumber : numberOfCoumn > 0 ? numberOfCoumn : 5,\n      perMove: 1,\n      gap: 0,\n      autoplay: slidePost === 1 ? true : false,\n      padding: 0,\n      pagination: false,\n      arrows: true,\n      breakpoints: {\n        560: {\n          perPage: isTagShop ? cardNumber : mobileColumn > 0 ? mobileColumn : 1,\n        },\n        767: {\n          perPage: isTagShop ? cardNumber : mobileColumn > 0 ? mobileColumn : 2,\n        },\n        991: {\n          perPage: isTagShop ? cardNumber : mobileColumn > 0 ? mobileColumn : 3,\n        },\n        1200: {\n          perPage: isTagShop ? cardNumber : numberOfCoumn > 0 ? numberOfCoumn : 4,\n        },\n        1400: {\n          perPage: isTagShop ? cardNumber : numberOfCoumn > 0 ? numberOfCoumn : 5,\n        },\n        1600: {\n          perPage: isTagShop ? cardNumber : numberOfCoumn > 0 ? numberOfCoumn : 6,\n        }\n      }\n    };\n    return (parentID != \"\" ?\n      <div className=\"tb_ht_post_container\">\n        <Splide hasTrack={false} className=\"tb_ht_post_slider\" options={settings} extensions={{ Grid }} ref={(parentID) => this.inputRefs[inputName] = parentID} onMove={this.autoScrollSlider}>\n          <SplideTrack>\n            {\n\n              (wall.ThemeRule.multiRow > 1 && postData.length !== 1 && postData.length % 2 !== 0 ? postData.pop() : postData) && ((postData && postData.length > 0)) && postData.map((item, index) => {\n                const cardData = completeDataObject[item];\n\n                return <SplideSlide key={index} style={{ margin: 0, padding: 0 }} className={`tb_${cardData.id}`} p_id={parentID} >\n                  <Card itemData={cardData} itemIndex={index} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} clickToShowPopUp={clickToShowPopUp} wallID={wall.Wall.id} onClickToCTA={onClickToCTA} adjustWidth={adjustWidth} wall={wall} />\n                </SplideSlide>\n              })}\n          </SplideTrack>\n\n          <div className=\"splide__arrows splide__arrows--ltr tb_ht_arrow_wrapper_\">\n            <div className=\"tb_ht_arrow splide__arrow splide__arrow--prev tb_ht_arrow tb_ht_arrow_left__ tb__icon tb-arrow-left-alt\"><div></div></div>\n            <div className=\"tb_ht_arrow splide__arrow splide__arrow--next  tb_ht_arrow_right__ tb__icon tb-arrow-right-alt\"><div></div></div>\n\n          </div>\n        </Splide>\n      </div> : null\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDataNextSteps: (wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow) => dispatch(getDataNextSteps(wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow)),\n  }\n}\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(HighlightTheme));\n","import React, { PureComponent } from \"react\";\nclass CTAButton extends PureComponent {\n  render() {\n    const { cta, ctaClass, postCta, onClickToCTA, item } = this.props;\n    const postCtaStatus = postCta && postCta.status === 1 ? true : false\n    const ctaStyle = {\n      // color: postCtaStatus ? postCta.color : cta.color,\n      // backgroundColor: postCtaStatus ? postCta.background : cta.background\n    }\n\n    return <div className={ctaClass} style={ctaStyle}\n    onClick={\n      (e) => {\n        e.stopPropagation();\n        onClickToCTA(item)\n        window.open(\n          `${postCtaStatus ? postCta.url : cta.url}`,\n          '_blank')\n      }}\n    > {postCtaStatus ? postCta.text : cta.text}</div>\n  }\n}\n\n\nexport default (CTAButton);"],"names":["_ref","itemData","wall","wallID","themeID","ownerId","ThemeRule","size","isTagEmbed","aspectImageRatio","isVideo","type","autoPlay","isTagShop","_jsxs","className","children","_jsx","MediaIcon","IconClass","show","isCenter","Video","VideoClass","data","Personalization","widgetTheme","isCover","muted","Image","ImageClass","hotspot","personalization","onClickToCTA","clickToShowPopUp","itemIndex","adjustWidth","themeMode","postHover","overlay","isTagbox","overlayStyle","backgroundColor","cardSize","padding","mediaType","ctaStatus","cta","Object","keys","length","status","cardRadius","IS_THEME","isShopBtn","ugc_products","isProduct","isShopIcon","isHotspot","id","concat","style","network","onClick","borderRadius","Media","Network","networkClass","isDefault","iconType","ShopButton","btnClass","e","stopPropagation","CTAButton","ctaClass","item","HighlightTheme","Component","constructor","props","super","requestData","appendData","preRender","hasMoreData","getDataNextSteps","this","Wall","Math","floor","Date","now","numberOfPosts","networkID","after","heightEvent","onUpdateData","event","autoScrollSlider","splide","prev","next","destIndex","currentIndex","perPage","index","inputRefs","componentDidMount","setTimeout","document","querySelectorAll","forEach","element","removeAttribute","componentDidUpdate","value","values","postData","completeDataObject","onClickPopUpSlider","parentID","rowCount","multiRow","map","classList","filterID","String","split","filter","fCheck","includes","getID","replace","findIndex","find","clickD","clickDD","p_id","getAttribute","addEventListener","preventDefault","childNodes","childItem","subChildItem","render","_wall$Personalization","cardNumber","inputName","numberOfCoumn","mobileColumn","slidePost","slideDuration","autoScrollStatus","cloneStatus","undefined","clonePost","clones","isType","settings","_objectSpread","grid","rows","rewind","rewindSpeed","interval","parseInt","perMove","gap","autoplay","pagination","arrows","breakpoints","Splide","hasTrack","options","extensions","Grid","ref","onMove","SplideTrack","pop","cardData","SplideSlide","margin","Card","memo","connect","state","dispatch","timeStamp","postCount","networkId","updateInStateNow","PureComponent","postCta","postCtaStatus","window","open","url","text"],"sourceRoot":""}