{"version":3,"file":"static/js/6625.12269da3.chunk.js","mappings":"2LAIA,MAAMA,UAAsBC,EAAAA,UACxBC,WAAAA,CAAYC,GACRC,MAAMD,GAAO,KAUjBE,SAAW,KACP,MAAM,OAAEC,GAAWC,KAAKJ,MACxBK,WAAW,KACPC,OAAOC,cAAc,IAAIC,MAAM,WAC/BH,WAAW,KACP,MAAMI,EAAOC,SAASC,eAAe,uBAADC,OAAwBT,EAAS,IACjEM,GAAMA,EAAKI,UAAUC,IAAI,oBAC9B,MACJ,MAjBHV,KAAKW,MAAQC,EAAAA,WACjB,CAEAC,yBAAAA,CAA0BC,GACtB,MAAM,SAAEC,EAAQ,OAAEhB,GAAWe,EACzBC,GAAYhB,GAAUC,KAAKW,MAAMK,SAAWhB,KAAKJ,MAAMmB,WAAaA,GACpEf,KAAKW,MAAMK,QAAQC,OAAOC,WAElC,CAaAC,MAAAA,GACI,MAAM,OAAEpB,EAAM,QAAEqB,EAAO,SAAEL,EAAQ,mBAAEM,EAAkB,KAAEC,EAAI,aAAEC,EAAY,aAAEC,EAAY,UAAEC,EAAS,iBAAEC,GAAqB1B,KAAKJ,MAE9H,OACI+B,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACHC,IAAK7B,KAAKW,MACVmB,YAAY,EACZC,cAAe,OACfC,UAAU,WACVC,aAAc,EACdC,YAAY,EACZC,MAAM,EACNC,MAAO,IACPC,gBAAgB,EAChBC,SAAU,CAAEC,SAAS,EAAOC,sBAAsB,GAClDC,GAAE,uBAAAjC,OAAyBT,EAAS,GACpC2C,UAAU,wCAEVC,MAAO,CAAEC,MAAM,GAADpC,OAAK,IAAMiB,EAAS,MAClCoB,YAAa7C,KAAKF,SAASgD,SAEnB,OAAP1B,QAAO,IAAPA,GAAAA,EAAS2B,OAAS3B,EAAQ4B,IAAI,CAACC,EAAMC,KAClC,MAAMC,EAAW9B,EAAmB4B,GACpC,OAAOtB,EAAAA,EAAAA,KAACyB,EAAAA,GAAW,CAAAN,UACfnB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAI,CAACC,WAAW,EAAMC,QAASjC,EAAKkC,KAAKC,MAAOC,SAAUP,EAAUQ,UAAWT,EAAOU,gBAAiBtC,EAAKuC,gBAAiBC,UAAWxC,EAAKwC,UAAWC,OAAQzC,EAAKkC,KAAKf,GAAIf,iBAAkBA,EAAkBJ,KAAMA,KAAQ,QAAAd,OADpM0C,EAAK,KAAA1C,OAAIT,MAGzC,MAAI,uBAAAS,OATmBT,EAAS,GAYjD,EAGJ,S","sources":["app/Themes/Grid/Reels/Elements/SwiperFalling.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport Card from \"../Elements/Card\";\n\nclass SwiperFalling extends Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { activeID, pIndex } = nextProps;\n        if (activeID == pIndex && this.myRef.current && this.props.activeID !== activeID) {\n            this.myRef.current.swiper.slideNext();\n        }\n    }\n    onUpdate = () => {\n        const { pIndex } = this.props;\n        setTimeout(() => {\n            window.dispatchEvent(new Event(\"resize\"));\n            setTimeout(() => {\n                const wrap = document.getElementById(`tb_wall_list_wrap___${pIndex + 1}`);\n                if (wrap) wrap.classList.add(\"tb_fc_animation\");\n            }, 250);\n        }, 100);\n    };\n\n\n    render() {\n        const { pIndex, itemIds, activeID, completeDataObject, wall, onClickToCTA, postSizeInPx, cardCount, clickToShowPopUp } = this.props\n\n        return (\n            <Swiper\n                ref={this.myRef}\n                autoHeight={true}\n                slidesPerView={\"auto\"}\n                direction=\"vertical\"\n                spaceBetween={0}\n                mousewheel={true}\n                loop={true}\n                speed={2000}\n                allowTouchMove={false}\n                autoplay={{ enabled: false, disableOnInteraction: true }}\n                id={`tb_wall_list_wrap___${pIndex + 1}`}\n                className=\"swiper-container tb_wall_list_wrap___\"\n                key={`tb_wall_list_wrap___${pIndex + 1}`}\n                style={{ width: `${100 / cardCount}%` }}\n                onAfterInit={this.onUpdate}\n            >\n                {itemIds?.length ? itemIds.map((item, index) => {\n                    const cardData = completeDataObject[item];\n                    return <SwiperSlide key={`item_${index}_${pIndex}`}>\n                        <Card isVisible={true} ownerId={wall.Wall.owner} itemData={cardData} itemIndex={index} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} wall={wall} />\n                    </SwiperSlide>\n                }) : null}\n            </Swiper>\n        );\n    }\n}\n\nexport default SwiperFalling;"],"names":["SwiperFalling","Component","constructor","props","super","onUpdate","pIndex","this","setTimeout","window","dispatchEvent","Event","wrap","document","getElementById","concat","classList","add","myRef","React","componentWillReceiveProps","nextProps","activeID","current","swiper","slideNext","render","itemIds","completeDataObject","wall","onClickToCTA","postSizeInPx","cardCount","clickToShowPopUp","_jsx","Swiper","ref","autoHeight","slidesPerView","direction","spaceBetween","mousewheel","loop","speed","allowTouchMove","autoplay","enabled","disableOnInteraction","id","className","style","width","onAfterInit","children","length","map","item","index","cardData","SwiperSlide","Card","isVisible","ownerId","Wall","owner","itemData","itemIndex","personalization","Personalization","ThemeRule","wallID"],"sourceRoot":""}