{"version":3,"file":"static/js/2138.0e0abd05.chunk.js","mappings":"2LAIA,MAAMA,GAAOC,EAAAA,EAAAA,OAAK,IAAM,kCACxB,MAAMC,UAAoBC,EAAAA,cAAcC,WAAAA,GAAA,SAAAC,WAAA,KACtCC,MAAQ,CACNC,SAAU,GACX,CACDC,MAAAA,GACE,MAAM,SAAED,EAAQ,mBAAEE,EAAkB,YAAEC,EAAW,KAAEC,EAAI,iBAAEC,EAAgB,WAAEC,EAAU,aAAEC,EAAY,aAAEC,EAAY,mBAAEC,GAAuBC,KAAKC,MAC/I,IAAIC,EAAmBZ,EAASa,OAChC,GAAIT,GAAuC,GAA/BA,EAAKU,gBAAgBC,QAC3Bf,EAASa,QAAUG,SAASV,GAAa,CAC3C,IAAIW,EAAiBjB,EAASa,OAASG,SAASV,GAChDM,EAAoBI,SAASV,GAAcU,SAASC,EACtD,CAEF,OACEC,EAAAA,EAAAA,KAAA,OAAKC,SAAS,IAAI,0BAAAC,OAA0BpB,GAAYA,EAASa,OAAS,EAAKb,EAASa,OAAS,EAAC,sBAAsBQ,KAAK,OAAOC,UAAU,uBAAsBC,SAChKvB,GAAYA,EAASa,OAAS,GAAMb,EAASwB,KAAI,CAACC,EAAMC,KACxD,MAAMC,EAAWzB,EAAmBuB,GACpC,OAAOT,SAASJ,IAAqBI,SAAUU,EAAQ,IACvDR,EAAAA,EAAAA,KAACU,EAAAA,SAAQ,CAACC,UAAUX,EAAAA,EAAAA,KAAAY,EAAAA,SAAA,IAAMP,UAACL,EAAAA,EAAAA,KAACzB,EAAI,CAACsC,QAAS3B,EAAK4B,KAAKC,MAAOC,SAAUP,EAA8CQ,UAAWT,EAAOvB,YAAaA,EAAaiC,gBAAiBhC,EAAKU,gBAAiBuB,UAAWjC,EAAKiC,UAAWC,OAAQlC,EAAK4B,KAAKO,GAAIlC,iBAAkBA,EAAkBE,aAAcA,EAAcC,aAAcA,EAAcJ,KAAMA,EAAMK,mBAAoBA,GAAmB,WAAAW,OAAvSM,EAAK,KAAAN,OAAIK,EAAKc,OACzG,IAAI,KAIhB,EAIF,MAYA,GAAeC,EAAAA,EAAAA,KAZSzC,IACf,CACL0C,WAAY1C,EAAM0C,WAAWC,SAINC,IAClB,CACLC,iBAAmBF,GAASC,GAASC,EAAAA,EAAAA,IAAiBF,OAI1D,CAA4D/C,E","sources":["app/Themes/SquarePhoto/index.js"],"sourcesContent":["import React, { PureComponent, Suspense, lazy } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { managePostHeight } from '../../../actions/themeActions';\r\nimport \"./scss/SquarePhoto.scss\";\r\nconst Card = lazy(() => import('./Elements/Card'));\r\nclass SquarePhoto extends PureComponent {\r\n  state = {\r\n    postData: []\r\n  }\r\n  render() {\r\n    const { postData, completeDataObject, adjustWidth, wall, clickToShowPopUp, cardNumber, onClickToCTA, postSizeInPx, onClickPopUpSlider } = this.props;\r\n    let totalPostBestFit = postData.length;\r\n    if (wall && wall.Personalization.fitRow == 1) {\r\n      if (postData.length >= parseInt(cardNumber)) {\r\n        let bestFitEachRow = postData.length / parseInt(cardNumber);\r\n        totalPostBestFit = (parseInt(cardNumber) * parseInt(bestFitEachRow));\r\n      }\r\n    }\r\n    return (\r\n      <div tabIndex=\"0\" aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\" className=\"tb_sp_post_container\">\r\n        {(postData && postData.length > 0) && postData.map((item, index) => {\r\n          const cardData = completeDataObject[item];\r\n          return parseInt(totalPostBestFit) >= parseInt((index + 1)) ? \r\n          <Suspense fallback={<></>}><Card ownerId={wall.Wall.owner} itemData={cardData} key={`sqr_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} onClickPopUpSlider={onClickPopUpSlider} /></Suspense>\r\n            : null\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    postHeight: state.postHeight.data\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    managePostHeight: (data) => dispatch(managePostHeight(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SquarePhoto)"],"names":["Card","lazy","SquarePhoto","PureComponent","constructor","arguments","state","postData","render","completeDataObject","adjustWidth","wall","clickToShowPopUp","cardNumber","onClickToCTA","postSizeInPx","onClickPopUpSlider","this","props","totalPostBestFit","length","Personalization","fitRow","parseInt","bestFitEachRow","_jsx","tabIndex","concat","role","className","children","map","item","index","cardData","Suspense","fallback","_Fragment","ownerId","Wall","owner","itemData","itemIndex","personalization","ThemeRule","wallID","id","connect","postHeight","data","dispatch","managePostHeight"],"sourceRoot":""}