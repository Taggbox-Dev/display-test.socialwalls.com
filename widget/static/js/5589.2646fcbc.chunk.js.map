{"version":3,"file":"static/js/5589.2646fcbc.chunk.js","mappings":"4RAIA,MAAMA,EAAgBC,EAAAA,KAAW,IAAM,iCACjCC,EAAQD,EAAAA,KAAW,IAAM,oEACzBE,EAAcF,EAAAA,KAAW,IAAM,oEAkCrC,EAhCaG,IAAiK,IAAhK,SAAEC,EAAQ,gBAAEC,EAAe,YAAEC,EAAW,UAAEC,EAAS,iBAAEC,EAAgB,UAAEC,EAAS,OAAEC,EAAM,QAAEC,EAAO,aAAEC,EAAY,KAAEC,EAAI,mBAAEC,EAAkB,cAAEC,GAAeZ,EACtK,MAAMa,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,EAA8B,IAAlBd,EAASe,KAErBC,EAAkBf,EAAgBgB,aAAcC,EAAAA,EAAAA,IAAgBlB,EAASmB,QADnD,KACmFnB,EAASmB,QAClHC,EAAuBZ,EAAaN,YAAc,IAClDmB,KAAalB,EAAUmB,aAAcnB,EAAUoB,UAC/CC,KAAYxB,EAASyB,SAAWzB,EAAS0B,aAAaC,OAAS,GAC/DC,KAAYC,EAAAA,KAAe7B,EAASyB,SAAWzB,EAAS0B,aAAaC,OAAS,GAC9EG,EAAoC,GAAvB3B,EAAU4B,WAAkBF,EAAAA,GAAa,QAAU,OAChEG,GAAWC,EAAAA,EAAAA,MAAiB,CAAED,SAAU,GAAM,CAAC,EAIrD,OAHAE,EAAAA,EAAAA,WAAU,KACJlC,EAASmC,SAASzB,EAAmBL,EAAWL,IACnD,CAACK,EAAWL,EAASmC,QAASnC,KAC1BoC,EAAAA,EAAAA,KAAA,OAAKC,GAAE,cAAAC,OAAgBtC,EAASqC,IAAME,UAAS,qBAAAD,OAAuBlB,EAAuB,wBAA0B,IAAMoB,MAAO,CAAEC,MAAM,GAADH,OAAKpC,EAAW,KAAKwC,QAASzC,EAAgByC,QAAU,EAAGC,MAAO,QAAU,aAAY3C,EAAS4C,QAAQP,GAAI,aAAYT,EAAY,EAAIJ,EAAY,EAAI,EAAGqB,SAAS,IAAIC,KAAK,UAAU,qBAAAR,OAAoBS,SAAS1C,GAAa,EAAC,KAAAiC,OAAItB,GAAmBgC,IAAKpC,EAAW,UAASZ,EAASiD,YAAcjD,EAASiD,YAAcjD,EAASqC,GAAI,UAASrC,EAASkD,OAAOC,UACvfC,EAAAA,EAAAA,MAAA,OAAKb,UAAS,iBAAAD,OAAmB3B,EAAa,eAAmB,KAAK0C,QAASjD,EAAiBC,EAAWL,GAAUmD,SAAA,EACnHC,EAAAA,EAAAA,MAAA,OAAKb,UAAU,yBAAwBY,SAAA,CACpCnD,EAASsD,MAAMC,SAAW1B,EAAAA,IAAYO,EAAAA,EAAAA,KAACoB,EAAAA,EAAY,CAACF,MAAOtD,EAASsD,MAAOG,WAAY,wBAAyBC,KAAM1D,EAAUM,OAAQA,EAAQC,QAASA,IAAc,GACvKO,GAAYsB,EAAAA,EAAAA,KAACuB,EAAAA,SAAQ,CAACC,UAAUxB,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,IAAMV,UAACf,EAAAA,EAAAA,KAACvC,EAAK,CAAwCG,UAAQ8D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO9D,GAAQ,IAAE+D,YAAa/D,EAASgE,WAAY1D,OAAQA,EAAQC,QAASA,EAAS0D,QAAShE,EAAgBiE,YAAazD,KAAMA,GAAK,MAAA6B,OAA1KjC,EAAS,KAAAiC,OAAItC,EAASqC,OAAqK,OAEvPe,EAAAA,EAAAA,MAAA,OAAKb,UAAU,qBAAoBY,SAAA,EACjCf,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAuBY,SAChChD,EAAUgE,aAAgC,GAAjBnE,EAASe,KAA2Q,IAA7PqB,EAAAA,EAAAA,KAACuB,EAAAA,SAAQ,CAACC,UAAUxB,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,IAAMV,UAACf,EAAAA,EAAAA,KAACtC,GAAWgE,EAAAA,EAAAA,GAAA,CAACM,aAAc,gBAAiBV,KAAM1D,EAAUmB,QAASH,EAAiBqD,KAAMlE,EAAWA,UAAWA,EAAWF,gBAAiBA,EAAiBqE,aAActE,EAASsE,cAAkBtC,SAEzRI,EAAAA,EAAAA,KAACuB,EAAAA,SAAQ,CAACC,UAAUxB,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,IAAMV,UAACf,EAAAA,EAAAA,KAACzC,EAAa,CAAwCY,QAASA,EAASgB,SAAUvB,EAASuE,UAAWC,OAAQxE,EAASwE,OAAQ5B,QAAS5C,EAAS4C,QAASyB,KAAMlE,EAAWF,gBAAiBA,EAAiBE,UAAWA,GAAU,MAAAmC,OAAxMjC,EAAS,KAAAiC,OAAItC,EAASqC,WAE3ElC,EAAUgE,aAAe9C,GACzBe,EAAAA,EAAAA,KAAA,OAAKG,UAAS,yCAAAD,OAA2CR,GAAYqB,UAACf,EAAAA,EAAAA,KAAA,YACpE,WCjCV,MAAMqC,UAAyBC,EAAAA,UAC3BC,WAAAA,CAAYC,GACRC,MAAMD,GAAO,KAKjBE,WAAa,KAAI,KAQjBC,YAAc,KACV,MAAM,SAAE/E,EAAQ,kBAAEgF,GAAsBC,KAAKL,MAC7C,IAAIM,EAAYD,KAAKE,MAAMC,mBAAqB,EAC5CF,GAAalF,EAAS2B,SACtBuD,EAAY,EACZF,KAEJC,KAAKI,SAAS,CAAED,mBAAoBF,KAnBpCD,KAAKE,MAAQ,CACTC,oBAAqB,EAE7B,CAEAE,iBAAAA,GACI,MAAM,aAAEC,EAAY,aAAEC,EAAY,UAAEnF,GAAc4E,KAAKL,MACnDW,GAAgBlF,GAAcoF,EAAAA,KAC9BR,KAAKH,WAAaY,YAAYT,KAAKF,YAA4B,IAAfS,GAExD,CAWAG,oBAAAA,GACIC,cAAcX,KAAKH,WACvB,CAEAe,yBAAAA,CAA0BC,GACtB,MAAM,UAAEzF,GAAc4E,KAAKL,MACvBkB,EAAUP,cAAgBlF,IAC1BuF,cAAcX,KAAKH,YACnBG,KAAKI,SAAS,CAAED,oBAAqB,KAErCU,EAAUP,cAAgBlF,GAAcoF,EAAAA,KACxCR,KAAKH,WAAaY,YAAYT,KAAKF,YAAsC,IAAzBe,EAAUN,cAElE,CAEAO,MAAAA,GACI,MAAM,KAAEtF,EAAI,SAAEuF,EAAQ,SAAEC,EAAQ,SAAEjG,EAAQ,mBAAEkG,EAAkB,UAAE7F,EAAS,iBAAED,EAAgB,aAAE+F,EAAY,aAAE3F,EAAY,YAAEN,EAAW,mBAAEQ,GAAuBuE,KAAKL,OAC5J,mBAAEQ,GAAuBH,KAAKE,MAC9BiB,EAAe3F,EAAKN,UAAUkG,mBAAqB,OAAcC,EAAUb,EAAAA,GAAgBpF,EAAY,EAAI,EAC3GkG,EAAgB,CAAE9D,MAAOuD,EAAQ,IAAQrD,MAAkB,KAAX2D,EAAkC,SAAhBF,EAA0B,QAAU,OAA0B,SAAhBA,EAA0B,OAAS,SACnJI,EAAgB,CAAE/D,MAAOwD,EAAQ,IAAQtD,MAAyC,SAAhByD,EAA0B,OAAS,SAC3G,OAAQpG,GAAYA,EAAS2B,OAAS,GAAKyB,EAAAA,EAAAA,MAAA,OAAKb,UAAU,iBAAgBY,SAAA,EACtEf,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAmBC,MAAO+D,EAAcpD,UAACf,EAAAA,EAAAA,KAACqE,EAAI,CAAClG,QAASE,EAAKiG,KAAKC,MAAO3G,SAAUkG,EAAmBlG,EAAS,IAAgEK,UAAWA,EAAWH,YAAa,IAAKD,gBAAiBQ,EAAKmG,gBAAiBzG,UAAWM,EAAKN,UAAWG,OAAQG,EAAKiG,KAAKrE,GAAIjC,iBAAkBA,EAAkB+F,aAAcA,EAAc3F,aAAcA,EAAcC,KAAMA,EAAMyF,mBAAoBA,EAAoBxF,mBAAoBA,EAAoBC,cAAqC,GAAtByE,GAAwB,WAAA9C,OAA1Y,EAAC,IAAI4D,EAAmBlG,EAAS,IAAIqC,QACxLe,EAAAA,EAAAA,MAAA,OAAKb,UAAU,mBAAmBC,MAAOgE,EAAcrD,SAAA,CAE9CnD,GAAYA,EAAS2B,OAAS,EAAK3B,EAAS6G,IAAI,CAACnD,EAAMoD,KACpD,MAAMC,EAAWb,EAAmBxC,GACpC,OAAiB,GAAToD,GAAa1E,EAAAA,EAAAA,KAACqE,EAAI,CAAClG,QAASE,EAAKiG,KAAKC,MAAO3G,SAAU+G,EAA8C1G,UAAWyG,EAAO5G,YAAaA,EAAaD,gBAAiBQ,EAAKmG,gBAAiBzG,UAAWM,EAAKN,UAAWG,OAAQG,EAAKiG,KAAKrE,GAAIjC,iBAAkBA,EAAkB+F,aAAcA,EAAc3F,aAAcA,EAAcC,KAAMA,EAAMyF,mBAAoBA,EAAoBxF,mBAAoBA,EAAoBC,cAAeyE,GAAsB0B,GAAM,WAAAxE,OAA3XwE,EAAK,KAAAxE,OAAIoB,EAAKrB,KAAmX,OACzd,KACR,UAEA,IACb,EAEJ,UCpDa2E,EAAeA,CAACC,EAAaC,KACxC,MAAMC,EAAYA,CAACC,EAASC,KAAS,CAAQA,YAAWrB,SAAoB,EAAVoB,EAAanB,SAAU,IAAgB,EAAVmB,IAC/F,OAAQF,GACN,KAAK,EAAG,OAAOC,EAA8B,IAAM,EAAa,KAChE,KAAK,EAGL,KAAK,GACL,KAAK,GAAI,OAAOA,EAAUF,EAAc,IAAM,GAAU,IAAM,EAAGA,EAAc,IAAM,GAAU,KAH/F,KAAK,EAAG,OAAOE,EAAUF,EAAc,IAAM,GAAU,IAAM,EAAGA,EAAc,IAAM,IAAM,EAAI,KAC9F,KAAK,EAGL,KAAK,GAAI,OAAOE,EAAUF,EAAc,IAAM,IAAM,EAAI,IAAM,EAAGA,EAAc,IAAM,GAAU,KAC/F,QAAS,OAAOE,EAAUF,EAAc,IAAM,IAAM,EAAI,IAAS,OAGrE,MAAMK,UAAqB5C,EAAAA,UACzBC,WAAAA,CAAYC,GACVC,MAAMD,GAAM,KAGdO,MAAQ,CACNoC,SAAU,GACVN,YAAaO,OAAOC,WACpBlC,cAAe,GAChB,KAWDP,kBAAoB,KAClB,MAAM,aAAEO,GAAiBN,KAAKE,MACxBuC,EAAiBnC,EAAe,EAClCN,KAAK0C,OAAS1C,KAAK0C,MAAMC,UACvBF,EAAiBzC,KAAK0C,MAAMC,QAAQC,OAAOlG,OAAQsD,KAAK0C,MAAMC,QAAQE,OAAOC,GAAGL,GAC/EzC,KAAK0C,MAAMC,QAAQE,OAAOC,GAAG,KAtBpC9C,KAAK0C,MAAQ/H,EAAAA,WACf,CAMA0F,iBAAAA,GACE,MAAM,SAAE0C,EAAQ,aAAEC,GAAiBhD,KAAKL,MACpCoD,EAASA,UACX/C,KAAKI,SAAS,CACZ4B,YAAaiB,SAASC,eAAeH,EAASA,UAAUI,cAG5DC,WAAW,IAAMJ,IAAgB,IACnC,CAUAK,kBAAAA,CAAmBC,EAAWC,GAC5B,OAAID,EAAUhB,WAAatC,KAAKL,MAAM2C,UAC7BiB,EAAUjD,eAAiBN,KAAKE,MAAMI,YAEjD,CAEAQ,MAAAA,GAAU,IAAD0C,EACP,MAAM,SAAElB,EAAQ,mBAAErB,EAAkB,KAAEzF,EAAI,iBAAEL,EAAgB,WAAEsI,EAAU,aAAEvC,EAAY,aAAE3F,EAAY,mBAAEE,GAAuBuE,KAAKL,OAC5H,YAAEqC,GAAgBhC,KAAKE,MAC7B,IAAIwD,EAAmBpB,EAAS5F,OAChC,GAAIlB,GAAuC,GAA/BA,EAAKmG,gBAAgBgC,QAC3BrB,EAAS5F,QAAUoB,SAAS2F,GAAa,CAC3C,IAAIG,EAAiBtB,EAAS5F,OAASoB,SAAS2F,GAChDC,EAAoB5F,SAAS2F,GAAc3F,SAAS8F,EACtD,CAEF,IAAIC,EAAM,GACV,MAAM5B,IAAcjF,EAAAA,EAAAA,MAAiBxB,EAAKN,UAAU4I,gBAC9C,UAAE1B,EAAS,SAAErB,EAAQ,SAAEC,GAAae,EAAaC,EAAaC,GAC7C4B,EAAnB7B,EAAc,IAAW,EAClBC,GAA4B,EAEvC,IADA,IAAI8B,EAAI,EAAGC,EAAI1B,EAAS5F,OAAQuH,EAAc,GACvCF,EAAIC,GAAKC,EAAYC,KAAK5B,EAAS6B,MAAMJ,EAAGA,GAAKF,IACxD,IAAIO,EAAapC,EAAc,IAAM,IAAMC,EAC3C,MAAMoC,GAAmB,OAAJ7I,QAAI,IAAJA,GAAqB,QAAjBgI,EAAJhI,EAAMmG,uBAAe,IAAA6B,OAAjB,EAAJA,EAAuBc,aAAc,GAcpD,aAAEhE,GAAiBN,KAAKE,MAE9B,OAAO/C,EAAAA,EAAAA,KAAA,OAAKS,SAAS,IAAI,0BAAAP,OAA0BiF,GAAYA,EAAS5F,OAAS,EAAK4F,EAAS5F,OAAS,EAAC,sBAAsBmB,KAAK,OAAOP,UAAU,uBAAsBY,SAEvKsC,EAAAA,IAAgBrD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAuBY,SAAG+F,GAAeA,EAAYvH,OAAS,GAAMuH,EAAYrC,IAAI,CAACnD,EAAMoD,IACjHpD,EAAK/B,QAAU0H,GAAajH,EAAAA,EAAAA,KAACoH,EAAW,CAAajJ,QAASE,EAAKiG,KAAKC,MAAO3G,SAAU0D,EAAMrD,UAAWyG,EAAO5G,YAAamH,EAAWpH,gBAAiBQ,EAAKmG,gBAAiBzG,UAAWM,EAAKN,UAAWG,OAAQG,EAAKiG,KAAKrE,GAAIjC,iBAAkBA,EAAkB+F,aAAcA,EAAc3F,aAAcA,EAAcC,KAAMA,EAAMyF,mBAAoBA,EAAoBF,SAAUA,EAAUC,SAAUA,EAAUvF,mBAAoBA,EAAoB8E,aAAciE,WAAYH,GAAgB/D,aAAcA,EAAcP,kBAAmBC,KAAKD,mBAAjf8B,GAAygB,SACpjB1E,EAAAA,EAAAA,KAACsH,EAAAA,GAAM,CAACC,UAAU,EAAOpH,UAAU,wBAAwBqH,QAnB1D,CACf7I,KAAM,OACN8I,QAAQ,EACRC,MAAO,IACPC,QAAS,EACTC,QAAS,EACTC,IAAK,EACLC,UAAU,EACVC,cAAc,EACdzH,QAAS,EACT0H,YAAY,EACZC,QAAQ,GAQoFrH,IAAKiC,KAAK0C,MAAO2C,SAAUA,CAACxC,EAAQyC,EAAMC,IAASvF,KAAKI,SAAS,CAAEE,aAAcgF,EAAKzD,QAAS3D,UACvLf,EAAAA,EAAAA,KAACqI,EAAAA,GAAW,CAAAtH,SACR+F,GAAeA,EAAYvH,OAAS,GAAMuH,EAAYrC,IAAI,CAACnD,EAAMoD,IAC1DpD,EAAK/B,QAAU0H,GAAajH,EAAAA,EAAAA,KAACsI,EAAAA,GAAW,CAAAvH,UAAaf,EAAAA,EAAAA,KAACoH,EAAW,CAACjJ,QAASE,EAAKiG,KAAKC,MAAO3G,SAAU0D,EAAMrD,UAAWyG,EAAO5G,YAAamH,EAAWpH,gBAAiBQ,EAAKmG,gBAAiBzG,UAAWM,EAAKN,UAAWG,OAAQG,EAAKiG,KAAKrE,GAAIjC,iBAAkBA,EAAkB+F,aAAcA,EAAc3F,aAAcA,EAAcC,KAAMA,EAAMyF,mBAAoBA,EAAoBF,SAAUA,EAAUC,SAAUA,EAAUvF,mBAAoBA,EAAoB8E,aAAciE,WAAYH,GAAgB/D,aAAcA,EAAcP,kBAAmBC,KAAKD,qBAA9f8B,GAAoiB,WAOrmB,EAIF,MAYA,GAAe6D,EAAAA,EAAAA,IAZSxF,IACf,CACLyF,WAAYzF,EAAMyF,WAAWC,OAINC,IAClB,CACLC,iBAAmBF,GAASC,GAASC,EAAAA,EAAAA,IAAiBF,MAI1D,CAA4DvD,E,kDCvH5D,SAAS0D,EAAyBC,EAAGC,GACnC,GAAI,MAAQD,EAAG,MAAO,CAAC,EACvB,IAAIE,EACFC,EACApC,GAAI,OAA6BiC,EAAGC,GACtC,GAAIG,OAAOC,sBAAuB,CAChC,IAAIrC,EAAIoC,OAAOC,sBAAsBL,GACrC,IAAKG,EAAI,EAAGA,EAAInC,EAAEtH,OAAQyJ,IAAKD,EAAIlC,EAAEmC,IAAK,IAAMF,EAAEK,QAAQJ,IAAM,CAAC,EAAEK,qBAAqBC,KAAKR,EAAGE,KAAOnC,EAAEmC,GAAKF,EAAEE,GAClH,CACA,OAAOnC,CACT,C,mFCPe,MAAMxF,UAAqBkI,EAAAA,cAAc/G,WAAAA,GAAA,SAAAgH,WAAA,KAGtDC,YAAeC,GAAaC,IAC1B,MAAM,KAAEpI,EAAI,OAAEpD,EAAM,QAAEC,GAAY0E,KAAKL,MACvCkH,EAAMC,kBACDC,EAAAA,KAAYC,EAAAA,EAAAA,IAAkB,CACjClL,KAAM,EACNmL,OAAQ,EACRzL,KAAMH,EACN6L,KAAMzI,EAAKR,OACXkJ,KAAM1I,EAAKT,YAAcS,EAAKT,YAAcS,EAAKrB,GACjDsE,MAAOpG,KAET8L,EAAAA,EAAAA,IAAmB,SAAU,WAAY,WAAYR,GACrDrE,OAAO8E,KAAKT,EAAU,UACvB,CAED9F,MAAAA,GACE,MAAM,MAAEzC,EAAK,WAAEG,GAAewB,KAAKL,MACnC,OAAOxB,EAAAA,EAAAA,MAAA,OAAKb,UAAS,oBAAAD,OAAsBmB,GAAaN,SAAA,EACtDf,EAAAA,EAAAA,KAAA,OAAKG,UAAS,6BAAAD,OAA+B0J,EAAAA,GAAa,gBAAkB,YAAa7I,UAACf,EAAAA,EAAAA,KAAA,aAC1FgB,EAAAA,EAAAA,MAAA,OAAKb,UAAU,0BAAyBY,SAAA,CACrCG,EAAMiJ,UACLnK,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qBAAoBY,UACjCf,EAAAA,EAAAA,KAAA,OAAKiB,QAAS4B,KAAK2G,YAAYtI,EAAMiJ,UAAWhK,UAAU,sCAAsCiK,MAAM,WAAUrJ,UAACf,EAAAA,EAAAA,KAAA,cAEjH,GACHkB,EAAMmJ,SACLrK,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qBAAoBY,UACjCf,EAAAA,EAAAA,KAAA,OAAKiB,QAAS4B,KAAK2G,YAAYtI,EAAMmJ,SAAUlK,UAAU,sCAAsCiK,MAAM,UAASrJ,UAACf,EAAAA,EAAAA,KAAA,cAE/G,GACHkB,EAAMoJ,UACLtK,EAAAA,EAAAA,KAAA,OAAKG,UAAU,qBAAoBY,UACjCf,EAAAA,EAAAA,KAAA,OAAKiB,QAAS4B,KAAK2G,YAAYtI,EAAMoJ,UAAWnK,UAAU,sCAAsCiK,MAAM,WAAUrJ,UAACf,EAAAA,EAAAA,KAAA,cAEjH,QAGV,E","sources":["app/Themes/Grid/Focus/Elements/Card.js","app/Themes/Grid/Focus/CollageRows.js","app/Themes/Grid/Focus/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js"],"sourcesContent":["import React, { Suspense, useRef, useEffect } from \"react\";\nimport { IS_THEME, PostTrimContent, detectMobile } from '../../../../../utils'\nimport { isTagEmbed, isTagShop } from \"../../../../../actions/api\";\nimport ShareOnHover from \"../../../Elements/ShareOnHover/ShareOnHover\";\nconst AuthorDetails = React.lazy(() => import(\"./AuthorDetails\"));\nconst Media = React.lazy(() => import('./Media'));\nconst PostContent = React.lazy(() => import('../../../Elements/PostContent/PostContent'));\n\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, postSizeInPx, wall, onClickPopUpSlider, contentActive }) => {\n  const postTrack = useRef(null);\n  const mediaType = itemData.type !== 1 ? true : false;\n  const trim_content_length = 100\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\n  const responsiveCardSize2x = postSizeInPx.adjustWidth < 250 ? true : false\n  const showAuthor = ThemeRule.postAuthor || ThemeRule.postTime ? true : false\n  const isHotspot = itemData.hotspot && itemData.ugc_products.length > 0 ? true : false\n  const isShopBtn = isTagShop && (!itemData.hotspot && itemData.ugc_products.length > 0) ? true : false;\n  const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\n  const maxLines = detectMobile() ? { maxLines: 2 } : {}\n  useEffect(() => {\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\n  }, [itemIndex, itemData.isPopUp, itemData]);\n  return <div id={`tb-sp-post-${itemData.id}`} className={`tb_gf_post_wrapper${responsiveCardSize2x ? ' tb_gf_post_wrapper2x' : ''}`} style={{ width: `${adjustWidth}%`, padding: personalization.padding / 2, float: 'left' }} tb-network={itemData.network.id} tb-product={isShopBtn ? 1 : isHotspot ? 2 : 0} tabIndex=\"0\" role=\"article\" aria-label={`Post ${parseInt(itemIndex) + 1},${postTextContent}`} ref={postTrack} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId}>\n    <div className={`tb_gf_post_in ${contentActive ? `tb_active` : ``} `} onClick={clickToShowPopUp(itemIndex, itemData)}>\n      <div className=\"tb_gf_post_media_wrapp\">\n        {itemData.share.status && !isTagShop ? <ShareOnHover share={itemData.share} shareClass={'tb_gf_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} /> : ''}\n        {mediaType ? <Suspense fallback={<></>}><Media key={`img${itemIndex}_${itemData.id}`} itemData={{ ...itemData, postFileNew: itemData.filename }} wallID={wallID} ownerId={ownerId} ThemeID={personalization.widgetTheme} wall={wall} /></Suspense> : ''}\n      </div>\n      <div className=\"tb_gf_post_details\">\n        <div className=\"tb_gf_contant_wrapper\">\n          {((!ThemeRule.hideContent || itemData.type == 1)) ? <Suspense fallback={<></>}><PostContent contentClass={'tb_gf_content'} item={itemData} content={postTextContent} font={ThemeRule} ThemeRule={ThemeRule} personalization={personalization} contentTitle={itemData.contentTitle} {...maxLines} /></Suspense> : ''}\n        </div>\n        <Suspense fallback={<></>}><AuthorDetails key={`img${itemIndex}_${itemData.id}`} ownerId={ownerId} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={ThemeRule} personalization={personalization} ThemeRule={ThemeRule} /></Suspense>\n      </div>\n      {!ThemeRule.hideContent || showAuthor ?\n        <div className={`tb_gf_post_overlay tb_gf_post_overlay-${themeMode}`}><div></div></div>\n        : null}\n    </div>\n  </div>\n}\nexport default Card","import { Component } from \"react\";\nimport Card from \"./Elements/Card\";\nimport { isSocialEmbed } from \"../../../../actions/api\";\nclass CollageFocusRows extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentActiveIndex: -1\n        }\n    }\n    intervalId = null\n    componentDidMount() {\n        const { currentIndex, intervalTime, itemIndex } = this.props\n        if (currentIndex == itemIndex && !isSocialEmbed) {\n            this.intervalId = setInterval(this.updateIndex, intervalTime * 1000);\n        }\n    }\n\n    updateIndex = () => {\n        const { itemData, handleSlideChange } = this.props\n        let nextIndex = this.state.currentActiveIndex + 1;\n        if (nextIndex >= itemData.length) {\n            nextIndex = 0;\n            handleSlideChange()\n        }\n        this.setState({ currentActiveIndex: nextIndex })\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { itemIndex } = this.props\n        if (nextProps.currentIndex != itemIndex) {\n            clearInterval(this.intervalId)\n            this.setState({ currentActiveIndex: -1 })\n        }\n        if (nextProps.currentIndex == itemIndex && !isSocialEmbed) {\n            this.intervalId = setInterval(this.updateIndex, nextProps.intervalTime * 1000);\n        }\n    }\n\n    render() {\n        const { wall, largeDiv, smallDiv, itemData, completeDataObject, itemIndex, clickToShowPopUp, onClickToCTA, postSizeInPx, adjustWidth, onClickPopUpSlider } = this.props;\n        const { currentActiveIndex } = this.state;\n        const postPosition = wall.ThemeRule.highlightPosition || 'left'; const sumPost = isSocialEmbed ? itemIndex % 2 : 0;\n        const largeDivStyle = { width: largeDiv + `%`, float: sumPost == '0' ? (postPosition == 'right' ? 'right' : 'left') : postPosition == 'right' ? 'left' : 'right' };\n        const smallDivStyle = { width: smallDiv + `%`, float: sumPost == '1' ? (postPosition == 'right' ? 'left' : 'right') : postPosition == 'right' ? 'left' : 'right' }\n        return (itemData && itemData.length > 0) ? <div className=\"ts_gf_post_row\">\n            <div className=\"ts_gf_post_large\" style={largeDivStyle}><Card ownerId={wall.Wall.owner} itemData={completeDataObject[itemData[0]]} key={`sqr_crd_${0}_${completeDataObject[itemData[0]].id}`} itemIndex={itemIndex} adjustWidth={100} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} onClickPopUpSlider={onClickPopUpSlider} contentActive={currentActiveIndex == 0} /></div>\n            <div className=\"ts_gf_post_small\" style={smallDivStyle}>\n                {\n                    (itemData && itemData.length > 0) ? itemData.map((item, index) => {\n                        const cardData = completeDataObject[item];\n                        return (index != 0 ? <Card ownerId={wall.Wall.owner} itemData={cardData} key={`sqr_crd_${index}_${item.id}`} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} onClickPopUpSlider={onClickPopUpSlider} contentActive={currentActiveIndex == index} /> : null)\n                    }) : null\n                } </div>\n\n        </div> : null\n    }\n}\nexport default CollageFocusRows","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\nimport { managePostHeight } from '../../../../actions/themeActions';\nimport '../../scss/ThemesSplide.scss'\nimport \"./scss/GridFocus.scss\";\nimport CollageRows from \"./CollageRows\";\nimport { detectMobile } from '../../../../utils';\nimport { isSocialEmbed } from \"../../../../actions/api\";\nexport const getPostWidth = (windowWidth, ColumnCount) => {\n  const getWidths = (inWidth, cardWidth) => ({ cardWidth, largeDiv: inWidth * 2, smallDiv: 100 - inWidth * 2 });\n  switch (ColumnCount) {\n    case 3: return getWidths(windowWidth > 320 ? 100 / 3 : 100 / 3, 100 / 1);\n    case 5: return getWidths(windowWidth > 767 ? 100 / 4 : 100 / 3, windowWidth > 767 ? 100 / 2 : 100 / 1);\n    case 7: return getWidths(windowWidth > 767 ? 100 / 5 : 100 / 3, windowWidth > 767 ? 100 / 3 : 100 / 1);\n    case 9: return getWidths(windowWidth > 767 ? 100 / 6 : 100 / 3, windowWidth > 767 ? 100 / 4 : 100 / 1);\n    case 10: return getWidths(windowWidth > 767 ? 100 / 4 : 100 / 3, windowWidth > 767 ? 100 / 2 : 100 / 1);\n    case 13: return getWidths(windowWidth > 767 ? 100 / 4 : 100 / 3, windowWidth > 767 ? 100 / 2 : 100 / 1);\n    case 17: return getWidths(windowWidth > 767 ? 100 / 6 : 100 / 3, windowWidth > 767 ? 100 / 4 : 100 / 1);\n    default: return getWidths(windowWidth < 767 ? 100 / 3 : 100 / 1, 100 / 1);\n  }\n}\nclass CollageTheme extends Component {\n  constructor(props) {\n    super(props)\n    this.myRef = React.createRef();\n  }\n  state = {\n    postData: [],\n    windowWidth: window.innerWidth,\n    currentIndex: -1\n  }\n  componentDidMount() {\n    const { renderId, heightUpdate } = this.props;\n    if (renderId.renderId) {\n      this.setState({\n        windowWidth: document.getElementById(renderId.renderId).clientWidth\n      })\n    }\n    setTimeout(() => heightUpdate(), 1000)\n  }\n\n  handleSlideChange = () => {\n    const { currentIndex } = this.state\n    const nextSlideIndex = currentIndex + 1;\n    if (this.myRef && this.myRef.current) {\n      if (nextSlideIndex < this.myRef.current.slides.length) this.myRef.current.splide.go(nextSlideIndex)\n      else this.myRef.current.splide.go(0)\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.postData !== this.props.postData) return true\n    else if (prevState.currentIndex !== this.state.currentIndex) return true\n    else return false\n  }\n\n  render() {\n    const { postData, completeDataObject, wall, clickToShowPopUp, cardNumber, onClickToCTA, postSizeInPx, onClickPopUpSlider } = this.props;\n    const { windowWidth } = this.state\n    let totalPostBestFit = postData.length;\n    if (wall && wall.Personalization.fitRow == 1) {\n      if (postData.length >= parseInt(cardNumber)) {\n        let bestFitEachRow = postData.length / parseInt(cardNumber);\n        totalPostBestFit = (parseInt(cardNumber) * parseInt(bestFitEachRow));\n      }\n    }\n    var clm = ''\n    const ColumnCount = detectMobile() ? wall.ThemeRule.numberOfCoumn : wall.ThemeRule.numberOfCoumn\n    const { cardWidth, largeDiv, smallDiv } = getPostWidth(windowWidth, ColumnCount)\n    if (windowWidth < 768) clm = 3\n    else clm = ColumnCount ? ColumnCount : 1\n    var i = 0, n = postData.length, newPostdata = [];\n    while (i < n) { newPostdata.push(postData.slice(i, i += clm)); }\n    var postClmnNo = windowWidth < 768 ? '3' : ColumnCount\n    const delaySetting = wall?.Personalization?.slideDelay || 5;\n    const settings = {\n      type: 'fade',\n      rewind: false,\n      speed: 1000,\n      perPage: 1,\n      perMove: 1,\n      gap: 0,\n      autoplay: false,\n      pauseOnHover: false,\n      padding: 0,\n      pagination: false,\n      arrows: false,\n    };\n    const { currentIndex } = this.state;\n\n    return <div tabIndex=\"0\" aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`} role=\"feed\" className=\"tb_gf_post_container\">\n      {\n        isSocialEmbed ? <div className=\"tb_gf_slider_wrappper\">{(newPostdata && newPostdata.length > 0) && newPostdata.map((item, index) => {\n          return item.length == postClmnNo ? <CollageRows key={index} ownerId={wall.Wall.owner} itemData={item} itemIndex={index} adjustWidth={cardWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} largeDiv={largeDiv} smallDiv={smallDiv} onClickPopUpSlider={onClickPopUpSlider} intervalTime={parseFloat((delaySetting))} currentIndex={currentIndex} handleSlideChange={this.handleSlideChange} /> : null\n        })}</div> : <Splide hasTrack={false} className=\"tb_gf_slider_wrappper\" options={settings} ref={this.myRef} onActive={(splide, prev, next) => this.setState({ currentIndex: prev.index })}>\n          <SplideTrack>\n            {(newPostdata && newPostdata.length > 0) && newPostdata.map((item, index) => {\n              return item.length == postClmnNo ? <SplideSlide key={index}><CollageRows ownerId={wall.Wall.owner} itemData={item} itemIndex={index} adjustWidth={cardWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} completeDataObject={completeDataObject} largeDiv={largeDiv} smallDiv={smallDiv} onClickPopUpSlider={onClickPopUpSlider} intervalTime={parseFloat((delaySetting))} currentIndex={currentIndex} handleSlideChange={this.handleSlideChange} /></SplideSlide> : null\n            })}\n          </SplideTrack>\n        </Splide>\n      }\n\n    </div>\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    postHeight: state.postHeight.data\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    managePostHeight: (data) => dispatch(managePostHeight(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollageTheme)","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","import React, { PureComponent } from \"react\";\nimport { themePostTracking, gtmAnalyticsAction } from '../../../../actions/themeActions'\nimport { isTagEmbed } from '../../../../actions/api'\n\nexport default class ShareOnHover extends PureComponent {\n\n\n  onClickData = (shareURL) => event => {\n    const { item, wallID, ownerId } = this.props;\n    event.stopPropagation();\n    if (!isTagEmbed) themePostTracking({\n      type: 2,\n      action: 2,\n      wall: wallID,\n      feed: item.feedId,\n      post: item.referenceId ? item.referenceId : item.id,\n      owner: ownerId\n    })\n    gtmAnalyticsAction(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\n    window.open(shareURL, \"_blank\")\n  }\n\n  render() {\n    const { share, shareClass } = this.props;\n    return <div className={`tb_share_wrapper ${shareClass}`}>\n      <div className={`tb_share_button_ tb__icon ${isTagEmbed ? 'tb-share-fill' : 'tb-share'}`}><div></div></div>\n      <div className=\"tb_share_icon_list_wrap\">\n        {share.facebook ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.facebook)} className=\"tb_share_ico__ tb__icon tb-facebook\" title=\"facebook\"><div></div></div>\n          </div>\n          : ''}\n        {share.twitter ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.twitter)} className=\"tb_share_ico__  tb__icon tb-twitter\" title=\"twitter\"><div></div></div>\n          </div>\n          : ''}\n        {share.linkedin ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.linkedin)} className=\"tb_share_ico__ tb__icon tb-linkedin\" title=\"linkedin\"><div></div></div>\n          </div>\n          : ''}\n      </div>\n    </div>\n  }\n}\n"],"names":["AuthorDetails","React","Media","PostContent","_ref","itemData","personalization","adjustWidth","ThemeRule","clickToShowPopUp","itemIndex","wallID","ownerId","postSizeInPx","wall","onClickPopUpSlider","contentActive","postTrack","useRef","mediaType","type","postTextContent","trimcontent","PostTrimContent","content","responsiveCardSize2x","showAuthor","postAuthor","postTime","isHotspot","hotspot","ugc_products","length","isShopBtn","isTagShop","themeMode","postHover","maxLines","detectMobile","useEffect","isPopUp","_jsx","id","concat","className","style","width","padding","float","network","tabIndex","role","parseInt","ref","referenceId","feedId","children","_jsxs","onClick","share","status","ShareOnHover","shareClass","item","Suspense","fallback","_Fragment","_objectSpread","postFileNew","filename","ThemeID","widgetTheme","hideContent","contentClass","font","contentTitle","createdAt","author","CollageFocusRows","Component","constructor","props","super","intervalId","updateIndex","handleSlideChange","this","nextIndex","state","currentActiveIndex","setState","componentDidMount","currentIndex","intervalTime","isSocialEmbed","setInterval","componentWillUnmount","clearInterval","componentWillReceiveProps","nextProps","render","largeDiv","smallDiv","completeDataObject","onClickToCTA","postPosition","highlightPosition","sumPost","largeDivStyle","smallDivStyle","Card","Wall","owner","Personalization","map","index","cardData","getPostWidth","windowWidth","ColumnCount","getWidths","inWidth","cardWidth","CollageTheme","postData","window","innerWidth","nextSlideIndex","myRef","current","slides","splide","go","renderId","heightUpdate","document","getElementById","clientWidth","setTimeout","componentDidUpdate","prevProps","prevState","_wall$Personalization","cardNumber","totalPostBestFit","fitRow","bestFitEachRow","clm","numberOfCoumn","i","n","newPostdata","push","slice","postClmnNo","delaySetting","slideDelay","CollageRows","parseFloat","Splide","hasTrack","options","rewind","speed","perPage","perMove","gap","autoplay","pauseOnHover","pagination","arrows","onActive","prev","next","SplideTrack","SplideSlide","connect","postHeight","data","dispatch","managePostHeight","_objectWithoutProperties","e","t","o","r","Object","getOwnPropertySymbols","indexOf","propertyIsEnumerable","call","PureComponent","arguments","onClickData","shareURL","event","stopPropagation","isTagEmbed","themePostTracking","action","feed","post","gtmAnalyticsAction","open","facebook","title","twitter","linkedin"],"sourceRoot":""}