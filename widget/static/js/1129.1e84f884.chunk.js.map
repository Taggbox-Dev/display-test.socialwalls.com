{"version":3,"file":"static/js/1129.1e84f884.chunk.js","mappings":"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","sources":["../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","app/Components/PostPopUp/Elements/PopUpVideo.js","../node_modules/prop-types/index.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","import React, { PureComponent } from \"react\";\nimport ReactPlayer from \"react-player\"\nimport { POPUP_VIDEO_RENEW } from '../../../../actions/themeActions'\nimport { isTagShop, isSocialWall } from \"../../../../actions/api\";\nimport { reelPlayTimeUpdateData } from \"../../../../utils\";\n\nconst mediaReplaceText = (mediaUrl, networkId) => {\n    switch (networkId) {\n        case 25:\n            const soundCloud = String(mediaUrl).replace(\"https://w.soundcloud.com/player/?url=\", \"\")\n            return soundCloud\n            break;\n\n        default:\n            return mediaUrl\n            break;\n    }\n\n}\nexport default class PopUpVideo extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            videoLoaded: false,\n            muted: isSocialWall ? true : false,\n            played: 0\n        }\n        this.VideoWrap = React.createRef();\n    }\n\n    setVideoLoaded = event => {\n        this.setState({\n            videoLoaded: event\n        })\n    }\n\n    muteToggle = () => {\n        this.setState({\n            muted: !this.state.muted,\n        })\n    }\n    componentWillUnmount() {\n        const { played } = this.state\n        if (isTagShop) reelPlayTimeUpdateData(played)\n    }\n    onUpdateTime = (progress) => {\n        try {\n            if (isTagShop) {\n                const { played } = this.state\n                this.setState({\n                    played: played + progress.playedSeconds\n                })\n            }\n        }\n        catch (e) {\n            console.log(e)\n        }\n\n    }\n    render() {\n        const { data, wall } = this.props\n        const { videoLoaded, muted } = this.state\n        const noMuteIcon = [7, 3, 25]\n        const muteIcon = !noMuteIcon.includes(data.network.id) ? true : false\n        return <div className={`tb_post_modal_video_holder${videoLoaded ? ' tb_post_video_loaded' : ''}`} ref={this.VideoWrap} key={data.mediaUrl} >\n            {muteIcon ?\n                <div className=\"tb_m_mute_btn\" onClick={this.muteToggle}>\n                    <div className={`tb__icon tb-${!muted ? `unmute` : `mute`}`}><div></div></div>\n                </div>\n                : ''}\n            <ReactPlayer\n                className={`tb_post_modal_video video${data.id}`}\n                url={mediaReplaceText(data.mediaUrl, data.network.id)}\n                data-type=\"video\"\n                data-network={data.network.id}\n                data-link={data.link}\n                data-wall-id={wall.Wall.id}\n                data-item-id={data.id}\n                data-feed-id={data.feedId ? data.feedId : \"\"}\n                data-load={0}\n                config={{\n                    facebook: {\n                        appId: '117029975354072',\n                        attributes: {\n                            'data-width': 'auto',\n                            muted,\n                            poster: data.postFileNew\n                            // 'data-height': `${document.querySelector('.ts_rt_post_in') ? `${document.querySelector('.ts_rt_post_in').clientHeight} px` : '100%'}`\n                        }\n                    },\n                    file: {\n                        forceVideo: true,\n\n                        attributes: {\n                            muted,\n                            poster: data.postFileNew\n                            // onError: (e) => IMG_LOAD_AFTER_COMPLETE_LAYOUT_FOR_POP_UP_VIDEO(e)\n                        }\n                    }\n                    // tracks: [\n                    //     {kind: 'subtitles', src: `${CloudUrl}/media/images/subtitles.en.vtt`, srcLang: 'en', default: true},\n                    // ]\n                }}\n                loop={true}\n                //onError={(e) => { this.setVideoLoaded(false) }}\n                onError={(e) => {\n                    if (!data.stories || data.stories == 0) POPUP_VIDEO_RENEW(e, data.id)\n\n                    //this.setVideoLoaded(false)\n                }}\n                //(data.stories == 0) ? POPUP_VIDEO_RENEW(e) : null}\n                autoPlay={true}\n                muted={muted}\n                volume={1}\n                playsinline={true}\n                onReady={(e) => { this.setVideoLoaded(true) }}\n                playing={true}\n                height={'100%'}\n                width={'100%'}\n                controls={!muteIcon ? true : false}\n                style={{ backgroundImage: `url(${data.postFileNew})`, backgroundSize: 'cover', backgroundPosition: 'center', backgroundRepeat: 'no-repeat' }}\n                onProgress={this.onUpdateTime}\n            />\n        </div>\n    }\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n"],"names":["module","exports","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","mediaReplaceText","mediaUrl","networkId","String","replace","PopUpVideo","PureComponent","constructor","super","setVideoLoaded","event","this","setState","videoLoaded","muteToggle","muted","state","onUpdateTime","progress","isTagShop","played","playedSeconds","e","console","log","isSocialWall","VideoWrap","React","componentWillUnmount","reelPlayTimeUpdateData","render","data","wall","muteIcon","includes","network","id","_jsxs","className","concat","ref","children","_jsx","onClick","ReactPlayer","url","link","Wall","feedId","config","facebook","appId","attributes","poster","postFileNew","file","forceVideo","loop","onError","stories","POPUP_VIDEO_RENEW","autoPlay","volume","playsinline","onReady","playing","height","width","controls","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","onProgress"],"sourceRoot":""}