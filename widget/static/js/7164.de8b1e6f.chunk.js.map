{"version":3,"file":"static/js/7164.de8b1e6f.chunk.js","mappings":"2LAIA,MAAMA,EAAcC,EAAAA,KAAW,IAAM,iCAC/BC,EAAcD,EAAAA,KAAW,IAAM,iCAC/BE,EAAcF,EAAAA,KAAW,IAAM,iCAC/BG,EAAcH,EAAAA,KAAW,IAAM,iCAC/BI,EAAmBJ,EAAAA,KAAW,IAAM,iCAGpCK,EAAeC,IAA4B,IAA3B,OAAEC,EAAM,UAAEC,GAAWF,EACzC,OAAQC,EAAOE,YACb,KAAK,EACH,OAAOC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACd,EAAW,CAACQ,OAAQA,EAAQC,UAAWA,OAC7E,KAAK,EACH,OAAOE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACZ,EAAW,CAACM,OAAQA,EAAQC,UAAWA,OAC7E,KAAK,EACH,OAAOE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACX,EAAW,CAACK,OAAQA,OAC1D,KAAK,EACH,OAAOG,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACV,EAAW,CAACI,OAAQA,EAAQC,UAAWA,OAC7E,QACE,OAAOK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MAGE,MAAME,UAAeC,EAAAA,cAClCC,MAAAA,GACE,MAAM,OAAEX,EAAM,YAAEY,EAAW,UAAEX,GAAcY,KAAKC,MAKhD,OAJId,EAAOe,mBAAqBf,EAAOe,kBAAkBC,SAASC,EAAAA,MAAejB,EAA0B,kBAAIkB,OAAOlB,EAAOe,mBAAmBI,QAAQC,EAAAA,GAAc,KAClKpB,EAAOC,WAAaD,EAAOC,UAAUe,SAASC,EAAAA,MAAejB,EAAkB,UAAIkB,OAAOlB,EAAOC,WAAWkB,QAAQC,EAAAA,GAAc,KAClIR,EAAYS,OAAST,EAAYS,MAAML,SAASC,EAAAA,MAAeL,EAAmB,MAAIM,OAAON,EAAYS,OAAOF,QAAQC,EAAAA,GAAc,MAGxIjB,EAAAA,EAAAA,MAAA,OAAKmB,UAAU,mBAAkBd,SAAA,CACZ,IAAlBR,EAAOuB,QAAejB,EAAAA,EAAAA,KAACR,EAAY,CAACE,OAAQA,EAAQC,UAAWA,IAAgB,GAC/EuB,EAAAA,GAAwC,IAAvBZ,EAAYW,QAAwC,KAAxBX,EAAYa,SAAiE,KAA/Cb,EAAYa,QAAQC,MAAMN,EAAAA,IAAc,IAAYjB,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACT,EAAgB,CAAC8B,SAAUf,EAAYa,aAAyB,GAA6B,IAAvBb,EAAYW,QAAsC,KAAtBX,EAAYS,OAA6D,KAA7CT,EAAYS,MAAMK,MAAMN,EAAAA,IAAc,IAAYjB,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAACC,UAAUC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,SAAA,CAAC,KAACF,EAAAA,EAAAA,KAACT,EAAgB,CAAC8B,SAAUf,EAAYS,WAAuB,KAI9a,E","sources":["app/Header/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\nimport \"./scss/Header.scss\";\nimport { CloudHostUrl, TagboxUpload } from '../../constants'\nimport { isSocialWall } from \"../../actions/api\";\nconst HeaderType2 = React.lazy(() => import(\"./HeaderType/HeaderType2\"));\nconst HeaderType3 = React.lazy(() => import(\"./HeaderType/HeaderType3\"));\nconst HeaderType4 = React.lazy(() => import(\"./HeaderType/HeaderType4\"));\nconst HeaderType5 = React.lazy(() => import(\"./HeaderType/HeaderType5\"));\nconst HeaderTypeCustom = React.lazy(() => import('./HeaderType/HeaderTypeCustom'));\n\n\nconst HeaderRender = ({ Banner, LogoImage }) => {\n  switch (Banner.bannerType) {\n    case 2:\n      return <Suspense fallback={<></>}> <HeaderType2 Banner={Banner} LogoImage={LogoImage} /></Suspense>\n    case 3:\n      return <Suspense fallback={<></>}> <HeaderType3 Banner={Banner} LogoImage={LogoImage}/></Suspense>\n    case 4:\n      return <Suspense fallback={<></>}> <HeaderType4 Banner={Banner}/></Suspense>\n    case 5:\n      return <Suspense fallback={<></>}> <HeaderType5 Banner={Banner} LogoImage={LogoImage}/></Suspense>\n    default:\n      return <></>\n  }\n}\nexport default class Header extends PureComponent {\n  render() {\n    const { Banner, BannerImage, LogoImage } = this.props;\n    if (Banner.CustomBannerImage && Banner.CustomBannerImage.includes(CloudHostUrl)) Banner['CustomBannerImage'] = String(Banner.CustomBannerImage).replace(TagboxUpload, \"\");\n    if (Banner.LogoImage && Banner.LogoImage.includes(CloudHostUrl)) Banner['LogoImage'] = String(Banner.LogoImage).replace(TagboxUpload, \"\");\n    if (BannerImage.image && BannerImage.image.includes(CloudHostUrl)) BannerImage['image'] = String(BannerImage.image).replace(TagboxUpload, \"\");\n\n    return (\n      <div className=\"tb_wall_header__\">\n        {Banner.status === 1 ? <HeaderRender Banner={Banner} LogoImage={LogoImage} /> : ''} \n        {isSocialWall ?  (BannerImage.status === 1 && BannerImage.newName !== '' && BannerImage.newName.split(TagboxUpload)[1] !== '' ? <Suspense fallback={<></>}> <HeaderTypeCustom ImageUrl={BannerImage.newName} /></Suspense> : '') : BannerImage.status === 1 && BannerImage.image !== '' && BannerImage.image.split(TagboxUpload)[1] !== '' ? <Suspense fallback={<></>}> <HeaderTypeCustom ImageUrl={BannerImage.image} /></Suspense> : ''}\n        \n      </div>\n    );\n  }\n}\n"],"names":["HeaderType2","React","HeaderType3","HeaderType4","HeaderType5","HeaderTypeCustom","HeaderRender","_ref","Banner","LogoImage","bannerType","_jsxs","Suspense","fallback","_jsx","_Fragment","children","Header","PureComponent","render","BannerImage","this","props","CustomBannerImage","includes","CloudHostUrl","String","replace","TagboxUpload","image","className","status","isSocialWall","newName","split","ImageUrl"],"sourceRoot":""}