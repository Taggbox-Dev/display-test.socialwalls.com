{"version":3,"file":"static/js/4509.6214426f.chunk.js","mappings":"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","sources":["app/Themes/Waterfall/Flux/Elements/Card.js","app/Themes/Waterfall/Flux/index.js","app/Components/ScrollAnimation/index.js","app/Themes/Elements/Network/Network.js","app/Themes/Elements/ShopButton/ShopButton.js","app/Themes/Elements/ShareOnHover/ShareOnHover.js"],"sourcesContent":["import React, { Suspense, useRef, useEffect } from \"react\";\nimport { IS_THEME, PostTrimContent, themeImpressionTracking } from '../../../../../utils'\nimport { isSocialEmbed, isSocialWall, isTagEmbed, isTagShop, isTagbox } from \"../../../../../actions/api\";\nimport { suiteTrack } from '../../../../../actions/api'\nimport ShareOnHover from \"../../../Elements/ShareOnHover/ShareOnHover\";\nimport Network from \"../../../Elements/Network/Network\";\nimport ShopButton from \"../../../Elements/ShopButton/ShopButton\";\nconst AuthorDetails = React.lazy(() => import(\"./AuthorDetails\"));\nconst Media = React.lazy(() => import('./Media'));\nconst PostContent = React.lazy(() => import('../../../Elements/PostContent/PostContent'));\nconst trim_content_length = (isSocialWall || isSocialEmbed) ? 50 : null;\n\n\nconst Card = ({ itemData, personalization, adjustWidth, ThemeRule, clickToShowPopUp, itemIndex, wallID, ownerId, postSizeInPx, wall, onClickPopUpSlider }) => {\n  const postTrack = useRef(null);\n  const mediaType = (itemData.type === 2 || itemData.type === 3 || itemData.type === 4 || itemData.type === 5) ? true : false;\n  const postTextContent = personalization.trimcontent ? PostTrimContent(itemData.content, trim_content_length) : itemData.content\n  const responsiveCardSize2x = postSizeInPx.adjustWidth < 250 ? true : false\n  const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\n  const overlay = isTagbox ? 'tb_flux_color_overlay' : 'tb_flux_post_overlay-' + themeMode\n  const overlayStyle = { backgroundColor: isTagbox ? ThemeRule.backgroundColor : '' }\n  useEffect(() => {\n    if (suiteTrack) themeImpressionTracking(postTrack);\n  }, []);\n  const isHotspot = itemData.hotspot && itemData.ugc_products.length > 0 ? true : false\n  const isShopBtn = isTagShop && (!itemData.hotspot && itemData.ugc_products.length > 0) ? true : false;\n  const showAuthor = ThemeRule.postAuthor || ThemeRule.postTime ? true : false\n\n  useEffect(() => {\n    if (itemData.isPopUp) onClickPopUpSlider(itemIndex, itemData)\n  }, [itemIndex, itemData.isPopUp, itemData]);\n  return <div id={`tb-sp-post-${itemData.id}`} className={`tb_flux_post_wrapper${responsiveCardSize2x ? ' tb_flux_post_wrapper2x' : ''}`} tb-network={itemData.network.id} tb-product={isShopBtn ? 1 : isHotspot ? 2 : 0} tabIndex=\"0\" role=\"article\" aria-label={`Post ${parseInt(itemIndex) + 1},${postTextContent}`} ref={postTrack} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId}>\n    <div className={`tb_flux_post_in${isTagShop ? ' tb_flux_post_ani' : ''}`} onClick={clickToShowPopUp(itemIndex, itemData)}>\n      <div className=\"tb_flux_post_media_wrapp\">\n        {itemData.share.status ? <ShareOnHover share={itemData.share} shareClass={'tb_flux_share_container'} item={itemData} wallID={wallID} ownerId={ownerId} /> : ''}\n        {mediaType ? <Suspense fallback={<></>}><Media key={`img${itemIndex}_${itemData.id}`} itemData={itemData} wallID={wallID} ownerId={ownerId} ThemeID={personalization.widgetTheme} wall={wall} /></Suspense> : ''}\n        {showAuthor ?\n          <Suspense fallback={<></>}><AuthorDetails key={`img${itemIndex}_${itemData.id}`} ownerId={ownerId} postTime={itemData.createdAt} author={itemData.author} network={itemData.network} font={ThemeRule} personalization={personalization} ThemeRule={ThemeRule} /></Suspense>\n          : null}\n      </div>\n    </div>\n  </div>\n}\nexport default Card","import React, { Component } from \"react\";\nimport Masonry from 'react-masonry-component';\nimport Card from \"./Elements/Card\";\nimport { connect } from 'react-redux';\nimport { managePostHeight } from '../../../../actions/themeActions';\nimport \"./scss/flux.scss\";\nimport ScrollAnimation from \"../../../Components/ScrollAnimation\";\nimport QRCode from \"react-qr-code\";\nimport { FOR_TEST_SERVER, isSocialEmbed, isSocialWall } from \"../../../../actions/api\";\nimport { ServerUrl, SocialWallEmbedServerUrl, SocialWallServerTestUrl, SocialWallServerUrl } from \"../../../../constants\";\nclass SquarePhoto extends Component {\n  state = {\n    postData: []\n  }\n  videoRef = React.createRef();\n\n  componentDidMount() {\n    const { heightUpdate } = this.props;\n    setTimeout(() => heightUpdate(), 1000)\n\n    const video = this.videoRef.current;\n\n    if (video) {\n      const playPromise = video.play();\n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {\n            // Autoplay started\n          })\n          .catch((error) => {\n            console.warn(\"Autoplay failed:\", error);\n          });\n      }\n    }\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.postData !== this.props.postData) return true\n    else return false\n  }\n\n\n  render() {\n    const { postData, completeDataObject, adjustWidth, wall, clickToShowPopUp, cardNumber, onClickToCTA, postSizeInPx, onClickPopUpSlider } = this.props;\n    let totalPostBestFit = postData.length;\n        var ugcSuite = window.ugcSuite ? { ugcSuite: 1 } : window.location.href.includes(\"ugcSuite=1\") ? { ugcSuite: 1 } : {}\n    const isUgcSuite = Object.keys(ugcSuite).length > 0 ? '&ugcSuite=1' : ''\n    const QRLink =`${isSocialWall && !isSocialEmbed ? FOR_TEST_SERVER ? SocialWallServerTestUrl : SocialWallServerUrl : isSocialWall && isSocialEmbed ? SocialWallEmbedServerUrl : ServerUrl}/${wall?.Wall?.id}?onsite-upload=true${isUgcSuite}`\n\n\n    if (wall && wall.Personalization.fitRow == 1) {\n      if (postData.length >= parseInt(cardNumber)) {\n        let bestFitEachRow = postData.length / parseInt(cardNumber);\n        totalPostBestFit = (parseInt(cardNumber) * parseInt(bestFitEachRow));\n      }\n    }\n    return (\n      <ScrollAnimation wall={wall} parentId=\"tb_marquee\" renderID=\"MotionV\">\n        <div className=\"tb_flux_marquee_box\">\n          <div className=\"tb_flux_marquee_inner\">\n            <div className=\"tb_flux_marquee_outline\">\n              <div id=\"tb_marquee\" className=\"tb_flux_marquee\">\n                <Masonry\n                  id=\"MotionV\"\n                  className={`tb_flux_post_container`}\n                  tabIndex='0'\n                  aria-label={`There are ${(postData && postData.length > 0) ? postData.length : 0} posts in the feed`}\n                  elementType={'div'}\n                  options={{\n                    transitionDuration: 0,\n                    percentPosition: true,\n                    itemSelector: '.tb_flux_post_wrapper',\n                    horizontalOrder: false,\n                    resize: true,\n                  }}\n                  disableImagesLoaded={false}\n                  updateOnEachImageLoad={false}\n                  imagesLoadedOptions={{}}\n                  enableResizableChildren={true}>\n\n                  {(postData?.length > 0) && postData.map((item, index) => {\n                    const cardData = completeDataObject[item];\n                    return <Card ownerId={wall.Wall.owner} itemData={cardData} key={`sqr_crd_${index}_${cardData.id}`} itemIndex={index} adjustWidth={adjustWidth} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} onClickToCTA={onClickToCTA} postSizeInPx={postSizeInPx} wall={wall} onClickPopUpSlider={onClickPopUpSlider} />\n                  })}\n\n                </Masonry>\n              </div>\n              <div className=\"tb_flux_footer\">\n\n               <video\n                  ref={this.videoRef}\n                  src=\"https://cloud.socialwalls.com/react-app/media/custom-media/shein-ugc@2x.mp4\"\n                  width=\"672\"\n                  poster=\"https://cloud.socialwalls.com/react-app/media/custom-media/shein-ugc@2x.png\"\n                  preload=\"auto\"\n                  playsInline\n                  loop\n                  muted>\n                  <track\n                    src=\"https://cloud.socialwalls.com/react-app/media/custom-media/shein-ugc.vtt\"\n                    kind=\"captions\"\n                    srcLang=\"en\"\n                    label=\"english\"\n                  />\n                </video>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ScrollAnimation>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    postHeight: state.postHeight.data\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    managePostHeight: (data) => dispatch(managePostHeight(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SquarePhoto)","import { Component, memo } from \"react\";\nimport { isSocialWall, isSocialEmbed } from \"../../../actions/api\";\n\nvar ReachedMaxScroll = false;\nvar PreviousScrollTop = 0;\nvar setTimescroll = 0;\nvar ScrollInterval = 0;\nvar scrollTime, DivElmnt;\nconst speedUpPixel = scrollDelay => ({ 80: 60, 70: 40, 50: 30, 30: 20, 20: 10 }[scrollDelay] ?? 20);\nconst scrollSpeedValue = window.location.href.includes(\"app=1\") ? 1.2 : 0.6\nclass ScrollAnimation extends Component {\n    state = {\n        slideWall: 0,\n    }\n    componentDidMount() {\n        this.onLoadScroll()\n        window.addEventListener('resize', () => {\n            this.onScrollWPosts();\n        });\n    }\n    onLoadScroll = () => {\n        if (!isSocialEmbed) {\n            const { wall } = this.props;\n            window.clearData = this.clearData;\n            const prentId = document.querySelector(\".tb_app_container\");\n            prentId?.addEventListener(\"wheel\", e => e.preventDefault(), { passive: false });\n            setTimescroll = setTimeout(() => this.scrollDiv_init(wall.ThemeRule.themeId), 500);\n        }\n    }\n    scrollDiv_init = (themeId) => {\n        const { slideWall } = this.state\n        const { parentId } = this.props\n        if (!slideWall) {\n            DivElmnt = document.getElementById(parentId);\n            if (themeId == 63) ReachedMaxScroll = false;\n            (DivElmnt || {}).scrollTop = 0;\n            PreviousScrollTop = 0;\n            this.onScrollData();\n            this.onScrollWPosts();\n        }\n    };\n\n    onScrollData = () => {\n        const { wall } = this.props;\n        const delay = wall.Personalization.scrollDelay;\n        if (delay) {\n            const speed = speedUpPixel(delay);\n            ScrollInterval = setInterval(this.scrollDiv, speed);\n        }\n    };\n\n\n\n    onScrollWPosts = () => {\n        const { themeHeight, wall, renderID, parentId } = this.props;\n        const DivElmnt = document.getElementById(parentId);\n        const dataPost = document.getElementById(renderID);\n        var themeContainer = document.querySelector(\".tb_theme_container\");\n\n        if (themeContainer) {\n            themeContainer = window.getComputedStyle(themeContainer).getPropertyValue('height');\n            if (dataPost) {\n                if (window.innerHeight < dataPost.clientHeight) {\n                    DivElmnt.style = `height:${themeContainer}`\n                    dataPost.style = `position: relative; margin-bottom: ${window.innerHeight}px; min-height: ${dataPost.clientHeight}px`;\n\n                } else {\n                    const height = themeHeight && isSocialWall ? themeHeight + (window.editor ? 6 : 0) : 0;\n                    DivElmnt.style = `height:${themeContainer}`;\n                    DivElmnt.setAttribute(\"style\", `height:${themeContainer}`);\n                }\n            }\n        }\n\n    };\n\n\n    scrollDiv = () => {\n        const { themeId } = this.props.wall.ThemeRule;\n        if (ScrollInterval) clearInterval(ScrollInterval);\n\n        const div = DivElmnt || {};\n\n        if (!ReachedMaxScroll) {\n            PreviousScrollTop = PreviousScrollTop + scrollSpeedValue\n            div.scrollTop = PreviousScrollTop;\n            ReachedMaxScroll = div.scrollTop >= div.scrollHeight - div.offsetHeight - 700;\n        } else if (themeId === 63) {\n            PreviousScrollTop = PreviousScrollTop - scrollSpeedValue\n            div.scrollTop = PreviousScrollTop;\n            ReachedMaxScroll = ReachedMaxScroll && div.scrollTop === 0 ? false : true;\n        } else {\n            div.scrollTop = PreviousScrollTop = 0;\n            ReachedMaxScroll = false;\n        }\n\n        this.onScrollData();\n    };\n\n\n    pauseDiv = () => {\n        clearInterval(ScrollInterval);\n        clearTimeout(scrollTime);\n        scrollTime = setTimeout(this.resumeDiv, 5000);\n    };\n\n\n    resumeDiv = () => {\n        const { wall, renderID } = this.props;\n        DivElmnt = document.getElementById(renderID);\n        PreviousScrollTop = DivElmnt?.scrollTop || 0;\n        ScrollInterval = setInterval(this.scrollDiv, speedUpPixel(wall.Personalization.scrollDelay));\n    };\n\n\n    componentDidUpdate(prevProps, prevState) {\n        const { postData, wall } = prevProps;\n        const { ThemeRule } = this.props.wall;\n\n        if (ThemeRule.themeId !== wall.ThemeRule.themeId) {\n            ReachedMaxScroll = false;\n            PreviousScrollTop = 0;\n        }\n\n        if (postData !== this.props.postData) {\n            this.clearTime(1);\n            this.scrollDiv_init(ThemeRule.themeId);\n        }\n    }\n    clearData = () => this.clearTime()\n\n    clearTime = (status = 0) => {\n        this.setState({ slideWall: status ? 0 : 1 });\n        clearInterval(ScrollInterval);\n        ScrollInterval = 0;\n        clearTimeout(scrollTime);\n        clearTimeout(setTimescroll);\n        ReachedMaxScroll = false;\n        PreviousScrollTop = 0;\n    };\n\n\n\n    componentWillUnmount() {\n        this.clearTime()\n    }\n\n    render() {\n        return <>\n            {({ ...this.props.children })}</>\n    }\n}\nexport default memo(ScrollAnimation);","import React, { PureComponent, Suspense } from \"react\";\nimport { isTagEmbed } from \"../../../../actions/api\";\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\n\nexport default class Network extends PureComponent {\n  render() {\n    const { network, networkClass, ThemeRule, isDefault, Personalization } = this.props;\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\n  }\n}\n","import \"./scss/ShopButton.scss\";\nimport { IS_THEME } from \"../../../../utils\";\nconst ShopButton = ({ ThemeRule, btnClass }) => {\n  const shopBtnStyle = { fontFamily: ThemeRule.css_font }\n  return <div className={`tb_shop_btn_wrap ${btnClass}`}>\n    <div className={`tb_shop_btn${ThemeRule.postHover || IS_THEME(4) || IS_THEME(55) ? ' tb_shop_btn_light' : ' tb_shop_btn_dark'}`} style={shopBtnStyle}>\n      {ThemeRule.shoppingText}\n    </div>\n  </div>\n}\n\n\nexport default ShopButton;","import React, { PureComponent } from \"react\";\nimport { themePostTracking, gtmAnalyticsAction } from '../../../../actions/themeActions'\nimport { isTagEmbed } from '../../../../actions/api'\n\nexport default class ShareOnHover extends PureComponent {\n\n\n  onClickData = (shareURL) => event => {\n    const { item, wallID, ownerId } = this.props;\n    event.stopPropagation();\n    if (!isTagEmbed) themePostTracking({\n      type: 2,\n      action: 2,\n      wall: wallID,\n      feed: item.feedId,\n      post: item.referenceId ? item.referenceId : item.id,\n      owner: ownerId\n    })\n    gtmAnalyticsAction(\"Tagbox\", \"shareUrl\", \"shareUrl\", shareURL)\n    window.open(shareURL, \"_blank\")\n  }\n\n  render() {\n    const { share, shareClass } = this.props;\n    return <div className={`tb_share_wrapper ${shareClass}`}>\n      <div className={`tb_share_button_ tb__icon ${isTagEmbed ? 'tb-share-fill' : 'tb-share'}`}><div></div></div>\n      <div className=\"tb_share_icon_list_wrap\">\n        {share.facebook ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.facebook)} className=\"tb_share_ico__ tb__icon tb-facebook\" title=\"facebook\"><div></div></div>\n          </div>\n          : ''}\n        {share.twitter ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.twitter)} className=\"tb_share_ico__  tb__icon tb-twitter\" title=\"twitter\"><div></div></div>\n          </div>\n          : ''}\n        {share.linkedin ?\n          <div className=\"tb_share_icon_list\">\n            <div onClick={this.onClickData(share.linkedin)} className=\"tb_share_ico__ tb__icon tb-linkedin\" title=\"linkedin\"><div></div></div>\n          </div>\n          : ''}\n      </div>\n    </div>\n  }\n}\n"],"names":["AuthorDetails","React","Media","trim_content_length","isSocialWall","isSocialEmbed","_ref","itemData","personalization","adjustWidth","ThemeRule","clickToShowPopUp","itemIndex","wallID","ownerId","postSizeInPx","wall","onClickPopUpSlider","postTrack","useRef","mediaType","type","postTextContent","trimcontent","PostTrimContent","content","responsiveCardSize2x","themeMode","postHover","isTagShop","isTagbox","backgroundColor","useEffect","suiteTrack","themeImpressionTracking","isHotspot","hotspot","ugc_products","length","isShopBtn","showAuthor","postAuthor","postTime","isPopUp","_jsx","id","concat","className","network","tabIndex","role","parseInt","ref","referenceId","feedId","children","onClick","_jsxs","share","status","ShareOnHover","shareClass","item","Suspense","fallback","_Fragment","ThemeID","widgetTheme","createdAt","author","font","SquarePhoto","Component","constructor","arguments","state","postData","videoRef","componentDidMount","heightUpdate","this","props","setTimeout","video","current","playPromise","play","undefined","then","catch","error","console","warn","componentDidUpdate","prevProps","prevState","render","_wall$Wall","completeDataObject","cardNumber","onClickToCTA","totalPostBestFit","ugcSuite","window","location","href","includes","isUgcSuite","Object","keys","FOR_TEST_SERVER","SocialWallServerTestUrl","SocialWallServerUrl","SocialWallEmbedServerUrl","ServerUrl","Wall","Personalization","fitRow","bestFitEachRow","ScrollAnimation","parentId","renderID","Masonry","elementType","options","transitionDuration","percentPosition","itemSelector","horizontalOrder","resize","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","enableResizableChildren","map","index","cardData","Card","owner","src","width","poster","preload","playsInline","loop","muted","kind","srcLang","label","connect","postHeight","data","dispatch","managePostHeight","scrollTime","DivElmnt","ReachedMaxScroll","PreviousScrollTop","setTimescroll","ScrollInterval","speedUpPixel","scrollDelay","_$70$50$30$20$scrol","scrollSpeedValue","_this","slideWall","onLoadScroll","clearData","prentId","document","querySelector","addEventListener","e","preventDefault","passive","scrollDiv_init","themeId","getElementById","scrollTop","onScrollData","onScrollWPosts","delay","speed","setInterval","scrollDiv","themeHeight","dataPost","themeContainer","getComputedStyle","getPropertyValue","innerHeight","clientHeight","style","editor","setAttribute","clearInterval","div","scrollHeight","offsetHeight","pauseDiv","clearTimeout","resumeDiv","_DivElmnt","clearTime","setState","componentWillUnmount","_objectSpread","memo","DefaultNetwork","Network","PureComponent","networkClass","isDefault","isDefaultIcon","icon","isTagEmbed","replace","btnClass","shopBtnStyle","fontFamily","css_font","IS_THEME","shoppingText","onClickData","shareURL","event","stopPropagation","themePostTracking","action","feed","post","gtmAnalyticsAction","open","facebook","title","twitter","linkedin"],"sourceRoot":""}