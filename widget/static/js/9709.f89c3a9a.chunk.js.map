{"version":3,"file":"static/js/9709.f89c3a9a.chunk.js","mappings":"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","sources":["app/Themes/Elements/Network/Network.js","app/Themes/RatingBadge/index.js"],"sourcesContent":["import React, { PureComponent, Suspense } from \"react\";\r\nimport { isTagEmbed } from \"../../../../actions/api\";\r\nconst DefaultNetwork = React.lazy(() => import(\"./DefaultNetwork\"));\r\n\r\nexport default class Network extends PureComponent {\r\n  render() {\r\n    const { network, networkClass, isDefault } = this.props;\r\n    const isDefaultIcon = isDefault ? (network.id === 7 || network.id === 4 || network.id === 36) ? false : true : false\r\n    const icon = isTagEmbed && network.id == 36 ? \"tagembed\" : network.icon;\r\n    return (isDefaultIcon ? <div className={`${networkClass} tb__icon tb-${icon.replace(/fa-/g, \"\")}`} aria-label={`post network ${network?.name || \"\"}`}><div></div></div> : <Suspense fallback={<></>}> <DefaultNetwork network={network} networkClass={networkClass} /></Suspense>);\r\n  }\r\n}\r\n","import React, { PureComponent, Suspense } from \"react\";\r\nimport Network from \"../Elements/Network/Network\";\r\nimport \"./scss/RatingBadge.scss\"\r\nconst AverageRating = React.lazy(() => import('../Elements/AverageRating/AverageRating'));\r\nconst SmallBranding = React.lazy(() => import('../Elements/Branding/SmallBranding'));\r\n\r\nexport default class RatingBadge extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      avgRate: 0,\r\n      totalReviews: 0\r\n    };\r\n  }\r\n\r\n  totalReviewNetworks = (reviewFilters) => {\r\n    const { wall } = this.props;\r\n    let avgReview = 0\r\n    let totalReview = 0\r\n    let append = []\r\n    reviewFilters.map((item, index) => {\r\n      const items = item.Network\r\n      avgReview += items.averageReviews * items.totalReviews;\r\n      totalReview += items.totalReviews;\r\n      append.push(index < 5 ? <div key={index} className=\"tb_rb_social_list\" role=\"listitem\" aria-label={items?.name}>\r\n        <Network\r\n          networkClass={\"tb_rb_avg_social_ico\"}\r\n          network={items}\r\n          isDefault={true}\r\n          ThemeRule={wall.ThemeRule}\r\n        />\r\n      </div>\r\n        : null)\r\n    })\r\n    this.setState({\r\n      avgRate: (avgReview / totalReview).toFixed(1),\r\n      totalReviews: totalReview\r\n    })\r\n    return append\r\n  }\r\n\r\n\r\n  render() {\r\n    const { postData, reviewFilters, wall, languageSetting, isFreeAdsStatus } = this.props;\r\n    const { avgRate, totalReviews } = this.state\r\n    const cardStyle = { backgroundColor: wall.ThemeRule.cardColor, borderRadius: wall.ThemeRule.radius };\r\n\r\n    return (\r\n      <div className={`tb_rb_post_container tb_rb_size_${wall.ThemeRule.cardSize} tb_rb_position_${wall.ThemeRule.cardPosition}`} style={cardStyle}>\r\n        <div className=\"tb_rb_post_wrap\">\r\n          <div className=\"tb_rb_social_\" role=\"list\">\r\n            {this.totalReviewNetworks(reviewFilters)}\r\n          </div>\r\n          <div className=\"tb_rb_rating_wrap\">\r\n            <div className={`tb_rb__title tb-cTBfont-${wall.ThemeRule.font_varient}`}>Reviews</div>\r\n            <div className={`tb_rb_avg_rating tb-cTBfont-${wall.ThemeRule.font_varient}`} aria-label={`Rating ${avgRate}`}>{avgRate}</div>\r\n            <Suspense fallback={<></>}>\r\n              <AverageRating size={18} rating={avgRate} />\r\n            </Suspense>\r\n            <div className={`tb_rb_based_on tb-cTBfont-${wall.ThemeRule.font_varient}`} aria-label={`Based on ${totalReviews} reviews`}>Based on <div className=\"tb_rb_based_on_count\">{totalReviews}</div> reviews</div>\r\n            {isFreeAdsStatus ? <Suspense fallback={<></>}><SmallBranding languageSetting={languageSetting} wallId={wall.Wall.id} themeID={wall.Personalization.widgetTheme} isCenter={true} /> </Suspense> : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"],"names":["DefaultNetwork","React","Network","PureComponent","render","network","networkClass","isDefault","this","props","isDefaultIcon","id","icon","isTagEmbed","_jsx","className","concat","replace","name","children","_jsxs","Suspense","fallback","_Fragment","AverageRating","SmallBranding","RatingBadge","constructor","super","totalReviewNetworks","reviewFilters","wall","avgReview","totalReview","append","map","item","index","items","averageReviews","totalReviews","push","role","ThemeRule","setState","avgRate","toFixed","state","postData","languageSetting","isFreeAdsStatus","cardStyle","backgroundColor","cardColor","borderRadius","radius","cardSize","cardPosition","style","font_varient","size","rating","wallId","Wall","themeID","Personalization","widgetTheme","isCenter"],"sourceRoot":""}