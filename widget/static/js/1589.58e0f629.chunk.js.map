{"version":3,"file":"static/js/1589.58e0f629.chunk.js","mappings":"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","sources":["app/Themes/ClassicCard/Elements/ShareAndSocialActions.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { convertToAtob } from '../../../../utils'\r\nimport { isTagEmbed } from \"../../../../actions/api\";\r\n\r\nconst NetworkLike = (networkID, postID, Link) => {\r\n  switch (networkID) {\r\n    case 1:\r\n      return `https://twitter.com/intent/favorite?tweet_id=${convertToAtob(postID)}`\r\n    default:\r\n      return Link\r\n  }\r\n}\r\n\r\nconst NetworkComment = (networkID, postID, Link) => {\r\n  switch (networkID) {\r\n    case 1:\r\n      return `https://twitter.com/intent/tweet?in_reply_to=${convertToAtob(postID)}`\r\n    default:\r\n      return Link\r\n  }\r\n}\r\nconst ShareAndSocialActions = ({ itemData, ThemeRule }) => {\r\n  const actionButtonHandler = (event, callback) => {\r\n    event.stopPropagation();\r\n    callback();\r\n  }\r\n  const iconColorStyle = { color: ThemeRule.fontColor }\r\n\r\n  const networkID = itemData.network.id\r\n\r\n  const likeIcon = (networkID === 3 || networkID === 10) ? 'like' : 'heart-outline';\r\n\r\n  const commentIcon = (networkID === 1) ? 'reply' : 'comment';\r\n\r\n  const onlyShareActive = itemData.share.status && ![29, 1, 3, 4, 7, 8, 10, 11].includes(networkID) ? true : false;\r\n  const likeIconStatus = [1, 2, 3, 7, 8, 9, 10, 18, 19, 23, 26, 29, 30].includes(networkID) ? true : false\r\n  const commentIconStatus = [29, 11, 19, 23, 26, 29, 30].includes(networkID) ? false : true\r\n  const socialActionStatusNetwork = [12, 15, 20, 21, 29, 11, 19, 23, 26, 29, 30].includes(networkID) ? false : true\r\n  return <>\r\n    {(likeIconStatus && ThemeRule.socialAction) || itemData.share.status ?\r\n      <div className={`tb_cc_social_actions_ ${onlyShareActive ? 'tb_cc_social_share_only__' : 'tb_cc_social_actions_only__'}`} style={(!ThemeRule.socialAction || !socialActionStatusNetwork) ? { justifyContent: `flex-end` } : null}>\r\n        {ThemeRule.socialAction ? <>\r\n          {(socialActionStatusNetwork) ? <>\r\n            {likeIconStatus ? <div className=\"tb_cc_social_action__list\" role=\"listitem\" aria-roledescription=\"post social share links\">\r\n              <div onClick={event => actionButtonHandler(event, () => window.open(NetworkLike(networkID, itemData.postId, itemData.link), \"_blank\"))} className=\"tb_social_action__ico_wrap\" aria-label={`like count ${itemData?.like_count || 0}`} role=\"button\" tabIndex=\"0\">\r\n                <div className={`tb_cc_social_action_ico__ tb__icon tb-${likeIcon}`} style={iconColorStyle}> </div>\r\n                <div className=\"tb_cc_social_action_counts__\" style={iconColorStyle}>{isTagEmbed ? (itemData.like_count) : 'Like'}</div>\r\n              </div>\r\n            </div> : null}\r\n            {commentIconStatus ? <div className=\"tb_cc_social_action__list\" role=\"listitem\" aria-roledescription=\"post social share links\">\r\n              <div onClick={event => actionButtonHandler(event, () => window.open(NetworkComment(networkID, itemData.postId, itemData.link), \"_blank\"))} className=\"tb_social_action__ico_wrap\" aria-label={`comment count ${itemData?.comment_count || 0}`} role=\"button\" tabIndex=\"0\">\r\n                <div className={`tb_cc_social_action_ico__ tb__icon tb-${commentIcon}`} style={iconColorStyle}> </div>\r\n                <div className=\"tb_cc_social_action_counts__\" style={iconColorStyle}>{isTagEmbed ? (itemData.comment_count) : networkID === 1 ? 'Reply' : 'Comment'}\r\n                </div>\r\n              </div>\r\n            </div> : null}\r\n            {networkID === 1 ?\r\n              <div className=\"tb_cc_social_action__list\" role=\"listitem\" aria-roledescription=\"post social share links\">\r\n                <div onClick={event => actionButtonHandler(event, () => window.open(`https://twitter.com/intent/retweet?tweet_id=${convertToAtob(itemData.postId)}`, \"_blank\"))} className=\"tb_social_action__ico_wrap\" aria-label={`Twitter Retweet url link`} role=\"button\" tabIndex=\"0\">\r\n                  <div className=\"tb_cc_social_action_ico__ tb__icon tb-retweet\" style={iconColorStyle}> </div>\r\n                  <div className=\"tb_cc_social_action_counts__\" style={iconColorStyle}>Retweet</div>\r\n                </div>\r\n              </div>\r\n              : ''}\r\n            {onlyShareActive ?\r\n              <div className=\"tb_cc_social_action__list\" role=\"listitem\" aria-roledescription=\"post social share links\">\r\n                <div onClick={event => actionButtonHandler(event, () => window.open(itemData.link, \"_blank\"))} className=\"tb_social_action__ico_wrap\" aria-label={`Post detail view url link`} role=\"button\" tabIndex=\"0\">\r\n                  <div className=\"tb_cc_social_action_ico__ tb__icon tb-eye\" style={iconColorStyle}> </div>\r\n                  <div className=\"tb_cc_social_action_counts__\" style={iconColorStyle}>View</div>\r\n                </div>\r\n              </div>\r\n              : ''}\r\n          </> : ''}\r\n        </> : ''}\r\n        {itemData.share.status ?\r\n          <div className={`tb_cc_action_counts_wrap${!ThemeRule.socialAction ? ` tb_cc_action_share_wrap` : ``}`}>\r\n            <div className=\"tb_cc_action_ico tb__icon tb-share\" style={iconColorStyle}> </div>\r\n            <div className=\"tb_cc_action_counts\" style={iconColorStyle}>Share</div>\r\n            <div className=\"tb_cc_share_wrapper_dropdown\">\r\n              <div className=\"tb_cc_share_icon_list\" role=\"list\">\r\n                {(itemData.share.facebook) && <div onClick={event => actionButtonHandler(event, () => window.open(itemData.share.facebook, \"_blank\"))} className=\"tb_cc_share_list_in\" role=\"listitem\" aria-roledescription=\"post social facebook share links\">\r\n                  <div className=\"tb_cc_share_ico__ tb__icon tb-facebook\"> </div>\r\n                  <div className=\"tb_cc_share_ico_txt\">Facebook</div>\r\n                </div>}\r\n                {(itemData.share.twitter) && <div onClick={event => actionButtonHandler(event, () => window.open(itemData.share.twitter, \"_blank\"))} className=\"tb_cc_share_list_in\" role=\"listitem\" aria-roledescription=\"post social twitter share links\">\r\n                  <div className=\"tb_cc_share_ico__ tb__icon tb-twitter\"></div>\r\n                  <div className=\"tb_cc_share_ico_txt\">Twitter</div>\r\n                </div>}\r\n                {(itemData.share.linkedin) && <div onClick={event => actionButtonHandler(event, () => window.open(itemData.share.linkedin, \"_blank\"))} className=\"tb_cc_share_list_in\" role=\"listitem\" aria-roledescription=\"post social linkedin share links\">\r\n                  <div className=\"tb_cc_share_ico__ tb__icon tb-linkedin\"> </div>\r\n                  <div className=\"tb_cc_share_ico_txt\">LinkedIn</div>\r\n                </div>}\r\n              </div>\r\n            </div>\r\n          </div> : ''}\r\n      </div>\r\n      : null}\r\n  </>\r\n}\r\nexport default ShareAndSocialActions"],"names":["_ref","itemData","ThemeRule","actionButtonHandler","event","callback","stopPropagation","iconColorStyle","color","fontColor","networkID","network","id","likeIcon","commentIcon","onlyShareActive","share","status","includes","likeIconStatus","commentIconStatus","socialActionStatusNetwork","_jsx","_Fragment","children","socialAction","_jsxs","className","concat","style","justifyContent","role","onClick","window","open","NetworkLike","postID","Link","convertToAtob","postId","link","like_count","tabIndex","isTagEmbed","NetworkComment","comment_count","facebook","twitter","linkedin"],"sourceRoot":""}