{"version":3,"file":"static/js/1442.636ad28d.chunk.js","mappings":"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","sources":["app/Themes/ReelTheme/Elements/Media.js","app/Themes/ReelTheme/Elements/Card.js","app/Themes/ReelTheme/index.js"],"sourcesContent":["import React, { Suspense } from \"react\";\r\nconst Image = React.lazy(() => import('../../Elements/Media/Image'));\r\nconst Video = React.lazy(() => import('../../Elements/Media/Video'));\r\nconst MediaIcon = React.lazy(() => import('../../Elements/MediaIcon/MediaIcon'));\r\nconst Media = ({ itemData, wallID, wall, ownerId, isVisible }) => {\r\n\r\n  const isVideo = (itemData.type === 3 || itemData.type === 5) && isVisible && (wall.ThemeRule.autoPlay == 1) ? true : false\r\n  return <div className=\"tb_rt_media_wrap\" role=\"button\" tabIndex=\"0\" aria-label=\"Pop Up Button\">\r\n    <Suspense fallback={<></>}><MediaIcon itemData={itemData} IconClass=\"tb_rt_media_icon\" show={true} hideVideo={true} /></Suspense>\r\n    {isVideo ?\r\n      <Suspense fallback={<></>}><Video VideoClass=\"tb_rt_video\" data={itemData} wallID={wallID} themeID={wall.Personalization.widgetTheme} ownerId={ownerId} size={178} isCover={true} muted={true} autoPlay={true} /></Suspense>\r\n      :\r\n      <Suspense fallback={<></>}><Image ImageClass=\"tb_rt_image\" data={itemData} wallID={wallID} themeID={wall.Personalization.widgetTheme} ownerId={ownerId} size={178} /></Suspense>\r\n    }\r\n  </div>\r\n}\r\nexport default Media","import React, { PureComponent, Suspense } from \"react\";\r\nimport Media from \"./Media\";\r\nimport { themeImpressionTracking } from \"../../../../utils\";\r\nimport { isTagShop, isTagEmbed, suiteTrack, isTagbox } from \"../../../../actions/api\";\r\n\r\nconst Network = React.lazy(() => import('../../Elements/Network/Network'));\r\nconst ShopButton = React.lazy(() => import('../../Elements/ShopButton/ShopButton'));\r\nconst ViewCount = React.lazy(() => import('../../Elements/ViewCount'));\r\n\r\n\r\nexport default class Card extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.mediaHeight = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    const { itemData, onClickPopUpSlider, itemIndex } = this.props\r\n    if (suiteTrack || isTagShop) themeImpressionTracking(this.mediaHeight)\r\n    if (itemData.isPopUp) {\r\n      onClickPopUpSlider(itemIndex, itemData)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { itemData, itemIndex, wallID, ownerId, wall, isVisible, clickToShowPopUp, ThemeRule, personalization } = this.props;\r\n    const isProduct = itemData.ugc_products && itemData.ugc_products.length > 0 ? true : false\r\n    const cardStyle = { backgroundColor: ThemeRule.cardColor };\r\n    const isShopBtn = isTagShop && ThemeRule.shoppingText != '' && (isProduct) && !ThemeRule.hideContent ? true : false;\r\n    const isShopIcon = isTagShop && (isProduct && itemData.hotspot === 0) ? true : false\r\n    const isHotspot = isTagShop && itemData.hotspot && isProduct ? true : false\r\n    const themeMode = (ThemeRule.postHover == 0 && isTagShop) ? 'light' : 'dark'\r\n    const isVideo = (itemData.type === 3 || itemData.type === 5) ? true : false\r\n\r\n\r\n    return <div item-id={itemData.id} id={`tb-hc-post-${itemData.id}`} className=\"tb_rt_post_wrapper\" ref={this.mediaHeight} post-id={itemData.referenceId ? itemData.referenceId : itemData.id} feed-id={itemData.feedId} style={{ padding: wall.Personalization.padding / 2 }} tb-product={isShopIcon ? 1 : isHotspot ? 2 : 0} area-label={itemData.content} role=\"article\" tabIndex=\"0\">\r\n      <div className={`tb_rt_post_in tb_icon_animate ${!isTagShop ? 'tb_rt_post_in_animate' : ''}`} style={cardStyle} onClick={clickToShowPopUp(itemIndex, itemData)} role=\"button\" aria-roledescription=\"Click to open pop up\" tabIndex={\"0\"}>\r\n        <div className=\"tb_rt_post_media_wrapp\" role=\"button\" tabIndex=\"0\" aria-label=\"Pop Up Button\">\r\n          {isVideo && ThemeRule.showReelsView == 1 && itemData?.views > 0 ? <Suspense fallback={<></>}><ViewCount count={itemData?.views} /></Suspense> : null}\r\n\r\n          <Suspense fallback={<></>}><Media key={`img${itemIndex}_${itemData.id}`} itemData={itemData} wallID={wallID} wall={wall} ownerId={ownerId} preload={itemIndex == 0 ? true : false} isVisible={isVisible} /></Suspense>\r\n          {!isTagShop ?\r\n            <div className=\"tb_rt_play_ico\">\r\n              <div className=\"tb__icon tb-play\"><div></div></div>\r\n            </div>\r\n            : null}\r\n          <div className=\"tb_rt_post_details\">\r\n            <div className=\"tb_rt_social_\">\r\n            <Suspense fallback={<></>}><Network networkClass={'tb_rt_social_ico_'} network={itemData.network} ThemeRule={ThemeRule} isDefault={ThemeRule.iconType === 1 ? true : false} Personalization={personalization} /></Suspense>\r\n            </div>\r\n            {isShopBtn ? <Suspense fallback={<></>}><ShopButton ThemeRule={ThemeRule} btnClass={'tb_rt_btn_wrap'} /></Suspense> : null}\r\n          </div>\r\n          <div className={`tb_rt_post_overlay tb_rt_post_overlay-${themeMode}`}><div></div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n","import React, { Component, memo } from \"react\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport { connect } from \"react-redux\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay, FreeMode, Mousewheel } from 'swiper/modules';\r\nimport 'swiper/css';\r\nimport 'swiper/css/autoplay';\r\nimport 'swiper/css/free-mode';\r\nimport 'swiper/css/mousewheel';\r\nimport './scss/ReelTheme.scss'\r\n\r\nimport Card from \"./Elements/Card\";\r\nimport { getDataNextSteps } from '../../../actions/themeActions'\r\nimport { isTagShop, isTagbox } from '../../../actions/api'\r\n\r\nclass ReelTheme extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.inputRefs = {};\r\n  }\r\n  requestData = (swiper) => {\r\n    const { appendData, wall, preRender, hasMoreData, getDataNextSteps, loaderData } = this.props;\r\n    if (swiper.progress > 0.8 && hasMoreData && !loaderData.isShowMoreLoading) {\r\n      getDataNextSteps(\r\n        wall.Wall.id,\r\n        Math.floor(Date.now() / 1000),\r\n        wall.ThemeRule.numberOfPosts,\r\n        appendData.networkID,\r\n        appendData.after,\r\n        preRender,\r\n        appendData.heightEvent\r\n      );\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      const classNameRole = document.querySelectorAll('.splide__slide');\r\n      classNameRole.forEach((element, index) => {\r\n        element.removeAttribute(\"role\");\r\n      });\r\n    }, 100);\r\n    const { postData } = this.props;\r\n\r\n    if (postData && postData.length == 1) {\r\n\r\n      let arrow_left_id = document.querySelector(\".tb_rt_arrow_left__\")\r\n      let arrow_right_id = document.querySelector(\".tb_rt_arrow_right__\")\r\n      if (arrow_left_id && arrow_right_id) {\r\n        document.querySelector(\".tb_rt_arrow_left__\").style = 'display:none'\r\n        document.querySelector(\".tb_rt_arrow_right__\").style = 'display:none'\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  reScrolled = () => {\r\n\r\n    setTimeout(() => {\r\n      let splide__list = document.querySelector('.splide__list');\r\n      let getWidth = document.querySelector(\".splide__slide\").offsetWidth;\r\n      const isVisibleAll = document.querySelectorAll('.splide__slide.is-visible').length;\r\n      const isVisible = document.querySelector('.splide__slide.is-active.is-visible');\r\n      const str = isVisible.getAttribute('aria-label').substring(0, 2)\r\n      const getIndex = Number(str) + (isVisibleAll - 1) + isVisibleAll\r\n      if (getIndex > 0) {\r\n        splide__list.style.transition = '0s ease';\r\n        splide__list.style.transform = `translateX(-${(getIndex * getWidth)}px)`;\r\n\r\n      } else {\r\n        splide__list.style.transform = `translateX(0px)`;\r\n      }\r\n    }, 200);\r\n  }\r\n\r\n\r\n  componentDidUpdate() {\r\n    const value = Object.values(this.inputRefs)[0];\r\n    const { postData, completeDataObject, onClickPopUpSlider, parentID } = this.props;\r\n    if (value && Object.values(value)[5].length > 0) {\r\n      let data = Object.values(value)[5]\r\n      data.map((item, itemIndex) => {\r\n        if (item.classList) {\r\n          const filterID = String(item.classList.value).split(\" \").filter((fCheck) => String(fCheck).includes(\"tb_\"))\r\n          var getID = filterID[0]\r\n          if (String(filterID[0]).includes(\"tb_\")) {\r\n            getID = String(filterID[0]).replace(\"tb_\", \"\")\r\n          }\r\n          const findIndex = postData.findIndex((find) => find == getID)\r\n          let clickD = document.querySelectorAll(`.tb_rt_post_container #${item.id}`)\r\n          for (let index = 0; index < clickD.length; index++) {\r\n            let clickDD = clickD[index];\r\n            let p_id = clickDD.getAttribute('p_id')\r\n            if (String(parentID) === String(p_id)) {\r\n              clickDD.addEventListener('click', event => {\r\n                event.preventDefault();\r\n                const itemData = completeDataObject[getID]\r\n                onClickPopUpSlider(findIndex, itemData)\r\n              });\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { postData, completeDataObject, wall, clickToShowPopUp, hasMoreData, parentID, keyRender, onClickPopUpSlider } = this.props;\r\n    const inputName = parentID;\r\n    //const { windowWidth } = this.state;\r\n    const numberOfCoumn = wall.ThemeRule.numberOfCoumn;\r\n    const mobileColumn = wall.ThemeRule.mobileColumn;\r\n    const slidePost = wall.ThemeRule.slidePost;\r\n    const slideDuration = wall.ThemeRule.slideDuration;\r\n    const trimContent = wall.Personalization.trimcontent === 1 ? true : false;\r\n    const isSlidePerView = isTagbox && [151513].includes(wall.Wall.owner) ? 0 : 0.6\r\n    return <>{parentID != \"\" ?\r\n      <div className=\"tb_rt_post_container\" ref={this.sliderHeight}>\r\n        <Swiper\r\n          key={keyRender}\r\n          ref={(parentID) => this.inputRefs[inputName] = parentID}\r\n          style={{ width: '100%' }}\r\n          onScroll={(swiper) => this.requestData(swiper)}\r\n          onSlideChange={(swiper) => this.requestData(swiper)}\r\n          onAutoplay={(swiper) => this.requestData(swiper)}\r\n          autoHeight={true}\r\n          speed={700}\r\n          edgeSwipeDetection={true}\r\n          slidesPerView={'auto'}\r\n          touchRatio={2}\r\n          cssMode={isMobile}\r\n          passiveListeners={true}\r\n          height={'250px'}\r\n          freeMode={{ enabled: true, sticky: false, momentumBounceRatio: 2, momentumVelocityRatio: 3 }}\r\n          autoplay={isTagShop || isTagbox ? { delay: slidePost === 1 ? slideDuration * 1000 : 99000, disableOnInteraction: false, pauseOnMouseEnter: true, } : false}\r\n          loop={!hasMoreData}\r\n          breakpoints={{\r\n            0: {\r\n              slidesPerView: mobileColumn == 0 ? 1 + isSlidePerView : parseInt(mobileColumn) + isSlidePerView\r\n            },\r\n            480: {\r\n              slidesPerView: mobileColumn == 0 ? 1 + isSlidePerView : parseInt(mobileColumn) + isSlidePerView\r\n            },\r\n            575: {\r\n              slidesPerView: mobileColumn == 0 ? 2 + isSlidePerView : parseInt(mobileColumn) + isSlidePerView\r\n            },\r\n            767: {\r\n              slidesPerView: numberOfCoumn == 0 ? 3 + isSlidePerView : parseInt(numberOfCoumn) + isSlidePerView\r\n            },\r\n            1024: {\r\n              slidesPerView: numberOfCoumn == 0 ? 5 + isSlidePerView : parseInt(numberOfCoumn) + isSlidePerView\r\n            },\r\n            1400: {\r\n              slidesPerView: numberOfCoumn == 0 ? 6 + isSlidePerView : parseInt(numberOfCoumn) + isSlidePerView\r\n            },\r\n            1600: {\r\n              slidesPerView: numberOfCoumn == 0 ? 7 + isSlidePerView : parseInt(numberOfCoumn) + isSlidePerView\r\n            }\r\n          }}\r\n          mousewheel={{ forceToAxis: true, sensitivity: 2 }}\r\n          watchSlidesProgress={true}\r\n          modules={[Autoplay, Mousewheel, FreeMode]} className={`tb_rt_post_slider`}>\r\n          <>\r\n            {\r\n              ((postData && postData.length > 0)) && postData.map((item, index) => {\r\n                const cardData = completeDataObject[item];\r\n                return (isTagShop || (cardData.type != 1)) ? <SwiperSlide style={{ margin: 0, padding: 0, }} key={index} p_id={parentID} className={`tb_${cardData.id}`} >\r\n                  {({ isVisible }) => <Card isVisible={isVisible} ownerId={wall.Wall.owner} itemData={cardData} itemIndex={index} personalization={wall.Personalization} ThemeRule={wall.ThemeRule} wallID={wall.Wall.id} clickToShowPopUp={clickToShowPopUp} wall={wall} onClickPopUpSlider={onClickPopUpSlider} />}\r\n                </SwiperSlide> : null\r\n              })}\r\n          </>\r\n        </Swiper>\r\n      </div> : null}</>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loaderData: state.loaderData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getDataNextSteps: (wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow) => dispatch(getDataNextSteps(wallID, timeStamp, postCount, networkId, after, postData, heightEvent, updateInStateNow)),\r\n  }\r\n}\r\nexport default memo(connect(mapStateToProps, mapDispatchToProps)(ReelTheme));"],"names":["Image","React","Video","MediaIcon","_ref","itemData","wallID","wall","ownerId","isVisible","isVideo","type","ThemeRule","autoPlay","_jsxs","className","role","tabIndex","children","_jsx","Suspense","fallback","_Fragment","IconClass","show","hideVideo","VideoClass","data","themeID","Personalization","widgetTheme","size","isCover","muted","ImageClass","Network","ShopButton","ViewCount","Card","PureComponent","constructor","props","super","this","mediaHeight","componentDidMount","onClickPopUpSlider","itemIndex","suiteTrack","isTagShop","themeImpressionTracking","isPopUp","render","clickToShowPopUp","personalization","isProduct","ugc_products","length","cardStyle","backgroundColor","cardColor","isShopBtn","shoppingText","hideContent","isShopIcon","hotspot","isHotspot","themeMode","postHover","id","concat","ref","referenceId","feedId","style","padding","content","onClick","showReelsView","views","count","Media","preload","networkClass","network","isDefault","iconType","btnClass","ReelTheme","Component","requestData","swiper","appendData","preRender","hasMoreData","getDataNextSteps","loaderData","progress","isShowMoreLoading","Wall","Math","floor","Date","now","numberOfPosts","networkID","after","heightEvent","reScrolled","setTimeout","splide__list","document","querySelector","getWidth","offsetWidth","isVisibleAll","querySelectorAll","str","getAttribute","substring","getIndex","Number","transition","transform","inputRefs","forEach","element","index","removeAttribute","postData","arrow_left_id","arrow_right_id","componentDidUpdate","value","Object","values","completeDataObject","parentID","map","item","classList","filterID","String","split","filter","fCheck","includes","getID","replace","findIndex","find","clickD","clickDD","p_id","addEventListener","event","preventDefault","keyRender","inputName","numberOfCoumn","mobileColumn","slidePost","slideDuration","isSlidePerView","trimcontent","isTagbox","owner","sliderHeight","Swiper","width","onScroll","onSlideChange","onAutoplay","autoHeight","speed","edgeSwipeDetection","slidesPerView","touchRatio","cssMode","isMobile","passiveListeners","height","freeMode","enabled","sticky","momentumBounceRatio","momentumVelocityRatio","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","loop","breakpoints","parseInt","mousewheel","forceToAxis","sensitivity","watchSlidesProgress","modules","Autoplay","Mousewheel","FreeMode","cardData","SwiperSlide","margin","memo","connect","state","dispatch","timeStamp","postCount","networkId","updateInStateNow"],"sourceRoot":""}